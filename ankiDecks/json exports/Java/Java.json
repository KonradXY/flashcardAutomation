{
    "__type__": "Deck",
    "children": [
        {
            "__type__": "Deck",
            "children": [],
            "crowdanki_uuid": "0b757790-fb01-11e9-850e-fc3fdb11e8d6",
            "deck_config_uuid": "382713e5-faf3-11e9-9fd4-fc3fdb11e8d6",
            "desc": "",
            "dyn": 0,
            "extendNew": 10,
            "extendRev": 50,
            "media_files": [
                "1-SingletonPatternImage.jpg",
                "10-FlyweightPatternImage.jpg",
                "11-CompositePatternImage.jpg",
                "12-BridgePatternImage.jpg",
                "13-VisitorPatternImage.jpg",
                "13-VisitorPatternImage1.jpg",
                "14-ObserverPatternImage.jpg",
                "15-StrategyPatternImage.jpg",
                "16-TemplateMethodPatternImage.jpg",
                "17-CommandPatternImage.jpg",
                "17-CommandPatternImage1.jpg",
                "18-IteratorPatternImage.jpg",
                "19-MementoPatternImage.jpg",
                "19-MementoPatternImage1.jpg",
                "19-MementoPatternImage2.jpg",
                "2-PrototypePatternImage.jpg",
                "2-PrototypePatternImage1.jpg",
                "2-PrototypePatternImage2.jpg",
                "2-PrototypePatternImage3.jpg",
                "20-StatePatternImage.jpg",
                "21-MediatorPatternImage.jpg",
                "21-MediatorPatternImage1.jpg",
                "21-MediatorPatternImage2.jpg",
                "22-ChainofResponsibilityPatternImage.jpg",
                "3-BuilderpatternImage.jpg",
                "4-FactoryMethodPatternImage.jpg",
                "4-FactoryMethodPatternImage1.jpg",
                "5-AbstractFactoryPatternImage.jpg",
                "6-ProxyPatternImage.jpg",
                "6-ProxyPatternImage1.jpg",
                "7-DecoratorPatternImage.jpg",
                "7-DecoratorPatternImage1.jpg",
                "7-DecoratorPatternImage2.jpg",
                "8-AdapterpatternImage.jpg",
                "8-AdapterpatternImage1.jpg",
                "8-AdapterpatternImage2.jpg",
                "8-AdapterpatternImage3.jpg",
                "9-FacadePatternImage.jpg"
            ],
            "name": "DesignPattern",
            "notes": [
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"width: 846px; padding: 8px; border: 1px solid;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   13 - Visitor Pattern.&nbsp; &nbsp; can you give the gof definition of the visitor pattern ?  </div></td></tr>",
                        "<tr> <td style=\"width: 846px; padding: 8px; border: 1px solid;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">    Represent an operation to be performed on the elements of an object structure. Visitor lets you define a new operation without changing the classes of the elements on which it operates.  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <img src=\"13-VisitorPatternImage.jpg\" type=\"image/jpeg\" data-filename=\"Image.jpg\" width=\"408\">  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "ReZl?k`J1[",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   13 - Visitor Pattern.&nbsp; &nbsp; can you define a simple implementation of the visitor pattern ?  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">    Here’s the implementation.  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <br>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">package jdp2e.visitor.demo;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">interface OriginalInterface</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;//The following method has a Visitor argument.</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;void acceptVisitor(Visitor visitor);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">class MyClass implements OriginalInterface</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;//Here \"myInt\" is final.So, once initialized, it should not be changed.</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;private final int myInt;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public MyClass()</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;myInt=5;//Initial or default value</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public int getMyInt()</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;return myInt;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;@Override</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public void acceptVisitor(Visitor visitor)</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;visitor.visit(this);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">interface Visitor</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;//The method to visit MyClass</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;void visit(MyClass myClassObject);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">class ConcreteVisitor implements Visitor</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;@Override</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public void visit(MyClass myClassObject)</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\"Current value of myInt=\"+ myClassObject.getMyInt());</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\"Visitor will make it double and display it.\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\"Current value of myInt=\"+ 2*myClassObject.getMyInt());</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\"Exiting from Visitor.\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">public class VisitorPatternExample {</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public static void main(String[] args) {</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\"***Visitor Pattern Demo***\\n\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;Visitor visitor = new ConcreteVisitor();</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;MyClass myClass = new MyClass();</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;myClass.acceptVisitor(visitor);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">}</font>  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "c^/=Lc`5qZ",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   13 - Visitor Pattern.&nbsp; &nbsp; Can you give a complex example of the visitor pattern ?  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">    You have already seen a very simple example of the visitor design pattern. But you can exercise the true power of this design pattern when you combine it with the composite pattern (see Chapter&nbsp;   <a href=\"https://learning.oreilly.com/library/view/java-design-patterns/9781484240786/html/395506_2_En_11_Chapter.xhtml\">11</a>). So, let’s examine a scenario where you need to combine both the composite pattern and the visitor pattern.  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <img src=\"13-VisitorPatternImage1.jpg\" type=\"image/jpeg\" data-filename=\"Image.jpg\" width=\"610\">  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "l;(Z<02-}&",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   13 - Visitor Pattern.&nbsp; &nbsp; can you give a more complex implementation of the visitor pattern ?  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   &nbsp;  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   Here’s the modified implementation.  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <br>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">package jdp2e.visitor.modified.demo;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">import java.util.ArrayList;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">import java.util.List;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">interface Employee</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;void printStructures();</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;//The following method has a Visitor argument.</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;void acceptVisitor(Visitor visitor);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">//Employees who have Subordinates</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">class CompositeEmployee implements Employee</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;private String name;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;private String dept;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;//New field for this example.</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;//It is tagged with \"final\", so visitor cannot modify it.</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;private final int &nbsp;yearsOfExperience;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;//The container for child objects</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;private List&lt;Employee&gt; controls;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;// Constructor</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public CompositeEmployee(String name,String dept, int experience)</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;this.name = name;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;this.dept = dept;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;this.yearsOfExperience = experience;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;controls = new ArrayList&lt;Employee&gt;();</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public void addEmployee(Employee e)</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;controls.add(e);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public void removeEmployee(Employee e)</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;controls.remove(e);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;// Gets the name</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public String getName()</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;return name;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;// Gets the department name</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public String getDept()</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;return dept;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;// Gets the yrs. of experience</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public int getExperience()</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;return yearsOfExperience;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public List&lt;Employee&gt; getControls()</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;return this.controls;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;@Override</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public void printStructures()</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\"\\t\" + getName() + \" works in &nbsp;\" + getDept() + \" Experience :\" + getExperience() + \" years\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;for(Employee e: controls)</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;e.printStructures();</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;@Override</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public void acceptVisitor(Visitor visitor)</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;visitor.visitTheElement(this);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">class SimpleEmployee implements Employee</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;private String name;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;private String dept;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;//New field for this example</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;private int yearsOfExperience;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;//Constructor</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public SimpleEmployee(String name, String dept, int experience)</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;this.name = name;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;this.dept = dept;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;this.yearsOfExperience = experience;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;// Gets the name</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public String getName()</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;return name;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;// Gets the department name</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public String getDept()</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;return this.dept;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;// Gets the yrs. of experience</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public int getExperience()</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;return yearsOfExperience;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;@Override</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public void printStructures()</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\"\\t\\t\" + getName() + \" works in &nbsp;\" + getDept() + \" Experience :\" + getExperience() + \" years\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;@Override</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public void acceptVisitor(Visitor visitor)</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;visitor.visitTheElement(this);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">interface Visitor</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;void visitTheElement(CompositeEmployee employees);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;void visitTheElement(SimpleEmployee employee);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">class ConcreteVisitor implements Visitor</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;@Override</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public void visitTheElement(CompositeEmployee employee)</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;//We'll promote them if experience is greater than 15 years</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;boolean eligibleForPromotion = employee.getExperience() &gt; 15 ? true : false;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\"\\t\\t\" + employee.getName() + \" from &nbsp;\" + employee.getDept() + \" is eligible for promotion? \" + eligibleForPromotion);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;@Override</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public void visitTheElement(SimpleEmployee employee)</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;//We'll promote them if experience is greater than 12 years</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;boolean eligibleForPromotion = employee.getExperience() &gt; 12 ? true : false;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\"\\t\\t\" + employee.getName() + \" from &nbsp;\" + employee.getDept() + \" is eligible for promotion? \" + eligibleForPromotion);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">public class ModifiedVisitorPatternExample {</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public static void main(String[] args) {</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\"***Visitor Pattern combined with Composite Pattern Demo***\\n\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;/*2 teachers other than HOD works in</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp; Mathematics department*/</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;SimpleEmployee mathTeacher1 = new SimpleEmployee(\"Math Teacher-1\",\"Maths\",13);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;SimpleEmployee mathTeacher2 = new SimpleEmployee(\"Math Teacher-2\",\"Maths\",6);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;/* 3 teachers other than HOD works in</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Computer Sc. department*/</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;SimpleEmployee cseTeacher1 = new SimpleEmployee(\"CSE Teacher-1\",\"Computer Sc.\",10);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;SimpleEmployee cseTeacher2 = new SimpleEmployee(\"CSE Teacher-2\", \"Computer Sc.\",13);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;SimpleEmployee cseTeacher3 = new SimpleEmployee(\"CSE Teacher-3\", \"Computer Sc.\",7);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;//The College has 2 Head of Departments-One from Mathematics, One from Computer Sc.</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;CompositeEmployee hodMaths = new CompositeEmployee(\"Mrs.S.Das(HOD-Maths)\",\"Maths\",14);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;CompositeEmployee hodCompSc = new CompositeEmployee(\"Mr. V.Sarcar(HOD-CSE)\", \"Computer Sc.\",16);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;//Principal of the college</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;CompositeEmployee principal = new CompositeEmployee(\"Dr.S.Som(Principal)\",\"Planning-Supervising-Managing\",20);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;//Teachers of Mathematics directly reports to HOD-Maths</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;hodMaths.addEmployee(mathTeacher1);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;hodMaths.addEmployee(mathTeacher2);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;//Teachers of Computer Sc. directly reports to HOD-CSE</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;hodCompSc.addEmployee(cseTeacher1);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;hodCompSc.addEmployee(cseTeacher2);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;hodCompSc.addEmployee(cseTeacher3);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;/*Principal is on top of college.HOD -Maths and Comp. Sc directly reports to him */</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;principal.addEmployee(hodMaths);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;principal.addEmployee(hodCompSc);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\"\\n Testing the overall structure\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;//Prints the complete structure</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;principal.printStructures();</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\"\\n***Visitor starts visiting our composite structure***\\n\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\"---The minimum criteria for promotion is as follows ---\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\"--Junior Teachers-12 years and Senior teachers-15 years.--\\n\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;Visitor myVisitor = new ConcreteVisitor();</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;/*</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp; * At first, we are building a container for employees who will be considered for promotion .</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp; Principal is holding the highest position.So, he is not considered for promotion.</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp; */</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;List&lt;Employee&gt; employeeContainer= new ArrayList&lt;Employee&gt;();</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;//For employees who directly reports to Principal</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;for (Employee e : principal.getControls())</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;employeeContainer.add(e);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;//For employees who directly reports to HOD-Maths</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;for (Employee e : hodMaths.getControls())</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;employeeContainer.add(e);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;//For employees who directly reports to HOD-Comp.Sc</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;for (Employee e : hodCompSc.getControls())</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;employeeContainer.add(e);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;//Now visitor can traverse through the container.</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;for (Employee e :employeeContainer)</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;e.acceptVisitor(myVisitor);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">}</font>  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "n(o{02Q<AN",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   13 - Visitor Pattern.&nbsp; &nbsp;&nbsp;   <span style=\"font-weight: bold;\">When should you consider implementing visitor design patterns?</span>  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">    You need to add new operations to a set of objects without changing their corresponding classes. It is one of the primary aims to implement a visitor pattern. When the operations change very often, this approach can be your savior. In this pattern, encapsulation is not the primary concern.   <br>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   If you need to change the logic of various operations, you can simply do it through visitor implementation.  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "B6uwt[ruUi",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   13 - Visitor Pattern.&nbsp; &nbsp;&nbsp;   <span style=\"font-weight: bold;\">Are there any drawbacks associated with this pattern?</span>  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <b>&nbsp;</b>  </div>  <ul>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     Encapsulation is not its key concern. So, you can break the power of encapsulation by using visitors.    </div></li>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     If you need to frequently add new concrete classes to an existing architecture, the visitor hierarchy becomes difficult to maintain. For example, suppose you want to add another concrete class in the original hierarchy now. Then in this case, you need to modify visitor class hierarchy accordingly to fulfill the purpose.    </div></li>  </ul></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "wnU}e_YQ$1",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   13 - Visitor Pattern.&nbsp; &nbsp;&nbsp;   <span style=\"font-weight: bold;\">Why are you saying that a visitor class can violate the encapsulation?</span>  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <b>&nbsp;</b>In our illustration, I have tested a very simple visitor design pattern in which I show an updated integer value of myInt through the visitor class. Also, in many cases, you may see that the visitor needs to move around a composite structure to gather information from them, and then it can modify that information. So, when you provide this kind of support, you violate the core aim of encapsulation.  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "O*+$`_A,9e",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   13 - Visitor Pattern.&nbsp; &nbsp;&nbsp;   <span style=\"font-weight: bold;\">Why does this pattern compromise the encapsulation?</span>  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <b>&nbsp;</b>Here you perform some operations on a set of objects that can be heterogeneous. But your constraint is that you cannot change their corresponding classes. So, your visitor needs a way to access the members of these objects. As a result, you need to expose the information to the visitor.  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "C-&RAUg{*g",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   13 - Visitor Pattern.&nbsp; &nbsp;&nbsp;   <span style=\"font-weight: bold;\">In the visitor interfaces of the modified implementation, you are using the concept of method overloading ( i.e., method names are same). Is this mandatory?</span>  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">    No. In my book    <span style=\"font-style: italic;\">Design Patterns in C#</span>, I used method names like VisitCompositeElement() and VisitLeafNode() in a similar context. Remember that these interface methods should target the specific classes, such as SimpleEmployee or CompositeEmployee.   <br>  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "Ejfa|RD0}w",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   13 - Visitor Pattern.&nbsp; &nbsp;&nbsp;   <span style=\"font-weight: bold;\">Suppose that in the modified implementation, I add a concrete subclass of Employee called UndefinedEmployee. How should I proceed? Should I have another specific method in the visitor interface?</span>  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <b>&nbsp;</b>Exactly. You need to define a new method that is specific to this new class. So, your interface may look like the following.  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-weight: bold;\">interface</span> Visitor  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   {  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   &nbsp; &nbsp;   <span style=\"font-weight: bold;\">void</span> visitTheElement(CompositeEmployee employees);  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   &nbsp; &nbsp;   <span style=\"font-weight: bold;\">void</span> visitTheElement(SimpleEmployee employee);  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   &nbsp; &nbsp;   <span style=\"font-weight: bold;\">void</span> visitTheElement(UndefinedEmployee employee);  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   }  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   And later you need to implement this new method in the concrete visitor class.  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "BiX|E{45Vx",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   13 - Visitor Pattern.&nbsp; &nbsp;&nbsp;   <span style=\"font-weight: bold;\">In the client code, you made a container of employees first, and then it starts visiting. Is it mandatory to create such a structure?</span>  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <b>&nbsp;</b>No. It just helps clients to visit smoothly in one shot. If you do not create any such structure, you can always call it separately.  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "BjC])M-A^=",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   13 - Visitor Pattern.&nbsp; &nbsp;&nbsp;   <span style=\"font-weight: bold;\">Suppose that I need to support new operations in the existing architecture. How should I proceed with the visitor pattern?</span>  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <b>&nbsp;</b>For each new operation, create a new visitor subclass and implement the operation in it. Then, visit your existing structure the way that was shown in the preceding examples.  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "JwdwOD;V*S",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"width: 846px; padding: 8px; border: 1px solid;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   14  - Observer Pattern.&nbsp; &nbsp;what is the gof definition of the observer pattern ?  </div></td></tr>",
                        "<tr> <td style=\"width: 846px; padding: 8px; border: 1px solid;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">    Define a one-to-many dependency between objects so that when one object changes state, all its dependents are notified and updated automatically.  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "wc]y)}Xg%8",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   14  - Observer Pattern.&nbsp; &nbsp;can you show the uml diagram of the observer pattern ?  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">    In this pattern, there are many observers (objects) that are observing a particular subject (also an object). Observers register themselves to a subject to get a notification when there is a change made inside that subject. When they lose interest of the subject, they simply unregister from the subject. It is also referred to as the    <span style=\"font-style: italic;\">publish-subscribe pattern</span> . The whole idea can be summarized as follows:    <span style=\"font-style: italic;\">Using this pattern, an object (subject) can send notifications to multiple observers (a set of objects) at the same time.</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <img src=\"14-ObserverPatternImage.jpg\" type=\"image/jpeg\" data-filename=\"Image.jpg\" width=\"566\">  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "rb1LQsq>ad",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   14  - Observer Pattern.&nbsp; &nbsp;can you show an implementation of the observer pattern ?  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">package jdp2e.observer.demo;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">import java.util.*;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">interface Observer</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;void update(int updatedValue);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">class ObserverType1 implements Observer</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;String nameOfObserver;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public ObserverType1(String name)</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;this.nameOfObserver = name;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;@Override</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public void update(int updatedValue)</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println( nameOfObserver+\" has received an alert: Updated myValue in Subject is: \"+ updatedValue);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">class ObserverType2 implements Observer</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;String nameOfObserver;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public ObserverType2(String name)</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;this.nameOfObserver = name;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;@Override</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public void update(int updatedValue)</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println( nameOfObserver+\" has received an alert: The current value of myValue in Subject is: \"+ updatedValue);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">interface SubjectInterface</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;void register(Observer anObserver);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;void unregister(Observer anObserver);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;void notifyRegisteredUsers(int notifiedValue);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">class Subject implements SubjectInterface</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;private int flag;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public int getFlag()</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;return flag;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public void setFlag(int flag)</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;this.flag = flag;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;//Flag value changed. So notify registered users/observers.</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;notifyRegisteredUsers(flag);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;List&lt;Observer&gt; observerList = new ArrayList&lt;Observer&gt;();</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;@Override</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public void register(Observer anObserver) {</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;observerList.add(anObserver);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;@Override</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public void unregister(Observer anObserver) {</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;observerList.remove(anObserver);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;@Override</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public void notifyRegisteredUsers(int updatedValue)</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;for (Observer observer : observerList)</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;observer.update(updatedValue);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">public class ObserverPatternExample {</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public static void main(String[] args) {</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\" ***Observer Pattern Demo***\\n\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;//We have 3 observers- 2 of them are ObserverType1, 1 of them is of //ObserverType2</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;Observer myObserver1 = new ObserverType1(\"Roy\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;Observer myObserver2 = new ObserverType1(\"Kevin\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;Observer myObserver3 = new ObserverType2(\"Bose\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;Subject subject = new Subject();</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;//Registering the observers-Roy,Kevin,Bose</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;subject.register(myObserver1);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;subject.register(myObserver2);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;subject.register(myObserver3);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\" Setting Flag = 5 \");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;subject.setFlag(5);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;//Unregistering an observer(Roy))</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;subject.unregister(myObserver1);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;//No notification this time Roy. Since it is unregistered.</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\"\\n Setting Flag = 50 \");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;subject.setFlag(50);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;//Roy is registering himself again</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;subject.register(myObserver1);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\"\\n Setting Flag = 100 \");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;subject.setFlag(100);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">}</font>  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "Pr)`klT`s!",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   14  - Observer Pattern.&nbsp; &nbsp;   <span style=\"font-weight: bold;\">If I have only one observer, then I may not need to set up the interface. Is this correct?</span>  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <b>&nbsp;</b>Yes. But if you want to follow the pure object-oriented programming guidelines, programming to an interface/abstract class is always considered a better practice. So, you should prefer interfaces (or abstract classes) over concrete classes. Also, usually, you have multiple observers, and you want them to implement the methods in a systematic manner that follows the contract. You get benefit from this kind of design.  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "GFHx]Vb9n2",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   14  - Observer Pattern.&nbsp; &nbsp;   <span style=\"font-weight: bold;\">Can you have different types of observers in the same application?</span>  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">    Yes. This is why I have played with three observers from two different classes. But you should not feel that for each observer; you need to create a different class.  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   Consider a real-world scenario. When a company releases or updates new software, the company business partners and the customers who purchased the software get notifications. In this case, the business partners and the customers are two different types of observers.  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "u*gs!~h7px",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   14  - Observer Pattern.&nbsp; &nbsp;  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-weight: bold;\">Can I add or remove observers at runtime?</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   Yes. At the beginning our program, Roy registered to get notifications; then he unregistered and later reregistered.  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "yFo9s{lmwr",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   14  - Observer Pattern.&nbsp; &nbsp;   <span style=\"font-weight: bold;\">It appears that there are similarities between the observer pattern and the chain of responsibility pattern. Is this correct?</span>  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <b>&nbsp;</b>In an observer pattern, all registered users get notifications at the same time, but in a chain of responsibility pattern, objects in the chain are notified one by one, and this process continues until the object fully handles the notification.  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "E`gQ`#u50^",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   14  - Observer Pattern.&nbsp;&nbsp;   <span style=\"font-weight: bold;\">This model supports one-to-many relationships. Is this correct?</span>  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <b>&nbsp;</b>Yes. Since a subject can send notifications to multiple observers, this kind of dependency is clearly depicting a one-to-many relationship.  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "oJXAfR!mz|",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   14  - Observer Pattern.&nbsp; &nbsp;   <span style=\"font-weight: bold;\">If you already have these ready-made constructs, why are you writing your own code?</span>  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <b>&nbsp;</b>Changing the ready-made constructs to your preference is not always easy. In many cases, you cannot change the built-in functionalities at all. When you try to implement the concept yourself, you may have a better understanding of how to use those ready-made constructs.  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   Consider some typical scenarios.  </div>  <ul>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     In Java, Observable is a concrete class. It does not implement an interface. So, you can’t create your own implementation that works with Java’s built-in Observer API.    </div></li>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     Java does not allow multiple inheritance. So, when you have to extend the Observable class, you have to keep in mind the restriction. This may limit the reuse potential.    </div></li>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     The signature of the setChanged method in an Observable is as follows: protected void setChanged(). That means to use it, you need to subclass Observable class. This violates one of the key design principles, which basically says to prefer composition over inheritance.    </div></li>  </ul></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "L|A?HiIf+k",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   14  - Observer Pattern.&nbsp; &nbsp;   <span style=\"font-weight: bold;\">What are the key challenges associated with an observer pattern?</span>  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <b></b>  </div>  <ul>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     Undoubtedly, memory leak is the greatest concern when you deal with any event-based mechanism. An automatic garbage collector may not always help you in this context. You can consider such a case where the deregister/unregister operations are not performed properly.    </div></li>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     The order of notification is not dependable.    </div></li>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     Java’s built-in support for the observer pattern has some key restrictions, which I discussed earlier. One of them forces you to prefer inheritance over composition, so it clearly violates one of the key design principles that prefers the opposite.    </div></li>  </ul></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "xz+W?w?%/|",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"width: 846px; padding: 8px; border: 1px solid;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   21 - Mediator Pattern.&nbsp; can you give the gof definition of the mediator pattern ?  </div></td></tr>",
                        "<tr> <td style=\"width: 846px; padding: 8px; border: 1px solid;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">    ates how a set of objects interact. Mediator promotes loose coupling by keeping objects from referring to each other explicitly, and it lets you vary their interaction independently.  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "bZm7s)c(#O",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   21 - Mediator Pattern.&nbsp; can you give an explanation and the uml diagram of the mediator pattern ?  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">    When a client processes a business application, the developer may need to put some constraints on it. For example, a form in which a client needs to supply a user ID and password to access their account. On the same form, the client must supply other information, such as email, address, age, and so forth. Let’s assume that the developer applied the constraints as follows.  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   Initially, the application checks whether the ID supplied by the user is valid or not. If it is a valid user ID, then only the password field is enabled. After supplying these two fields, the application form needs to check whether the email address was provided by the user. Let’s further assume that after providing all of this information (a valid user ID, password, a correctly formatted email, etc.), the Submit button is enabled. So, basically the Submit button is enabled if the client supplies a valid user ID, password, email, and other mandatory details in the correct order. The developer may also enforce that the user ID must be an integer, so if the user mistakenly places any characters in that field, the Submit button stays in disabled mode. The mediator pattern becomes handy in such a scenario.  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   So, when a program consists of many classes and the logic is distributed among them, the code becomes harder to read and maintain. In those scenarios, if you want to bring new changes in the system’s behavior, it can be difficult unless you use the mediator pattern.  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   A common structure of the mediator pattern (which is basically adopted from the GoF’s    <span style=\"font-style: italic;\">Design Patterns: Elements of Reusable Object-Oriented Software</span>) is often described with the diagram shown in Figure    <a href=\"https://learning.oreilly.com/library/view/java-design-patterns/9781484240786/html/395506_2_En_21_Chapter.xhtml#Fig1\">21-1</a>.  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <img src=\"21-MediatorPatternImage.jpg\" type=\"image/jpeg\" data-filename=\"Image.jpg\" style=\"box-sizing: border-box; -webkit-tap-highlight-color: transparent; -webkit-font-smoothing: antialiased; border: 0px; height: 15.92em; max-width: 100%; vertical-align: middle; margin: 0px; padding: 2px;\" width=\"564\">  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-style: italic; font-weight: bold;\">Figure 21-1</span>Mediator pattern example  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <br>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <br>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   The participants are described as follows.  </div>  <ul>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     <span style=\"font-style: italic;\">Mediator</span>: Defines the interface to provide the communication among Colleague objects.    </div></li>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     <span style=\"font-style: italic;\">ConcreteMediator</span>: Maintains the list of the Colleague objects. It implements the Mediator interface and coordinates the communication among the Colleague objects.    </div></li>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     <span style=\"font-style: italic;\">Colleague</span>: Defines the interface for communication with other Colleagues.    </div></li>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     <span style=\"font-style: italic;\">ConcreteColleague1 and ConcreteColleague2</span>: Implements the Colleague interface. These objects communicate with each other through the mediator.    </div></li>  </ul>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <br>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <img src=\"21-MediatorPatternImage1.jpg\" type=\"image/jpeg\" data-filename=\"Image.jpg\" width=\"730\">  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "Iv#Phd?g!#",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   21 - Mediator Pattern.&nbsp; can you show an implementation of the memento pattern ?  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-family: &quot;Segoe UI&quot;; font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"> Here’s the first implementation.</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\"><br></font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">package jdp2e.mediator.demo;</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">import java.time.LocalDateTime;</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">import java.util.ArrayList;</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">import java.util.List;</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">interface Mediator</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">{</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;void register(Employee employee);</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;void sendMessage(Employee employee, String msg) throws InterruptedException;</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">}</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">// ConcreteMediator</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">class ConcreteMediator implements Mediator</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">{</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;List&lt;Employee&gt; participants = new ArrayList&lt;Employee&gt;();</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;@Override</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;public void register(Employee employee)</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;{</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;participants.add(employee);</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;}</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;public void displayRegisteredEmployees()</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;{</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\"><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">&nbsp; &nbsp; &nbsp; &nbsp;System.</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; font-style: italic;\">out</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">.println(\"At present,registered employees are:\");</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;for (Employee employee: participants)</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;{</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\"><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;System.</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; font-style: italic;\">out</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">.println(employee.getName());</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;}</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;}</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;@Override</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;public void sendMessage(Employee employee, String msg) throws InterruptedException</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;{</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;if (participants.contains(employee))</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;{</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\"><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;System.</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; font-style: italic;\">out</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">.println(employee.getName() +\" posts:\"+ msg+\"Last message posted at \"+LocalDateTime.</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; font-style: italic;\">now</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">());</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\"><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Thread.</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; font-style: italic;\">sleep</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">(1000);</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;}</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;else</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;{</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\"><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;System.</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; font-style: italic;\">out</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">.println(\"An outsider named \"+ employee.getName()+\" is trying to send some messages.\");</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;}</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;}</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">}</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">// The abstract class-Employee</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">abstract class Employee</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">{</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;protected Mediator mediator;</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;protected String name;</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;public String getName() {</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;return name;</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;}</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;public void setName(String name) {</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;this.name = name;</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;}</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;// Constructor</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;public Employee(Mediator mediator)</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;{</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;this.mediator = mediator;</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;}</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;public void sendMessage(String msg) throws InterruptedException</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;{</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;mediator.sendMessage(this, msg);</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;}</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;public abstract String employeeType();</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">}</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">// Junior Employee</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">class JuniorEmployee extends Employee</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">{</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;public JuniorEmployee(Mediator mediator, String name)</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;{</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;super(mediator);</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;this.name = name;</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;}</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;@Override</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;public String employeeType()</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;{</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;return \"JuniorEmployee\";</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;}</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">}</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">//Senior Employee</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">class SeniorEmployee extends Employee</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">{</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;// Constructor</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;public SeniorEmployee(Mediator mediator, String name)</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;{</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;super(mediator);</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;this.name = name;</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;}</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;@Override</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;public String employeeType()</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;{</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;return \"SeniorEmployee\";</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;}</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">}</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">// Unknown participant.</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">class Unknown extends Employee</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">{</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;// Constructor</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;public Unknown(Mediator mediator, String name)</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;{</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;super(mediator);</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;this.name = name;</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;}</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;@Override</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;public String employeeType()</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;{</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;return \"Outsider\";</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;}</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">}</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">public class MediatorPatternExample {</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;public static void main(String[] args) throws InterruptedException {</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\"><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">&nbsp; &nbsp; &nbsp; &nbsp;System.</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; font-style: italic;\">out</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">.println(\"***Mediator Pattern Demo***\\n\");</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;ConcreteMediator mediator = new ConcreteMediator();</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;JuniorEmployee amit = new JuniorEmployee(mediator, \"Amit\");</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;JuniorEmployee sohel = new JuniorEmployee(mediator, \"Sohel\");</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;SeniorEmployee raghu = new SeniorEmployee(mediator, \"Raghu\");</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;//Registering participants</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;mediator.register(amit);</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;mediator.register(sohel);</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;mediator.register(raghu);</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;//Displaying the participant's list</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;mediator.displayRegisteredEmployees();</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">    <font face=\"Source Code Pro\"><span style=\"box-sizing: border-box;\">&nbsp; &nbsp; &nbsp; &nbsp;System.</span><span style=\"box-sizing: border-box; font-style: italic;\">out</span><span style=\"box-sizing: border-box;\">.println(\"Communication starts among participants...\");</span></font>   </div>   <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">    <span style=\"box-sizing: border-box;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;amit.sendMessage(\"Hi Sohel,can we discuss the mediator pattern?\");</font></span>   </div>   <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">    <span style=\"box-sizing: border-box;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;sohel.sendMessage(\"Hi Amit,yup, we can discuss now.\");</font></span>   </div>   <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">    <span style=\"box-sizing: border-box;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;raghu.sendMessage(\"Please get back to work quickly.\");</font></span>   </div>   <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">    <span style=\"box-sizing: border-box;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;//An outsider/unknown person tries to participate</font></span>   </div>   <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">    <span style=\"box-sizing: border-box;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;Unknown unknown = new Unknown(mediator, \"Jack\");</font></span>   </div>   <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">    <span style=\"box-sizing: border-box;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;unknown.sendMessage(\"Hello Guys..\");</font></span>   </div>   <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">    <span style=\"box-sizing: border-box;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;}</font></span>   </div>   <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">    <span style=\"box-sizing: border-box;\"><font face=\"Source Code Pro\">}</font></span>   </div>  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "hAjlw+F:Qn",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   21 - Mediator Pattern.&nbsp; Can you show a better example of the mediator pattern ?  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-family: &quot;Segoe UI&quot;; font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"> You have just seen a simple example of the mediator pattern. But you can make it better. You identified the following points.</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <ul style=\"box-sizing: border-box; margin: 0px; padding: 0px 0px 0px 40px; border: 1px solid transparent;\">    <li style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 1px solid transparent;\">     <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">      <span style=\"box-sizing: border-box;\">The messages are only passing in one direction.</span>     </div></li>    <li style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 1px solid transparent;\">     <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">      <span style=\"box-sizing: border-box;\">When one participant posts a message, everyone can see the message. So, there is no privacy.</span>     </div></li>    <li style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 1px solid transparent;\">     <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">      <span style=\"box-sizing: border-box;\">If an employee forgets to register himself, he is not allowed to send a message. It is fine, but he should not be treated like an outsider. In a normal scenario, an organization outsider should be treated differently from an employee of the organization who forgets to register himself on the server.</span>     </div></li>    <li style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 1px solid transparent;\">     <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">      <span style=\"box-sizing: border-box;\">The client code needed to register the participants to the mediator. Though you may argue that it is not a drawback, you may opt for a better approach. For example, you may register the participants automatically to a mediator when you create an Employee object inside the client code.</span>     </div></li>    <li style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 1px solid transparent;\">     <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">      <span style=\"box-sizing: border-box;\">You have not used the employeeType() method in client code.</span>     </div></li>   </ul>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-family: &quot;Segoe UI&quot;; font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">So, keeping these points in mind, let’s modify the previous example. Here are some key characteristics of the modified implementation.</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <ul style=\"box-sizing: border-box; margin: 0px; padding: 0px 0px 0px 40px; border: 1px solid transparent;\">    <li style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 1px solid transparent;\">     <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">      <span style=\"box-sizing: border-box;\">The JuniorEmployee and SeniorEmployee classes are replaced with a single ConcreteEmployee class. It helps us easily identify who belongs to the organization and who does not (in other words, outsiders).</span>     </div></li>    <li style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 1px solid transparent;\">     <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">      <span style=\"box-sizing: border-box;\">In the modified implementation, each of these participants can see who is posting messages, but it is not disclosed to whom it is targeted or what the actual message is. So, there is privacy between two participants, but this approach can help someone like Raghu to coordinate things because he may interfere if he sees that employees are chatting too much.</span>     </div></li>    <li style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 1px solid transparent;\">     <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">      <span style=\"box-sizing: border-box;\">In the client code, you create participants like the following.</span>     </div></li>   </ul>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-family: &quot;Segoe UI&quot;; font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">Employee Amit =</span>   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-family: &quot;Segoe UI&quot;; font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">&nbsp;</span>   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-family: &quot;Segoe UI&quot;; font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; font-weight: bold;\">new</span>   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-family: &quot;Segoe UI&quot;; font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">&nbsp;</span>   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-family: &quot;Segoe UI&quot;; font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">ConcreteEmployee(mediator, \"Amit\",</span>   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-family: &quot;Segoe UI&quot;; font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">&nbsp;</span>   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-family: &quot;Segoe UI&quot;; font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; font-weight: bold;\">true</span>   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-family: &quot;Segoe UI&quot;; font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">);</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-family: &quot;Segoe UI&quot;; font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">The third argument (true/false) is used to determine whether a participant wants to register himself or not to the mediator. He is treated accordingly when he tries to post messages.</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <ul style=\"box-sizing: border-box; margin: 0px; padding: 0px 0px 0px 40px; border: 1px solid transparent;\">    <li style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 1px solid transparent;\">     <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">      <span style=\"box-sizing: border-box;\">The employeeType() method determines whether a participant is from inside the organization or if he or she is an outsider. In this context, you may also note that instead of using the following line</span>     </div></li>   </ul>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-family: &quot;Segoe UI&quot;; font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; font-weight: bold;\">if</span>   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-family: &quot;Segoe UI&quot;; font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">( fromEmployee.employeeType()==\"UnauthorizedUser\")</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-family: &quot;Segoe UI&quot;; font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">you could directly use this line of code:</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-family: &quot;Segoe UI&quot;; font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; font-weight: bold;\">if</span>   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-family: &quot;Segoe UI&quot;; font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">( fromEmployee.getClass().getSimpleName().equals(\"UnauthorizedUser\"))</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-family: &quot;Segoe UI&quot;; font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">I used the former one for better readability.</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">    <span style=\"box-sizing: border-box;\"><br></span>   </div>   <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">    <span style=\"box-sizing: border-box;\">Figure</span>    <span style=\"box-sizing: border-box;\">&nbsp;</span>    <a href=\"https://learning.oreilly.com/library/view/java-design-patterns/9781484240786/html/395506_2_En_21_Chapter.xhtml#Fig4\" style=\"box-sizing: border-box; color: rgb(0, 0, 238);\">21-4</a>    <span style=\"box-sizing: border-box;\">&nbsp;</span>    <span style=\"box-sizing: border-box;\">shows the modified class diagram. To show the key changes and to present a neat diagram, I do not show the client code dependencies in the following diagram.</span>   </div>   <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">    <img src=\"21-MediatorPatternImage2.jpg\" type=\"image/jpeg\" data-filename=\"Image.jpg\" style=\"box-sizing: border-box; cursor: default; display: inline-block; margin: 0px; padding: 2px; position: relative; vertical-align: middle; height: 32.78em; max-width: 100%; -webkit-tap-highlight-color: transparent; -webkit-font-smoothing: antialiased; border: 0px;\" width=\"808\">   </div>  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "jIK26LT<0j",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   21 - Mediator Pattern.&nbsp; can you show an implementation of a better mediator ?  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-family: &quot;Segoe UI&quot;; font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"> Here is the modified implementation.</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\"><br></font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">package jdp2e.mediator.modified.demo;</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">import java.time.LocalDateTime;</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">import java.util.ArrayList;</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">import java.util.List;</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">interface Mediator</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">{</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;void register(Employee employee);</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;void sendMessage(Employee fromEmployee, Employee toEmployee,String msg) throws InterruptedException;</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">}</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">// ConcreteMediator</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">class ConcreteMediator implements Mediator</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">{</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;List&lt;Employee&gt; participants = new ArrayList&lt;Employee&gt;();</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;@Override</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;public void register(Employee employee)</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;{</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;participants.add(employee);</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;}</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;public void displayRegisteredEmployees()</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;{</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\"><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">&nbsp; &nbsp; &nbsp; &nbsp;System.</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; font-style: italic;\">out</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">.println(\"At present ,registered participants are:\");</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;for (Employee employee: participants)</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;{</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\"><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;System.</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; font-style: italic;\">out</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">.println(employee.getName());</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;}</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;}</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;@Override</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;public void sendMessage(Employee fromEmployee,Employee toEmployee,String msg) throws InterruptedException</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;{</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;/*if( fromEmployee.getClass().getSimpleName().equals(\"UnauthorizedUser\"))*/</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;if( fromEmployee.employeeType()==\"UnauthorizedUser\")</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;{</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\"><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;System.</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; font-style: italic;\">out</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">.println(\"[ALERT Everyone] An outsider named \"+ fromEmployee.getName()+\" trying to send some messages to \"+ toEmployee.getName());</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;fromEmployee.receive(fromEmployee, \",you are not allowed to enter here.\");</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;}</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;else if (participants.contains(fromEmployee))</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;{</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\"><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;System.</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; font-style: italic;\">out</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">.println(\"-----\"+fromEmployee.getName() +\" posts some message at: \"+LocalDateTime.</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; font-style: italic;\">now</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">()+\"-----\");</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\"><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Thread.</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; font-style: italic;\">sleep</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">(1000);</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;//No need to inform everyone or himself</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;//Only let the target receiver know</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;if(participants.contains(toEmployee))</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;toEmployee.receive(fromEmployee,msg);</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;}</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;//If target receipient does not exist</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;else</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\"><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;System.</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; font-style: italic;\">out</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">.println(fromEmployee.getName() +\" , your target recipient does not exist\");</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;}</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;}</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;//An outsider tries to send message.</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;else</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;{</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\"><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;System.</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; font-style: italic;\">out</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">.println(\"[ALERT] An unregistered employee named \"+ fromEmployee.getName()+\" trying to send some messages to \"+ toEmployee.getName());</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\"><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;System.</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; font-style: italic;\">out</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">.println(fromEmployee.getName()+\", you need to register yourself first.\");</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;}</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;}</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">}</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">// Employee</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">abstract class Employee</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">{</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;private Mediator mediator;</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;protected String name;</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;private boolean authorizedUser;</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;public String getName() {</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;return name;</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;}</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;public void setName(String name) {</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;this.name = name;</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;}</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;// Constructor</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;public Employee(Mediator mediator, String name, boolean authorizedUser)</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;{</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;this.mediator = mediator;</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;this.name=name;</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;this.authorizedUser=authorizedUser;</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;if(authorizedUser)</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;{</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;mediator.register(this);</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;}</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;}</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;//The following method name need not be same as the Mediator's method name</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;public void send(Employee toFriend,String msg) throws InterruptedException</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;{</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;mediator.sendMessage(this,toFriend, msg);</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;}</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;//public abstract void receive(Friend fromFriend,String message);</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;public void receive(Employee fromFriend,String message)</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;{</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\"><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">&nbsp; &nbsp; &nbsp; &nbsp;System.</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; font-style: italic;\">out</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">.println(this.name+\" received a message : \" + message +\" from an employee \"+ fromFriend.getName() +\".\");</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;}</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;public abstract String employeeType();</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">}</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">//A concrete friend</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">class ConcreteEmployee extends Employee</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">{</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;public ConcreteEmployee(Mediator mediator, String name,boolean authorizedUser)</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;{</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;super(mediator,name, authorizedUser);</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;}</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;@Override</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;public String employeeType()</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;{</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;return \"ConcreteEmployee\";</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;}</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">}</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">//Unauthorized user</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">class UnauthorizedUser extends Employee</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">{</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;public UnauthorizedUser(Mediator mediator, String name)</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;{</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;//The user is always treated an unauthorized user.So, the flag is</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;//false always.</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;super(mediator,name, false);</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;}</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;@Override</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;public void receive(Employee fromEmployee,String message)</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;{</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\"><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">&nbsp; &nbsp; &nbsp; &nbsp;System.</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; font-style: italic;\">out</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">.println(this.name + message);</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;}</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;@Override</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;public String employeeType()</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;{</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;return \"UnauthorizedUser\";</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;}</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">}</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">public class ModifiedMediatorPatternExample {</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;public static void main(String[] args) throws InterruptedException {</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\"><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">&nbsp; &nbsp; &nbsp; &nbsp;System.</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; font-style: italic;\">out</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">.println(\"***Mediator Pattern Demo***\\n\");</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;ConcreteMediator mediator = new ConcreteMediator();</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;Employee Amit = new ConcreteEmployee(mediator, \"Amit\", true);</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;Employee Sohel = new ConcreteEmployee(mediator, \"Sohel\",true);</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;Employee Raghu = new ConcreteEmployee(mediator, \"Raghu\",true);</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;//Unauthorized user</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;Employee Jack = new ConcreteEmployee(mediator, \"Jack\",false);</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;//Only two parameter needed to pass in the following case.</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;Employee Divya = new UnauthorizedUser(mediator, \"Divya\");</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;//Displaying the participant's list</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;mediator.displayRegisteredEmployees();</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\"><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">&nbsp; &nbsp; &nbsp; &nbsp;System.</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; font-style: italic;\">out</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">.println(\"Communication starts among participants...\");</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;Amit.send(Sohel,\"Hi Sohel,can we discuss the mediator pattern?\");</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;Sohel.send(Amit,\"Hi Amit,Yup, we can discuss now.\");</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;//Boss is sending messages to each of them individually</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;Raghu.send(Amit,\"Please get back to work quickly.\");</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;Raghu.send(Sohel,\"Please get back to work quickly.\");</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;//An unregistered employee(Jack) and an outsider(Divya) are also</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;//trying to participate.</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;Jack.send(Amit,\"Hello Guys..\");</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;Divya.send(Raghu, \"Hi Raghu\");</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;}</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">}</font></span>  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "Gydvi2x8,I",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   21 - Mediator Pattern.&nbsp;&nbsp;   <span style=\"font-weight: bold;\">Why are you complicating the things? In the first example, each of the participants could talk to each other directly and you could bypass the use of mediator. Is this correct?</span>  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <b>&nbsp;</b>In this example, you have only three    <span style=\"font-style: italic;\">registered</span> participants, so it may appear that they can communicate with each other directly. But you may need to consider a relatively complicated scenario. For example, a participant can send a message to a target participant only if the target participant is in online mode (which is the common scenario for a chat server). So, with your proposed architecture, if they try to communicate with each other, each of them needs to maintain the status of all other participants before sending a message. And if the number of participants keeps growing, can you imagine the complexity of the system?  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   So, a mediator can certainly help you deal with a scenario like this.  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <br>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   Also, you can consider the modified implementation in this context. In the modified implementation, you can see that the mediator is maintaining the logic—who should be allowed to post messages on the server and how he/she should be treated.  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "O/?:_4GwQ4",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   21 - Mediator Pattern.&nbsp;&nbsp;   <span style=\"font-weight: bold;\">What are</span>    <span style=\"font-weight: bold;\">advantages</span>    <span style=\"font-weight: bold;\">of using mediator patterns?</span>  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     </div>  <ul>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     You can reduce the complexity of objects’ communication in a system.    </div></li>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     The pattern promotes loose coupling.    </div></li>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     It reduces number of subclasses in the system.    </div></li>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     You can replace “many-to-many” relationship with “one-to-many” relationships, so it is much easier to read and understand. (Consider our first illustration in this context). And as an obvious effect, maintenance becomes easy.    </div></li>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     You can provide a centralized control through the mediator with this pattern.    </div></li>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     In short, it is always our aim to remove tight coupling (among objects) from our code and this pattern scores high in this context.    </div></li>  </ul></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "C!ojs.&a1a",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   21 - Mediator Pattern.&nbsp;&nbsp;   <span style=\"font-weight: bold;\">What are the disadvantages of using mediator patterns?</span>  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <b></b>  </div>  <ul>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     In some cases, implementing the proper encapsulation is tricky.    </div></li>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     The mediator object’s architecture may become complex if you put too much logic inside it. An inappropriate use of the mediator pattern may end up with a “God Class” antipattern. (You’ll learn about antipatterns in Chapter      <a href=\"https://learning.oreilly.com/library/view/java-design-patterns/9781484240786/html/395506_2_En_28_Chapter.xhtml\">28</a>).    </div></li>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     Sometimes maintaining the mediator becomes a big concern.    </div></li>  </ul></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "oJKNn+^X-A",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   21 - Mediator Pattern.&nbsp;&nbsp;   <span style=\"font-weight: bold;\">If you need to add a new rule or logic, you can directly add it to the mediator. Is this correct?</span>  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <b>&nbsp;</b>Yes.  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "CI]x#=x;w9",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   21 - Mediator Pattern.&nbsp;&nbsp;   <span style=\"font-weight: bold;\">I am finding some similarities in the facade pattern and the mediator pattern. Is this correct?</span>  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <b>&nbsp;</b>Yes. In his book    <span style=\"font-style: italic;\">Design Pattern for Dummies</span> (Wiley Publishing, 2006), Steve Holzner mentions the similarity by describing the mediator pattern as a multiplexed facade pattern. In mediator, instead of working with an interface of a single object, you are making a multiplexed interface among multiple objects to provide smooth transitions.  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "xPV.4ov/(M",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   21 - Mediator Pattern.&nbsp;&nbsp;   <span style=\"font-weight: bold;\">In this pattern, you are reducing the number of interconnections among various objects. What key benefits have you achieved due to this reduction?</span>  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <b>R.&nbsp;</b>More interconnections among objects can make a monolithic system where the system’s behavior is difficult to change (the system’s behavior is distributed among many objects). As a side effect, you may need to create many subclasses to bring those changes in the system.  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "ro2[IPaGb@",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   21 - Mediator Pattern.&nbsp;&nbsp;   <span style=\"font-weight: bold;\">In the modified implementations, you are using Thread.Sleep(1000). What is the reason for this?</span>  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <b>&nbsp;</b>You can ignore that. I used it to mimic a real-life scenario. I assume that participants are posting messages after reading a message properly and this activity takes a minimum of 1 second.  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "mMz?!3qf^B",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   21 - Mediator Pattern.&nbsp;&nbsp;   <span style=\"font-weight: bold;\">In some applications, I have seen the use of a concrete mediator only. Is this approach OK?</span>  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <b>&nbsp;</b>The mediator pattern does not restrict you to use only a concrete mediator. But I like to follow the experts’ advice that says, “programming to the supertype (abstract class/interface) is a better approach,” and it can provide more flexibility in the long run.  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "qvxC#d3mG[",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   21 - Mediator Pattern.&nbsp;&nbsp;   <span style=\"font-weight: bold;\">Can I simply say that if a class simply calls methods from multiple objects, it is a mediator?</span>  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <b>&nbsp;</b>Not at all. The key purpose of a mediator is to simplify the complex communications among objects in a system. I suggest that you always keep in mind the GoF definition and the corresponding concepts.  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "yOo.pX>_k;",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   21 - Mediator Pattern.&nbsp;&nbsp;   <span style=\"font-weight: bold;\">In the first implementation, both send methods (mediator and employees) are named sendMessage() but in the modified implementation, they are different—one is send() and the other is sendMessage(). Do I need to follow any specific naming convention?</span>  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <b>R.&nbsp;</b>No. Both are fine. It’s your choice.  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "Om]kaI}:N~",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"width: 846px; padding: 8px; border: 1px solid;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   22 - Chain of Responsibility Pattern.&nbsp; &nbsp;can you give the gof definition of the chain of responsibility pattern ?  </div></td></tr>",
                        "<tr> <td style=\"width: 846px; padding: 8px; border: 1px solid;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">    Avoid coupling the sender of a request to its receiver by giving more than one object a chance to handle the request. Chain the receiving objects and pass the request along the chain until an object handles it.  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "b8lfR;u|6r",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   22 - Chain of Responsibility Pattern. can you show an uml diagram of the chain of responsibility pattern ?&nbsp;&nbsp;  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">    Let’s consider the scenario that is discussed in the computer-world example. Let’s further assume that in the following example, you can process both normal and high-priority issues that may come from either the email or fax pillar.  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <br>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <img src=\"22-ChainofResponsibilityPatternImage.jpg\" type=\"image/jpeg\" data-filename=\"Image.jpg\" style=\"box-sizing: border-box; -webkit-tap-highlight-color: transparent; -webkit-font-smoothing: antialiased; border: 0px; height: 44em; max-width: 100%; vertical-align: middle; margin: 0px; padding: 2px;\" width=\"613\">  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "E<$RSWb?Ff",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   22 - Chain of Responsibility Pattern.&nbsp; &nbsp;can you show an implementation of the chain of responsibility pattern ?  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">    Here’s the implementation.  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\"><br></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">package jdp2e.chainofresponsibility.demo;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">enum MessagePriority</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;<span style=\"font-style: italic;\">NORMAL</span>,</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;<span style=\"font-style: italic;\">HIGH</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">class Message</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public String text;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public MessagePriority priority;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public Message(String msg, MessagePriority p)</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;text = msg;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;this.priority = p;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">interface Receiver</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;boolean handleMessage(Message message);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;void nextErrorHandler(Receiver nextReceiver);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">class IssueRaiser</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public Receiver setFirstReceiver;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public void setFirstErrorHandler(Receiver firstErrorHandler)</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;this.setFirstReceiver = firstErrorHandler;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public void raiseMessage(Message message)</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;if (setFirstReceiver != null)</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;setFirstReceiver.handleMessage(message);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">// FaxErrorHandler class</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">class FaxErrorHandler implements Receiver</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;private Receiver nextReceiver;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;@Override</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public void nextErrorHandler(Receiver nextReceiver)</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;this.nextReceiver = nextReceiver;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;@Override</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public boolean handleMessage(Message message)</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;if (message.text.contains(\"Fax\"))</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\" FaxErrorHandler processed \" +message.priority +\" priority issue :\"+ message.text);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;return true;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;else</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;if (nextReceiver != null)</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;nextReceiver.handleMessage(message);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;return false;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">// EmailErrorHandler class</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">class EmailErrorHandler implements Receiver</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;private Receiver nextReceiver;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;@Override</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public void nextErrorHandler(Receiver nextReceiver)</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;this.nextReceiver = nextReceiver;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;@Override</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public boolean handleMessage(Message message)</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;if (message.text.contains(\"Email\"))</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\" EmailErrorHandler processed \"+message.priority+ \" priority issue: \"+message.text);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;return true;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;else</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;if (nextReceiver != null)</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;nextReceiver.handleMessage(message);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;return false;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">//Client code</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">public class ChainofResponsibilityPattern {</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public static void main(String[] args) {</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\"\\n ***Chain of Responsibility Pattern Demo***\\n\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;/* Forming the chain as IssueRaiser-&gt;FaxErrorhandler-&gt;EmailErrorHandler */</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;Receiver faxHandler, emailHandler;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;//Objects of the chains</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;IssueRaiser issueRaiser = new IssueRaiser();</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;faxHandler = new FaxErrorHandler();</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;emailHandler = new EmailErrorHandler();</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;//Making the chain</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;//Starting point:IssueRaiser will raise issues and set the first</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;//handler</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;issueRaiser.setFirstErrorHandler(faxHandler);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;//FaxErrorHandler will pass the error to EmailHandler if needed.</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;faxHandler.nextErrorHandler(emailHandler);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;//EmailErrorHandler will be placed at the last position in the chain</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;emailHandler.nextErrorHandler(null);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;Message m1 = new Message(\"Fax is going slow.\", MessagePriority.<span style=\"font-style: italic;\">NORMAL</span>);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;Message m2 = new Message(\"Emails are not reaching.\", MessagePriority.<span style=\"font-style: italic;\">HIGH</span>);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;Message m3 = new Message(\"In Email, CC field is disabled always.\", MessagePriority.<span style=\"font-style: italic;\">NORMAL</span>);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;Message m4 = new Message(\"Fax is not reaching destinations.\", MessagePriority.<span style=\"font-style: italic;\">HIGH</span>);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;issueRaiser.raiseMessage(m1);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;issueRaiser.raiseMessage(m2);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;issueRaiser.raiseMessage(m3);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;issueRaiser.raiseMessage(m4);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">}</font>  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "z1EV|hV/6N",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   22 - Chain of Responsibility Pattern.&nbsp; &nbsp;   <span style=\"font-weight: bold;\">In the example, what is the purpose of message priorities?</span>  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <b>&nbsp;</b>Good catch. Actually, you could ignore them because, for simplicity in the handlers, you are just searching for the words    <span style=\"font-style: italic;\">email</span> or    <span style=\"font-style: italic;\">fax</span>. These priorities are added to beautify the code. But instead of using separate handlers for email and fax, you could make a different kind of chain that handles the messages based on the priorities. In such a case, these priorities can be used more effectively.  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "ET$=Z5*<K-",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   22 - Chain of Responsibility Pattern.&nbsp; &nbsp;   <span style=\"font-weight: bold;\">What are the advantages of using a chain-of-responsibility design pattern?</span>  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <b></b>  </div>  <ul>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     You can have more than one object to handle a request. (Notice that if a handler cannot handle the whole request, it may forward the responsibility to the next handler in the chain).    </div></li>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     The nodes of the chain can be added or removed dynamically. Also, you can shuffle the order. For example, if you notice that the majority of issues are with email processing, then you may place EmailErrorHandler as the first handler in the chain to save the average processing time of the application.    </div></li>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     A handler does not need to know how the next handler in the chain will handle the request. It focuses only on its own handling mechanism.    </div></li>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     In this pattern, you are promoting loose coupling because it decouples the senders (of requests) from the receivers.    </div></li>  </ul></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "e8r{_k3Avi",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   22 - Chain of Responsibility Pattern.&nbsp; &nbsp;   <span style=\"font-weight: bold;\">What are the challenges associated with using the chain-of-responsibility design pattern?</span>  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <b></b>  </div>  <ul>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     There is no guarantee that the request will be handled (fully or partially) because you may reach the end of the chain; but it is possible that you have not found any explicit receiver to handle the request.    </div></li>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     Debugging may become tricky with this kind of design.    </div></li>  </ul></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "pR:)8={$Jp",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   22 - Chain of Responsibility Pattern.&nbsp; &nbsp;   <span style=\"font-weight: bold;\">How can you handle the scenario where you have reached at the end of chain, but the request is not handled at all?</span>  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <b>R.&nbsp;</b>One simple solution is to use try/catch (or try/finally or try/catch/finally) blocks. You may put the handlers in these constructs. You may notice that a try block can be associated with multiple catch blocks also.  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   In the end, if no one can handle the request, you may raise an exception with the appropriate messages and catch the exception in your intended catch block to draw your attention (or handle it in some different way).  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   The GoF talked about Smalltalk’s automatic forwarding mechanism, doesNotUnderstand, in a similar context. If a message cannot find a proper handler, it is caught in doesNotUnderstand implementations that can be overridden to forward the message in the object’s successor, log it in a file, and store it in a queue for later processing, or you can simply perform any other intended operations. But you must make a note that by default, this method raises an exception that needs to be handled in a proper way.  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "}!AmClHi{",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   22 - Chain of Responsibility Pattern.&nbsp; &nbsp;   <span style=\"font-weight: bold;\">In short, if a handler cannot handle the request fully, it will pass it to the next handler. Is this correct?</span>  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <b>&nbsp;</b>Yes.  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "wR%gM*GJ2S",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   22 - Chain of Responsibility Pattern.&nbsp; &nbsp;   <span style=\"font-weight: bold;\">It appears that there are similarities between the observer pattern and the chain-of-responsibility pattern. Is this correct?</span>  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <b>&nbsp;</b>In an observer pattern, all registered users get notifications in parallel; but in a chain-of-responsibility pattern, objects in the chain are notified, one by one, in a sequential manner. This process continues until an object handles the notification fully (or you reach the end of the chain). I show the comparisons in diagrams in the “Q&amp;A Session” in Chapter    <a href=\"https://learning.oreilly.com/library/view/java-design-patterns/9781484240786/html/395506_2_En_14_Chapter.xhtml\">14</a>.  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "y.8i?a(,Cq",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"width: 1134px; padding: 8px; border: 1px solid;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   5 - Abstract Factory Pattern.&nbsp; &nbsp;&nbsp;  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   what is the gof definition of the abstract factory pattern ?&nbsp;  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   What is the purpose of the abstract factory pattern ?&nbsp;  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   Can you give a uml diagram of the abstract factory pattern ?  </div></td></tr>",
                        "<tr> <td style=\"width: 1134px; padding: 8px; border: 1px solid;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   &nbsp;&nbsp; &nbsp;  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   Provide an interface for creating families of related or dependent objects without specifying their concrete classes.  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   This is basically a factory of factories that provides one level of higher abstraction than the factory method pattern. This pattern helps us to interchange specific implementations without changing the code that uses them, even at runtime. This pattern provides a way to encapsulate a group of individual factories that have a common theme. Here a class does not create the objects directly; instead, it delegates the task to a factory object.  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <img src=\"5-AbstractFactoryPatternImage.jpg\" type=\"image/jpeg\" data-filename=\"Image.jpg\" width=\"700\">  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "AO*n)*`?xL",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 1134px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt;\">5 - Abstract Factory Pattern.&nbsp; &nbsp;can you give an implementation of the abstract factory pattern ?</span>  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 1134px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   &nbsp;&nbsp; &nbsp;Here’s the implementation.  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <br>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">package jdp2e.abstractfactory.demo;</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">interface Dog</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp;void speak();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp;void preferredAction();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">interface Tiger</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp;void speak();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp;void preferredAction();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">//Types of Dogs-wild dogs and pet dogs</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">class WildDog implements Dog</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp;@Override</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp;public void speak()</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp;{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;System.</span>   <span style=\"font-family: &quot;Source Code Pro&quot;; font-style: italic;\">out</span>   <span style=\"font-family: &quot;Source Code Pro&quot;;\">.println(\"Wild Dog says loudly: Bow-Wow.\");</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp;}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp;@Override</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp;public void preferredAction()</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp;{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;System.</span>   <span style=\"font-family: &quot;Source Code Pro&quot;; font-style: italic;\">out</span>   <span style=\"font-family: &quot;Source Code Pro&quot;;\">.println(\"Wild Dogs prefer to roam freely in jungles.\\n\");</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp;}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">class PetDog implements Dog</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp;@Override</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp;public void speak()</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp;{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;System.</span>   <span style=\"font-family: &quot;Source Code Pro&quot;; font-style: italic;\">out</span>   <span style=\"font-family: &quot;Source Code Pro&quot;;\">.println(\"Pet Dog says softly: Bow-Wow.\");</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp;}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp;@Override</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp;public void preferredAction()</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp;{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;System.</span>   <span style=\"font-family: &quot;Source Code Pro&quot;; font-style: italic;\">out</span>   <span style=\"font-family: &quot;Source Code Pro&quot;;\">.println(\"Pet Dogs prefer to stay at home.\\n\");</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp;}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">//Types of Tigers-wild tigers and pet tigers</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">class WildTiger implements Tiger</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp;@Override</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp;public void speak()</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp;{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;System.</span>   <span style=\"font-family: &quot;Source Code Pro&quot;; font-style: italic;\">out</span>   <span style=\"font-family: &quot;Source Code Pro&quot;;\">.println(\"Wild Tiger says loudly: Halum.\");</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp;}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp;@Override</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp;public void preferredAction()</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp;{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;System.</span>   <span style=\"font-family: &quot;Source Code Pro&quot;; font-style: italic;\">out</span>   <span style=\"font-family: &quot;Source Code Pro&quot;;\">.println(\"Wild Tigers prefer hunting in jungles.\\n\");</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp;}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">class PetTiger implements Tiger</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp;@Override</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp;public void speak()</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp;{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;System.</span>   <span style=\"font-family: &quot;Source Code Pro&quot;; font-style: italic;\">out</span>   <span style=\"font-family: &quot;Source Code Pro&quot;;\">.println(\"Pet Tiger says softly: Halum.\");</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp;}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp;@Override</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp;public void preferredAction()</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp;{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;System.</span>   <span style=\"font-family: &quot;Source Code Pro&quot;; font-style: italic;\">out</span>   <span style=\"font-family: &quot;Source Code Pro&quot;;\">.println(\"Pet Tigers play in the animal circus.\\n\");</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp;}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">//Abstract Factory</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">interface AnimalFactory</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp;Dog createDog();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp;Tiger createTiger();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">//Concrete Factory-Wild Animal Factory</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">class WildAnimalFactory implements AnimalFactory</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp;@Override</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp;public Dog createDog()</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp;{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;return new WildDog();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp;}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp;@Override</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp;public Tiger createTiger()</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp;{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;return new WildTiger();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp;}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">//Concrete Factory-Pet Animal Factory</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">class PetAnimalFactory implements AnimalFactory</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp;@Override</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp;public Dog createDog()</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp;{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;return new PetDog();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp;}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp;@Override</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp;public Tiger createTiger()</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp;{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;return new PetTiger();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp;}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">//Client</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">class AbstractFactoryPatternExample {</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp;public static void main(String[] args) {</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;AnimalFactory myAnimalFactory;</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Dog myDog;</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Tiger myTiger;</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;System.</span>   <span style=\"font-family: &quot;Source Code Pro&quot;; font-style: italic;\">out</span>   <span style=\"font-family: &quot;Source Code Pro&quot;;\">.println(\"***Abstract Factory Pattern Demo***\\n\");</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;//Making a wild dog through WildAnimalFactory</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;myAnimalFactory = new WildAnimalFactory();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;myDog = myAnimalFactory.createDog();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;myDog.speak();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;myDog.preferredAction();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;//Making a wild tiger through WildAnimalFactory</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;myTiger = myAnimalFactory.createTiger();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;myTiger.speak();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;myTiger.preferredAction();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;System.</span>   <span style=\"font-family: &quot;Source Code Pro&quot;; font-style: italic;\">out</span>   <span style=\"font-family: &quot;Source Code Pro&quot;;\">.println(\"******************\");</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;//Making a pet dog through PetAnimalFactory</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;myAnimalFactory = new PetAnimalFactory();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;myDog = myAnimalFactory.createDog();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;myDog.speak();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;myDog.preferredAction();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;//Making a pet tiger through PetAnimalFactory</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;myTiger = myAnimalFactory.createTiger();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;myTiger.speak();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;myTiger.preferredAction();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp;}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">}</span>  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "u0&tN>;NUx",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 1134px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   5 - Abstract Factory Pattern.&nbsp; &nbsp;What are the benefits of the abstract factory pattern ?&nbsp;  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 1134px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   &nbsp;&nbsp; &nbsp;With simple factory, you can separate the code that varies from the rest of the code (basically, you decouple the client codes). This approach helps you easily manage your code. Another key advantage of this approach is that the client is unaware of how the objects are created. So, it promotes both security and abstraction through inheritance.  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "cc#{~})r!i",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 1134px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   5 - Abstract Factory Pattern.&nbsp; &nbsp;What principle can violate the abstract factory pattern ?&nbsp;  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 1134px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   &nbsp; &nbsp; It can violate the open-close principle. You can overcome this drawback using the factory method pattern that allows subclasses to decide how the instantiation process is completed. In other words, you delegate the objects creation to the subclasses that implement the factory method to create objects.&nbsp;Each of these factories promote loose coupling by reducing the dependencies on concrete classes.  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "J{}ljna-R2",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 1134px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   5 - Abstract Factory Pattern.&nbsp; &nbsp;The abstract factory pattern is a factory pattern ?  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 1134px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   &nbsp;&nbsp; &nbsp;The abstract factory is basically a factory of factories. It creates the family of related objects but it does not depend on the concrete classes.  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "d}&$bTS.U*",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 1134px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   5 - Abstract Factory Pattern.&nbsp; &nbsp;In all of these factory examples, you avoid the use of parameterized constructors. Was this intentional?  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 1134px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   &nbsp;In many applications, you see the use of parameterised constructors; many experts prefer this approach. But my focus is purely on design, and so, I ignored the use of parameterised constructors. But if you are a fan of parameterized constructors  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "qzuwX+LlY.",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"width: 846px; padding: 8px; border: 1px solid;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   11 - Composite Pattern.&nbsp; &nbsp; can you give the gof definition of the composite pattern ?  </div></td></tr>",
                        "<tr> <td style=\"width: 846px; padding: 8px; border: 1px solid;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">    Compose objects into tree structures to represent part-whole hierarchies. Composite lets clients treat individual objects and compositions of objects uniformly.  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "LAh?jna}wQ",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   11 - Composite Pattern.&nbsp; &nbsp; Can you give an example of the composite pattern  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">    To help you understand this concept, I will start with an example. Consider a shop that sells different kinds of dry fruits and nuts; let’s say cashews, dates, and walnuts. Each of these items is associated with a certain price. Let’s assume that you can purchase any of these individual items or you can purchase “gift packs” (or boxed items) that contain different items. In this case, the cost of a packet is the sum of its component parts. The composite pattern is useful in a similar situation, where you treat both the individual parts and the combination of the parts in the same way so that you can process them uniformly.  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   This pattern is useful to represent part-whole hierarchies of objects. In object-oriented programming, a composite is an object with a composition of one-or-more similar objects, where each of these objects has similar functionalities. (This is also known as a “has-a” relationship among objects). The usage of this pattern is very common in a tree-like data structure. If you can apply it properly, you do not need to discriminate between a branch and the leaf-nodes. You can achieve two key goals with this pattern.  </div>  <ul>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     You can compose objects into a tree structure to represent a part-whole hierarchy.    </div></li>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     You can access both the composite objects (branches) and the individual objects (leaf-nodes) uniformly. As a result, you can reduce the complexity of codes and at the same time, you make your application less error prone.    </div></li>  </ul>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <br>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <img src=\"11-CompositePatternImage.jpg\" type=\"image/jpeg\" data-filename=\"Image.jpg\" width=\"486\">  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "w$WTjeqWsE",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   11 - Composite Pattern.&nbsp; &nbsp; can you show an implementation ?  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   &nbsp;  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   Here is the implementation.   <br>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <br>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">package <a href=\"http://jdp2e.composite.demo%3B/\">jdp2e.composite.demo;</a></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">import java.util.ArrayList;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">import java.util.List;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">interface IEmployee</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;void printStructures();</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;int getEmployeeCount();</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">class CompositeEmployee implements IEmployee</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;//private static int employeeCount=0;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;private int employeeCount=0;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;private String name;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;private String dept;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;//The container for child objects</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;private List&lt;IEmployee&gt; controls;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;//Constructor</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public CompositeEmployee(String name, String dept)</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;this.name = name;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;this.dept = dept;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;controls = new ArrayList&lt;IEmployee&gt;();</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public void addEmployee(IEmployee e)</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;controls.add(e);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public void removeEmployee(IEmployee e)</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;controls.remove(e);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;@Override</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public void printStructures()</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\"\\t\" + this.name + \" works in &nbsp;\" + this.dept);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;for(IEmployee e: controls)</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;e.printStructures();</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;@Override</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public int getEmployeeCount()</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;employeeCount=controls.size();</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;for(IEmployee e: controls)</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;employeeCount+=e.getEmployeeCount();</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;return employeeCount;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">class Employee implements IEmployee</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;private String name;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;private String dept;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;private int employeeCount=0;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;//Constructor</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public Employee(String name, String dept)</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;this.name = name;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;this.dept = dept;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;@Override</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public void printStructures()</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\"\\t\\t\"+this.name + \" works in &nbsp;\" + this.dept);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;@Override</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public int getEmployeeCount()</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;return employeeCount;//0</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">class CompositePatternExample {</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;/**Principal is on top of college.</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; *HOD -Maths and Comp. Sc directly reports to him</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; *Teachers of Computer Sc. directly reports to HOD-CSE</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; *Teachers of Mathematics directly reports to HOD-Maths</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; */</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public static void main(String[] args) {</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\"***Composite Pattern Demo ***\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;//2 teachers other than HOD works in Mathematics department</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;Employee mathTeacher1 = new Employee(\"Math Teacher-1\",\"Maths\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;Employee mathTeacher2 = new Employee(\"Math Teacher-2\",\"Maths\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;//teachers other than HOD works in Computer Sc. Department</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;Employee cseTeacher1 = new Employee(\"CSE Teacher-1\", \"Computer Sc.\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;Employee cseTeacher2 = new Employee(\"CSE Teacher-2\", \"Computer Sc.\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;Employee cseTeacher3 = new Employee(\"CSE Teacher-3\", \"Computer Sc.\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;//The College has 2 Head of Departments-One from Mathematics, One //from Computer Sc.</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;CompositeEmployee hodMaths = new CompositeEmployee(\"Mrs.S.Das(HOD-Maths)\",\"Maths\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;CompositeEmployee hodCompSc = new CompositeEmployee(\"Mr. V.Sarcar(HOD-CSE)\", \"Computer Sc.\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;//Principal of the college</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;CompositeEmployee principal = new CompositeEmployee(\"Dr.S.Som(Principal)\",\"Planning-Supervising-Managing\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;//Teachers of Mathematics directly reports to HOD-Maths</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;hodMaths.addEmployee(mathTeacher1);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;hodMaths.addEmployee(mathTeacher2);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;//Teachers of Computer Sc. directly reports to HOD-CSE</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;hodCompSc.addEmployee(cseTeacher1);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;hodCompSc.addEmployee(cseTeacher2);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;hodCompSc.addEmployee(cseTeacher3);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;/*Principal is on top of college.HOD -Maths and Comp. Sc directly reports to him*/</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;principal.addEmployee(hodMaths);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;principal.addEmployee(hodCompSc);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;/*Printing the leaf-nodes and branches in the same way i.e.</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp; in each case, we are calling PrintStructures() method</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp; */</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\"\\n Testing the structure of a Principal object\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;//Prints the complete structure</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;principal.printStructures();</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\"At present Principal has control over \"+ principal.getEmployeeCount()+ \" number of employees.\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\"\\n Testing the structure of a HOD-CSE object:\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;//Prints the details of Computer Sc, department</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;hodCompSc.printStructures();</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\"At present HOD-CSE has control over \"+ hodCompSc.getEmployeeCount()+ \" number of employees.\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\"\\n Testing the structure of a HOD-Maths object:\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;//Prints the details of Mathematics department</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;hodMaths.printStructures();</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\"At present HOD-Maths has control over \"+ hodMaths.getEmployeeCount()+ \" number of employees.\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;//Leaf node</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\"\\n Testing the structure of a leaf node:\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;mathTeacher1.printStructures();</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\"At present Math Teacher-1 has control over \"+ mathTeacher1.getEmployeeCount()+ \" number of employees.\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;/*Suppose, one computer teacher is leaving now</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp; from the organization*/</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;hodCompSc.removeEmployee(cseTeacher2);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\"\\n After CSE Teacher-2 resigned, the organization has following members:\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;principal.printStructures();</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\"At present Principal has control over \"+ principal.getEmployeeCount()+ \" number of employees\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\"At present HOD-CSE has control over \"+ hodCompSc.getEmployeeCount()+ \" number of employees\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\"At present HOD-Maths has control over \"+ hodMaths.getEmployeeCount()+ \" number of employees\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">}</font>  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "F!E-LdY8hb",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   11 - Composite Pattern.&nbsp; &nbsp;&nbsp;   <span style=\"font-weight: bold;\">What are the</span>    <span style=\"font-weight: bold;\">advantages</span>    <span style=\"font-weight: bold;\">of using composite design patterns?</span>  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     </div>  <ul>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     In a tree-like structure, you can treat both the composite objects (branches) and the individual objects (leaf-nodes) uniformly. Notice that in this example, I have used two common methods: printStructures() and getEmployeeCount() to print the structure and get the employee count from both the composite object structure (principal or HODs) and the single object structure (i.e., leaf nodes like Math Teacher 1.)    </div></li>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     It is very common to implement a part-whole hierarchy using this design pattern.    </div></li>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     You can easily add a new component to an existing architecture or delete an existing component from your architecture.    </div></li>  </ul></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "oADxXiVP{c",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   11 - Composite Pattern.&nbsp; &nbsp;&nbsp;   <span style=\"font-weight: bold;\">What are the</span>    <span style=\"font-weight: bold;\">challenges</span>    <span style=\"font-weight: bold;\">associated with using composite design patterns?</span>  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     </div>  <ul>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     If you want to maintain the ordering of child nodes (e.g., if parse trees are represented as components), you may need to use additional efforts.    </div></li>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     If you are dealing with immutable objects, you cannot simply delete those.    </div></li>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     You can easily add a new component but that kind of support can cause maintenance overhead in the future. Sometimes, you want to deal with a composite object that has special components. This kind of constraint can cause additional development costs because you may need to implement a dynamic checking mechanism to support the concept.    </div></li>  </ul></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "uP[2(ImX8<",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   11 - Composite Pattern.&nbsp; &nbsp;&nbsp;   <span style=\"font-weight: bold;\">In this example, you have used list data structure</span>    <span style=\"font-weight: bold;\">. But I prefer to use other data structures. Is this okay?</span>  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">    Absolutely. There is no universal rule. You are free to use your preferred data structure. GoF confirmed that it is not necessary to use any general-purpose data structure   <span style=\"font-style: italic;\">.</span>  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "N1iM>*1E{2",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   11 - Composite Pattern.&nbsp; &nbsp;&nbsp;   <span style=\"font-weight: bold;\">How can you connect the iterator design pattern to a composite design pattern?</span>  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <b>&nbsp;</b>Go through our example once again. If you want to examine composite object architecture, you may need to iterate over the objects. In other words, if you want to do special activities with branches, you may need to iterate over its leaf nodes and non-leaf nodes. Iterator patterns are often used with composite patterns.  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "o+e~Zkr1_J",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   11 - Composite Pattern.&nbsp; &nbsp;&nbsp;   <span style=\"font-weight: bold;\">In the interface of your implementation, you defined only two methods: printStructures()</span>    <span style=\"font-weight: bold;\">and getEmployeeCount()</span>    <span style=\"font-weight: bold;\">. But you are using other methods for the addition and removal of objects in the Composite class (CompositeEmployee). Why didn’t you put these methods in the interface?</span>  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">    Nice observation. GoF discussed this. Let’s look at what happens if you put the addEmployee (…) and removeEmployee (…) methods in the interface. The leaf nodes need to implement the addition and removal operations. But will it be meaningful in this case? The obvious answer is no. It may appear that you lose transparency, but I believe that you have more safety because I have blocked the meaningless operations in the leaf nodes. This is why the GoF mentioned that this kind of decision involves a trade-off between safety and transparency.  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "w_Gu2rx+gS",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   11 - Composite Pattern.&nbsp; &nbsp;&nbsp;   <span style=\"font-weight: bold;\">I want to use an abstract class instead of an interface. Is this allowed?</span>  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <b>&nbsp;</b>In most of the cases, the simple answer is yes. But you need to understand the difference between an abstract class and an interface. In a typical scenario, you find one of them more useful than the other one. Since I am presenting only simple and easy to understand examples, you may not see much difference between the two. Particularly in this example, if I use the abstract class instead of the interface, I may put a default implementation of getEmployeeCount() in the abstract class definition. Although you can still argue that with Java’s default keyword, you could achieve the same, as in the following:  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <br>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">interface IEmployee</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;void printStructures();</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;//int getEmployeeCount();</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;default public int getEmployeeCount()</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;return 0;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">}</font>  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "C_b{>b,xr3",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"width: 846px; padding: 8px; border: 1px solid;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   9 - Facade Pattern.&nbsp; &nbsp; what's the gof definition of the facade pattern ?  </div></td></tr>",
                        "<tr> <td style=\"width: 846px; padding: 8px; border: 1px solid;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   &nbsp;&nbsp;&nbsp; &nbsp;Provide a unified interface to a set of interfaces in a subsystem. Facade defines a higher-level interface that makes the subsystem easier to use.  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "EQIGw}v>o2",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   9 - Facade Pattern.&nbsp; &nbsp; what's the purpose of the facade pattern ?  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   &nbsp;&nbsp;&nbsp; &nbsp;Facades make a client’s life easier. Suppose that there is a complex system where multiple objects need to perform a series of tasks, and you need to interact with the system. In a situation like this, facade can provide you a simplified interface that takes care of everything (the creation of those objects, providing the correct sequence of tasks, etc.). As a result, instead of interacting with multiple objects in a complicated way, you just interact with a single object.   <br>  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "o8OE-$^sr2",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   9 - Facade Pattern.&nbsp; &nbsp; Can you give an example of the facade pattern ?  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">    In the following implementation, you create some robots, and later, you destroy those objects. (The word “destroy” is not used in the context of garbage collection in this example). Here you can construct or destroy a particular kind of robot by invoking simple methods like constructMilanoRobot() and destroyMilanoRobot() of the RobotFacade class.  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   From a client’s point of view, he/she needs to interact only with the facade (see FacadePatternExample.java). RobotFacade is taking full responsibility in creating or destroying a particular kind of robot. This facade is talking to each of the subsystems (RobotHands, RobotBody, RobotColor) to fulfill the client’s request. The RobotBody class includes two simple static methods that provide instructions prior to the creation or destruction of a robot.  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   So, in this implementation, the clients do not need to worry about the creation of the separate classes and the calling sequence of the methods.  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <br>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   Figure    <a href=\"https://learning.oreilly.com/library/view/java-design-patterns/9781484240786/html/395506_2_En_9_Chapter.xhtml#Fig1\">9-1</a> shows the class diagram.  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <img src=\"9-FacadePatternImage.jpg\" type=\"image/jpeg\" data-filename=\"Image.jpg\" style=\"box-sizing: border-box; -webkit-tap-highlight-color: transparent; -webkit-font-smoothing: antialiased; border: 0px; height: 35.38em; max-width: 100%; vertical-align: middle; margin: 0px; padding: 2px;\" width=\"805\">  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "xC@Nv$ki`z",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   9 - Facade Pattern. can you provide an implementation of the facade pattern ?  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-family: &quot;Segoe UI&quot;; font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">&nbsp;&nbsp;</span>   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-family: &quot;Segoe UI&quot;; font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">Here’s the implementation.</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">// RobotBody.java</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">package jdp2e.facade.demo;</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">public class RobotBody</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">{</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;//Instruction manual -how to create a robot</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;public static void createRobot()</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;{</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\"><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">&nbsp; &nbsp; &nbsp; &nbsp;System.</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; font-style: italic;\">out</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">.println(\" Refer the manual before creation of a robot.\");</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;}</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;//Method to create hands of a robot</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;public void createHands()</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;{</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\"><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">&nbsp; &nbsp; &nbsp; &nbsp;System.</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; font-style: italic;\">out</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">.println(\" Hands manufactured.\");</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;}</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;//Method to create remaining parts (other than hands) of a robot</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;public void createRemainingParts()</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;{</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\"><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">&nbsp; &nbsp; &nbsp; &nbsp;System.</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; font-style: italic;\">out</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">.println(\" Remaining parts (other than hands) are created.\");</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;}</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;//Instruction manual -how to destroy a robot</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;public static void destroyRobot()</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;{</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\"><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">&nbsp; &nbsp; &nbsp; &nbsp;System.</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; font-style: italic;\">out</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">.println(\" Refer the manual before destroying of a robot.\");</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;}</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;//Method to destroy hands of a robot</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;public void destroyHands()</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;{</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\"><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">&nbsp; &nbsp; &nbsp; &nbsp;System.</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; font-style: italic;\">out</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">.println(\" The robot's hands are destroyed.\");</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;}</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;//Method to destroy remaining parts (other than hands) of a robot</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;public void destroyRemainingParts()</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;{</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\"><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">&nbsp; &nbsp; &nbsp; &nbsp;System.</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; font-style: italic;\">out</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">.println(\" The robot's remaining parts are destroyed.\");</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;}</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">}</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">//RobotColor.java</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">package jdp2e.facade.demo;</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">public class RobotColor</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">{</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;public void setDefaultColor()</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;{</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\"><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">&nbsp; &nbsp; &nbsp; &nbsp;System.</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; font-style: italic;\">out</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">.println(\" This is steel color robot.\");</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;}</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;public void setGreenColor()</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;{</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\"><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">&nbsp; &nbsp; &nbsp; &nbsp;System.</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; font-style: italic;\">out</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">.println(\" This is a green color robot.\");</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;}</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">}</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">// RobotHands.java</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">package jdp2e.facade.demo;</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">public class RobotHands</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">{</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;public void setMilanoHands()</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;{</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\"><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">&nbsp; &nbsp; &nbsp; &nbsp;System.</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; font-style: italic;\">out</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">.println(\" The robot will have EH1 Milano hands.\");</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;}</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;public void setRobonautHands()</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;{</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\"><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">&nbsp; &nbsp; &nbsp; &nbsp;System.</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; font-style: italic;\">out</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">.println(\" The robot will have Robonaut hands.\");</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;}</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;public void resetMilanoHands()</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;{</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\"><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">&nbsp; &nbsp; &nbsp; &nbsp;System.</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; font-style: italic;\">out</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">.println(\" EH1 Milano hands are about to be destroyed.\");</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;}</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;public void resetRobonautHands()</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;{</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\"><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">&nbsp; &nbsp; &nbsp; &nbsp;System.</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; font-style: italic;\">out</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">.println(\" Robonaut hands are about to be destroyed.\");</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;}</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">}</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">// RobotFacade.java</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">package jdp2e.facade.demo;</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">public class RobotFacade</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">{</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;RobotColor rColor;</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;RobotHands rHands ;</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;RobotBody rBody;</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;public RobotFacade()</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;{</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;rColor = new RobotColor();</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;rHands = new RobotHands();</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;rBody = new RobotBody();</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;}</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;//Constructing a Milano Robot</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;public void constructMilanoRobot()</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;{</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\"><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">&nbsp; &nbsp; &nbsp; &nbsp;RobotBody.</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; font-style: italic;\">createRobot</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">();</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\"><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">&nbsp; &nbsp; &nbsp; &nbsp;System.</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; font-style: italic;\">out</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">.println(\"Creation of a Milano Robot Start.\");</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;rColor.setDefaultColor();</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;rHands.setMilanoHands();</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;rBody.createHands();</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;rBody.createRemainingParts();</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\"><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">&nbsp; &nbsp; &nbsp; &nbsp;System.</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; font-style: italic;\">out</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">.println(\" Milano Robot Creation End.\");</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\"><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">&nbsp; &nbsp; &nbsp; &nbsp;System.</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; font-style: italic;\">out</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">.println();</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;}</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;//Constructing a Robonaut Robot</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;public void constructRobonautRobot()</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;{</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\"><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">&nbsp; &nbsp; &nbsp; &nbsp;RobotBody.</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; font-style: italic;\">createRobot</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">();</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\"><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">&nbsp; &nbsp; &nbsp; &nbsp;System.</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; font-style: italic;\">out</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">.println(\"Initiating the creational process of a Robonaut Robot.\");</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;rColor.setGreenColor();</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;rHands.setRobonautHands();</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;rBody.createHands();</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;rBody.createRemainingParts();</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\"><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">&nbsp; &nbsp; &nbsp; &nbsp;System.</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; font-style: italic;\">out</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">.println(\"A Robonaut Robot is created.\");</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\"><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">&nbsp; &nbsp; &nbsp; &nbsp;System.</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; font-style: italic;\">out</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">.println();</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;}</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;//Destroying a Milano Robot</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;public void destroyMilanoRobot()</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;{</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\"><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">&nbsp; &nbsp; &nbsp; &nbsp;RobotBody.</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; font-style: italic;\">destroyRobot</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">();</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\"><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">&nbsp; &nbsp; &nbsp; &nbsp;System.</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; font-style: italic;\">out</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">.println(\" Milano Robot's destruction process is started.\");</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;rHands.resetMilanoHands();</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;rBody.destroyHands();</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;rBody.destroyRemainingParts();</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\"><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">&nbsp; &nbsp; &nbsp; &nbsp;System.</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; font-style: italic;\">out</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">.println(\" Milano Robot's destruction process is over.\");</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\"><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">&nbsp; &nbsp; &nbsp; &nbsp;System.</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; font-style: italic;\">out</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">.println();</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;}</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;//Destroying a Robonaut Robot</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;public void destroyRobonautRobot()</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;{</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\"><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">&nbsp; &nbsp; &nbsp; &nbsp;RobotBody.</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; font-style: italic;\">destroyRobot</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">();</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\"><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">&nbsp; &nbsp; &nbsp; &nbsp;System.</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; font-style: italic;\">out</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">.println(\" Initiating a Robonaut Robot's destruction process.\");</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;rHands.resetRobonautHands();</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;rBody.destroyHands();</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;rBody.destroyRemainingParts();</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\"><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">&nbsp; &nbsp; &nbsp; &nbsp;System.</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; font-style: italic;\">out</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">.println(\" A Robonaut Robot is destroyed.\");</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\"><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">&nbsp; &nbsp; &nbsp; &nbsp;System.</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; font-style: italic;\">out</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">.println();</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;}</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">}</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">//Client code</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">//FacadePatternExample.java</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">package jdp2e.facade.demo;</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">public class FacadePatternExample {</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;public static void main(String[] args) {</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\"><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">&nbsp; &nbsp; &nbsp; &nbsp;System.</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; font-style: italic;\">out</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">.println(\"***Facade Pattern Demo***\\n\");</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;//Creating Robots</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;RobotFacade milanoRobotFacade = new RobotFacade();</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;milanoRobotFacade.constructMilanoRobot();</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;RobotFacade robonautRobotFacade = new RobotFacade();</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;robonautRobotFacade.constructRobonautRobot();</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;//Destroying robots</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;milanoRobotFacade.destroyMilanoRobot();</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;robonautRobotFacade.destroyRobonautRobot();</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;}</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">}</font></span>  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "q0AlRihOha",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   9 - Facade Pattern.  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-weight: bold;\">What are key advantages of using a facade pattern?</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-weight: bold;\">I see that the facade class is using compositions. Is this intentional?</span>  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   &nbsp;  </div>  <ul>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     If a system consists of many subsystems, managing all those subsystems becomes very tough and clients may find their life difficult to communicate separately with each of these subsystems. In this scenario, facade patterns are very much handy. It provides a simple interface to clients. In simple words, instead of presenting complex subsystems, you present one simplified interface to clients. This approach also promotes weak coupling by separating a client from the subsystems.    </div></li>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     It can also help you to reduce the number of objects that a client needs to deal with.    </div></li>  </ul>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <b><br></b>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   Yes. With this approach, you can easily access the methods in each subsystem.  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "sQ}.!#}=f:",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   9 - Facade Pattern.&nbsp;   <span style=\"font-weight: bold;\">It appears to me that facades do not restrict us to directly connect with subsystems. Is this understanding correct?</span>  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">    Yes. A facade does not encapsulate the subsystem classes or interfaces. It just provides a simple interface (or layer) to make your life easier. You are free to expose any functionality of the subsystem, but in those cases, your code may look dirty, and at the same time, you lose all the benefits associated with this pattern.  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "J-!p1-iC|q",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   9 - Facade Pattern.&nbsp;   <span style=\"font-weight: bold;\">How is it different from adapter design pattern?</span>  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">    In the adapter pattern, you try to alter an interface so that the clients do not feel the difference between the interfaces. The facade pattern simplifies the interface. They present the client a simple interface to interact with (instead of a complex subsystem).  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "Q9?=r5@mMN",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   9 - Facade Pattern..&nbsp;   <span style=\"font-weight: bold;\">There should be only one facade for a complex subsystem. Is this correct?</span>  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">    Not at all. You can create any number of facades for a particular subsystem.  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "q9A>J7!~i>",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   9 - Facade Pattern.&nbsp;   <span style=\"font-weight: bold;\">Can I add more stuffs/logic with a facade?</span>  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">    Yes, you can.  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "Bt8M{l.82@",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-weight: bold;\">9 - Facade Pattern. What are the challenges associated with a facade pattern?</span>  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     </div>  <ul>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     Subsystems are connected with the facade layer. So, you need to take care of an additional layer of coding (i.e., your codebase increases).    </div></li>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     When the internal structure of a subsystem changes, you need to incorporate the changes in the facade layer also.    </div></li>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     Developers need to learn about this new layer, whereas some of them may already be aware of how to use the subsystems/APIs efficiently.    </div></li>  </ul></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "m&bl@/7iER",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   9 - Facade Pattern.&nbsp;   <span style=\"font-weight: bold;\">How is it</span>    <span style=\"font-weight: bold;\">different from the mediator design pattern?</span>  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">    In a mediator pattern implementation, subsystems are aware of the mediator. They talk to each other. But in a facade, subsystems are not aware of the facade and the one-way communication is provided from facade to the subsystem(s). (The mediator pattern is discussed in Chapter    <a href=\"https://learning.oreilly.com/library/view/java-design-patterns/9781484240786/html/395506_2_En_21_Chapter.xhtml\">21</a> of this book).  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "jlwv=#](36",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   9 - Facade Pattern.&nbsp;   <span style=\"font-weight: bold;\">It appears to me that to implement a facade pattern, I have to write lots of code. Is this understanding correct?</span>  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">    Not at all. It depends on the system and corresponding functionalities. For example, in the preceding implementation, if you consider only one type of robot (either Milano or Robonaut), and if you do not want to provide the destruction mechanism of robots, and if you want to ignore the instruction manuals (two static methods in this example), your code size will drop significantly. I have kept all of these for complete illustration purposes.  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "PK8:~Ds]=q",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"width: 868px; padding: 8px; border: 1px solid;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt;\">1 - Singleton Pattern. what is the gof definition of a singleton ?&nbsp;&nbsp;What is the concept behind a singleton ?&nbsp;Why this approach can be necessary ?&nbsp;</span>  </div></td></tr>",
                        "<tr> <td style=\"width: 868px; padding: 8px; border: 1px solid;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt;\">&nbsp;Ensure a class only has one instance, and provide a global point of access to it.&nbsp;A class cannot have multiple instances. Once created, the next time onward, you use only the existing instance.&nbsp;</span>  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "y{F{5+D3rd",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"width: 868px; padding: 8px; border: 1px solid;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-weight: bold;\">1 - Singleton Pattern.</span>   <span style=\"font-size: 10pt;\">&nbsp; &nbsp; Can you describe the key characteristic of a singleton ?&nbsp;</span>  </div></td></tr>",
                        "<tr> <td style=\"width: 868px; padding: 8px; border: 1px solid;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-weight: bold;\"></span> &nbsp;&nbsp; &nbsp;  </div>  <ul>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     The constructor is private, so you cannot instantiate the Singleton class(Captain) outside. It helps us to refer the only instance that can exist in the system, and at the same time, you restrict the additional object creation of the Captain class.    </div></li>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     The private constructor also ensures that the Captain class cannot be extended. So, subclasses cannot misuse the concept.    </div></li>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     I used the “synchronized” keyword. So, multiple threads cannot involve in the instantiation process at the same time. I am forcing each thread to wait its turn to get the method, so thread- safety is ensured. But synchronization is a costly operation and once the instance is created, it is an additional overhead. (I’ll discuss some alternative methods in the upcoming sections, but each of them has its own pros and cons).    </div></li>  </ul>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <br>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <img src=\"1-SingletonPatternImage.jpg\" type=\"image/jpeg\" data-filename=\"Image.jpg\" width=\"483\">  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "ABQj%^@EYg",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 868px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt;\">1 - Singleton Pattern. can you give an implementation of a singleton ?</span>  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 868px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-weight: bold;\"></span>    <span style=\"font-size: 10pt;\">Here’s the implementation.</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font style=\"font-size: 10pt;\"><br></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">package jdp2e.singleton.demo;</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">final class Captain</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp;private static Captain</span>    <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace; font-style: italic;\">captain</span>   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">;</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp;//We make the constructor private to prevent the use of \"new\"</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp;private Captain() { &nbsp; &nbsp;}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp;public static synchronized Captain getCaptain()</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp;{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp; &nbsp; &nbsp;// Lazy initialization</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp; &nbsp; &nbsp;if (</span>   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace; font-style: italic;\">captain</span>    <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">== null)</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp; &nbsp; &nbsp;{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span>   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace; font-style: italic;\">captain</span>    <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">= new Captain();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font style=\"font-size: 10pt;\"><span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;System.</span><span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace; font-style: italic;\">out</span><span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">.println(\"New captain is elected for your team.\");</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp; &nbsp; &nbsp;}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp; &nbsp; &nbsp;else</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp; &nbsp; &nbsp;{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font style=\"font-size: 10pt;\"><span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;System.</span><span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace; font-style: italic;\">out</span><span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">.print(\"You already have a captain for your team.\");</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font style=\"font-size: 10pt;\"><span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;System.</span><span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace; font-style: italic; font-weight: bold;\">out</span><span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">.println(\"Send him for the toss.\");</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp; &nbsp; &nbsp;}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp; &nbsp; &nbsp;return</span>    <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace; font-style: italic;\">captain</span>   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">;</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp;}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font style=\"font-size: 10pt;\"><br></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt;\">// We cannot extend Captain class. The constructor is private in this case.</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">//class B extends Captain{}// error</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">public class SingletonPatternExample {</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp;public static void main(String[] args) {</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font style=\"font-size: 10pt;\"><span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp; &nbsp; &nbsp;System.</span><span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace; font-style: italic;\">out</span><span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">.println(\"***Singleton Pattern Demo***\\n\");</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font style=\"font-size: 10pt;\"><span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp; &nbsp; &nbsp;System.</span><span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace; font-style: italic;\">out</span><span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">.println(\"Trying to make a captain for your team:\");</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp; &nbsp; &nbsp;//Constructor is private.We cannot use \"new\" here.</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp; &nbsp; &nbsp;//Captain c3 = new Captain();//error</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font style=\"font-size: 10pt;\"><span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp; &nbsp; &nbsp;Captain captain1 = Captain.</span><span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace; font-style: italic;\">getCaptain</span><span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">();</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font style=\"font-size: 10pt;\"><span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp; &nbsp; &nbsp;System.</span><span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace; font-style: italic;\">out</span><span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">.println(\"Trying to make another captain for your team:\");</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font style=\"font-size: 10pt;\"><span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp; &nbsp; &nbsp;Captain captain2 = Captain.</span><span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace; font-style: italic;\">getCaptain</span><span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">();</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp; &nbsp; &nbsp;if (captain1 == captain2)</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp; &nbsp; &nbsp;{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font style=\"font-size: 10pt;\"><span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;System.</span><span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace; font-style: italic;\">out</span><span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">.println(\"captain1 and captain2 are same instance.\");</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp; &nbsp; &nbsp;}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp;}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">}</span>  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "GGnRfVe%#8",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 868px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-weight: bold;\">1 - Singleton Pattern.&nbsp;&nbsp; &nbsp;</span>   <span style=\"font-size: 10pt;\">How can you prevent subclassing in a singleton ?</span>  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 868px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt;\"> &nbsp;&nbsp; &nbsp;Subclassing can be prevented in various ways. Yes, in this example, since the constructor is already marked with the “private” keyword, it was not needed. But if you make the Captain class final, as shown in the example, that approach is considered a better practice. It is effective when you consider a nested class. For example, let’s modify the private constructor body to examine the number of instances (of the Captain class) created. Let’s further assume that in the preceding example, you have a</span>    <span style=\"font-size: 10pt; font-style: italic;\">non-static nested class</span>    <span style=\"font-size: 10pt;\">(called</span>    <span style=\"font-size: 10pt; font-style: italic;\">inner class</span>    <span style=\"font-size: 10pt;\">in Java) like the following. (All changes are shown in bold.)</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">//final class Captain</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">class Captain</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp;private static Captain captain;</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp;//We make the constructor private to prevent the use of \"new\"</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font style=\"font-size: 10pt;\"><span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp;</span><span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace; font-weight: bold;\">static int numberOfInstance=0;</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp;private Captain()</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp;{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font style=\"font-size: 10pt;\"><span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp; &nbsp; &nbsp;</span><span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace; font-weight: bold;\">numberOfInstance++;</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font style=\"font-size: 10pt;\"><span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp; &nbsp; &nbsp;</span><span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace; font-weight: bold;\">System.out.println(\"Number of instances at this moment=\"+ numberOfInstance);</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp;}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp;public static synchronized Captain getCaptain()</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp;{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp; &nbsp; &nbsp;// Lazy initialization</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp; &nbsp; &nbsp;if (captain == null)</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp; &nbsp; &nbsp;{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;captain = new Captain();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;System.out.println(\"New captain is elected for your team.\");</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp; &nbsp; &nbsp;}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp; &nbsp; &nbsp;else</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp; &nbsp; &nbsp;{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;System.out.print(\"You already have a captain for your team.\");</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;System.out.println(\"Send him for the toss.\");</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp; &nbsp; &nbsp;}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp; &nbsp; &nbsp;return captain;</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp;}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp;</span>    <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace; font-weight: bold;\">//A non-static nested class (inner class)</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp;</span>    <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace; font-weight: bold;\">public class CaptainDerived extends Captain</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp;</span>    <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace; font-weight: bold;\">{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp;</span>    <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace; font-weight: bold;\">//Some code</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp;</span>    <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace; font-weight: bold;\">}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font style=\"font-size: 10pt;\"><br></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt;\">Now add an another line of code (shown in bold) inside the main() method , as follows.</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font style=\"font-size: 10pt;\"><br></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">public class SingletonPatternExample {</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp;public static void main(String[] args) {</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font style=\"font-size: 10pt;\"><span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp; &nbsp; &nbsp;System.</span><span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace; font-style: italic;\">out</span><span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">.println(\"***Singleton Pattern Demo***\\n\");</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font style=\"font-size: 10pt;\"><span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp; &nbsp; &nbsp;System.</span><span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace; font-style: italic;\">out</span><span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">.println(\"Trying to make a captain for your team:\");</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp; &nbsp; &nbsp;//Constructor is private.We cannot use \"new\" here.</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp; &nbsp; &nbsp;//Captain c3 = new Captain();//error</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font style=\"font-size: 10pt;\"><span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp; &nbsp; &nbsp;Captain captain1 = Captain.</span><span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace; font-style: italic;\">getCaptain</span><span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">();</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font style=\"font-size: 10pt;\"><span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp; &nbsp; &nbsp;System.</span><span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace; font-style: italic;\">out</span><span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">.println(\"Trying to make another captain for your team:\");</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font style=\"font-size: 10pt;\"><span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp; &nbsp; &nbsp;Captain captain2 = Captain.</span><span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace; font-style: italic;\">getCaptain</span><span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">();</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp; &nbsp; &nbsp;if (captain1 == captain2)</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp; &nbsp; &nbsp;{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font style=\"font-size: 10pt;\"><span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;System.</span><span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace; font-style: italic;\">out</span><span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">.println(\"captain1 and captain2 are same instance.\");</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp; &nbsp; &nbsp;}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font style=\"font-size: 10pt;\"><span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp; &nbsp; &nbsp;</span><span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace; font-weight: bold;\">Captain.CaptainDerived derived=captain1.new CaptainDerived();</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp;}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font style=\"font-size: 10pt;\"><br></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt;\">Now notice the output.</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">***Singleton Pattern Demo***</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">Trying to make a captain for your team:</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">Number of instances at this moment=1</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">New captain is elected for your team.</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">Trying to make another captain for your team:</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">You already have a captain for your team.Send him for the toss.</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">captain1 and captain2 are same instance.</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace; font-weight: bold;\">Number of instances at this moment=2</span>  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "jk&l8:PB54",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 868px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-weight: bold;\">1 - Singleton Pattern.&nbsp;&nbsp; &nbsp;</span>   <span style=\"font-size: 10pt;\">Can you give an example of a singleton with eager initialization ?&nbsp;</span>   <span style=\"font-size: 10pt; font-weight: bold;\">What are pros and cons of an eager initialization ?</span>  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 868px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt;\">&nbsp; &nbsp; &nbsp;Here is a sample implementation of the eager initialization.</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font style=\"font-size: 10pt;\"><br></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">class Captain</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp;//Early initialization</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp;private static final Captain</span>    <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace; font-style: italic;\">captain</span>    <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">= new Captain();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp;//We make the constructor private to prevent the use of \"new\"</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp;private Captain()</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp;{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font style=\"font-size: 10pt;\"><span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp; &nbsp; &nbsp;System.</span><span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace; font-style: italic;\">out</span><span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">.println(\"A captain is elected for your team.\");</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp;}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp;/* Global point of access.The method getCaptain() is a public static method*/</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp;public static Captain getCaptain()</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp;{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font style=\"font-size: 10pt;\"><span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp; &nbsp; &nbsp;System.</span><span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace; font-style: italic;\">out</span><span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">.println(\"You have a captain for your team.\");</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp; &nbsp; &nbsp;return</span>    <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace; font-style: italic;\">captain</span>   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">;</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp;}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font style=\"font-size: 10pt;\"><br></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt;\">An eager initialization approach has the following pros and cons.</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font style=\"font-size: 10pt;\"><br></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-weight: bold;\">Pros</span>  </div>  <ul>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     <span style=\"font-size: 10pt;\">It is straightforward and cleaner.</span>    </div></li>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     <span style=\"font-size: 10pt;\">It is the opposite of lazy initialization but still thread safe.</span>    </div></li>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     <span style=\"font-size: 10pt;\">It has a small lag time when the application is in execution mode because everything is already loaded in memory.</span>    </div></li>  </ul>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-weight: bold;\">Cons</span>  </div>  <ul>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     <span style=\"font-size: 10pt;\">The application takes longer to start (compared to lazy initialization) because everything needs to be loaded first. To examine the penalty, let’s add a dummy method (shown in bold) in the Singleton class. Notice that in the main method, I am invoking only this dummy method. Now examine the output.</span>    </div></li>  </ul>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font style=\"font-size: 10pt;\"><br></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">package jdp2e.singleton.questions_answers;</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">class Captain</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp;//Early initialization</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp;private static final Captain</span>    <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace; font-style: italic;\">captain</span>    <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">= new Captain();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp;//We make the constructor private to prevent the use of \"new\"</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp;private Captain()</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp;{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font style=\"font-size: 10pt;\"><span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp; &nbsp; &nbsp;System.</span><span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace; font-style: italic;\">out</span><span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">.println(\"A captain is elected for your team.\");</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp;}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp;/* Global point of access.The method getCaptain() is a public static method*/</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp;public static Captain getCaptain()</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp;{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font style=\"font-size: 10pt;\"><span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp; &nbsp; &nbsp;System.</span><span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace; font-style: italic;\">out</span><span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">.println(\"You have a captain for your team.\");</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp; &nbsp; &nbsp;return</span>    <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace; font-style: italic;\">captain</span>   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">;</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp;}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font style=\"font-size: 10pt;\"><span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp;</span><span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace; font-weight: bold;\">public static void dummyMethod()</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font style=\"font-size: 10pt;\"><span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp;</span><span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace; font-weight: bold;\">{</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font style=\"font-size: 10pt;\"><span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp; &nbsp; &nbsp;</span><span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace; font-weight: bold;\">System.</span><span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace; font-style: italic; font-weight: bold;\">out</span><span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace; font-weight: bold;\">.println(\"It is a dummy method\");</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font style=\"font-size: 10pt;\"><span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp;</span><span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace; font-weight: bold;\">}</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">public class EagerInitializationExample {</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp;public static void main(String[] args) {</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font style=\"font-size: 10pt;\"><span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp; &nbsp; &nbsp;System.</span><span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace; font-style: italic;\">out</span><span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">.println(\"***Singleton Pattern Demo With Eager Initialization***\\n\");</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font style=\"font-size: 10pt;\"><span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp; &nbsp; &nbsp;</span><span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace; font-weight: bold;\">Captain.</span><span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace; font-style: italic; font-weight: bold;\">dummyMethod</span><span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace; font-weight: bold;\">();</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp; &nbsp; &nbsp;/*System.out.println(\"Trying to make a captain for your team:\");</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp; &nbsp; &nbsp;Captain captain1 = Captain.getCaptain();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp; &nbsp; &nbsp;System.out.println(\"Trying to make another captain for your team:\");</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp; &nbsp; &nbsp;Captain captain2 = Captain.getCaptain();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;if (captain1 == captain2)</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;System.out.println(\"captain1 and captain2 are same instance.\");</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;}*/</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp;}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font style=\"font-size: 10pt;\"><br></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt;\">Notice that</span>    <span style=\"font-size: 10pt; font-style: italic;\">A captain is elected for your team</span>    <span style=\"font-size: 10pt;\">still appears in the output, though you may have no intention to deal with that.</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt;\">So, in the preceding situation, an object of the Singleton class is always instantiated. Also, prior to Java 5, there were many issues that dealt with Singleton classes.</span>  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "K3ea.@Fln{",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 868px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt;\">1 - Singleton Pattern.&nbsp; &nbsp; do you know a solution for making a singleton using a nested static helper class ?&nbsp;&nbsp;What are the advantage of using the static nested class for a singleton ?&nbsp;</span>  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 868px; padding: 8px;\"><h3><span style=\"font-size: 10pt;\"> &nbsp; &nbsp;Bill Pugh came up with a different approach using a static nested helper class.</span></h3>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">package jdp2e.singleton.questions_answers;</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">class Captain1</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp;private Captain1() {</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font style=\"font-size: 10pt;\"><span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp; &nbsp; &nbsp;System.</span><span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace; font-style: italic;\">out</span><span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">.println(\"A captain is elected for your team.\");</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp;}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp;//Bill Pugh solution</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp;private static class SingletonHelper{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp; &nbsp; &nbsp;/*Nested class is referenced after getCaptain() is called*/</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp; &nbsp; &nbsp;private static final Captain1</span>    <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace; font-style: italic;\">captain</span>    <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">= new Captain1();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp;}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp;public static Captain1 getCaptain()</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp;{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font style=\"font-size: 10pt;\"><span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp; &nbsp; &nbsp;return SingletonHelper.</span><span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace; font-style: italic;\">captain</span><span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">;</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp;}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp;/*public static void dummyMethod()</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp;{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp; &nbsp; &nbsp;System.out.println(\"It is a dummy method\");</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp;} &nbsp;*/</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <br>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">This method does not use a synchronization technique and eager initialization. Notice that the SingletonHelper class comes into consideration only when someone invokes the getCaptain() method . And this approach will not create any unwanted output if you just call any dummyMethod() from main(), as with the previous case (to examine the result, you need to uncomment the dummyMethod() body). It is also treated one of the common and standard methods for implementing singletons in Java.</span>  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "Ri=)nBr&K;",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 868px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-weight: bold;\">1 - Singleton Pattern.&nbsp; &nbsp; &nbsp;</span>   <span style=\"font-size: 10pt;\">Can you define a singleton with a double checking locking ?&nbsp;Why the double check locking is advantageous ?</span>   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp;</span>  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 868px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-weight: bold;\"></span>    <span style=\"font-size: 10pt;\">&nbsp;&nbsp; &nbsp;Here's the implementation</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font style=\"font-size: 10pt;\"><br></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">package jdp2e.singleton.questions_answers;</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">final class Captain2</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp;private static Captain2</span>    <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace; font-style: italic;\">captain</span>   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">;</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp;//We make the constructor private to prevent the use of \"new\"</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp;static int</span>    <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace; font-style: italic;\">numberOfInstance</span>   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">=0;</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp;private Captain2() {</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font style=\"font-size: 10pt;\"><span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp; &nbsp; &nbsp;</span><span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace; font-style: italic;\">numberOfInstance</span><span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">++;</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp; &nbsp; &nbsp;System.</span>   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace; font-style: italic;\">out</span>   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">.println(\"Number of instances at this moment=\"+</span>    <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace; font-style: italic;\">numberOfInstance</span>   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">);</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp;}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp;public static &nbsp;Captain2 getCaptain(){</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace; font-weight: bold;\">&nbsp; &nbsp; &nbsp; &nbsp;if (</span>   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace; font-style: italic; font-weight: bold;\">captain</span>    <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace; font-weight: bold;\">== null) {</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace; font-weight: bold;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;synchronized (Captain2.class) {</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// Lazy initialization</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace; font-weight: bold;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;if (</span>   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace; font-style: italic; font-weight: bold;\">captain</span>    <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace; font-weight: bold;\">== null){</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span>   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace; font-style: italic;\">captain</span>    <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">= new Captain2();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font style=\"font-size: 10pt;\"><span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;System.</span><span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace; font-style: italic;\">out</span><span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">.println(\"New captain is elected for your team.\");</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;else</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font style=\"font-size: 10pt;\"><span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;System.</span><span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace; font-style: italic;\">out</span><span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">.print(\"You already have a captain for your team.\");</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font style=\"font-size: 10pt;\"><span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;System.</span><span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace; font-style: italic;\">out</span><span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">.println(\"Send him for the toss.\");</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp; &nbsp; &nbsp;}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp; &nbsp; &nbsp;return</span>    <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace; font-style: italic;\">captain</span>   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">;</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">&nbsp; &nbsp;}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;, monospace;\">}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font style=\"font-size: 10pt;\"><br></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt;\">If you notice our synchronized implementation of the singleton pattern, you may find that synchronization operations are costly in general and the approach is useful for some initial threads that might break the singleton implementation. But in later phases, the synchronization operations might create additional overhead. To avoid that problem, you can use a synchronized block inside an if condition, as shown in the following code, to ensure that no unwanted instance is created.</span>  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "eS~:Bz50ST",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"width: 846px; padding: 8px; border: 1px solid;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-weight: bold;\">20 - State Pattern.&nbsp; &nbsp;can you give the gof definition of the state pattern ?</span>  </div></td></tr>",
                        "<tr> <td style=\"width: 846px; padding: 8px; border: 1px solid;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">    Allow an object to alter its behavior when its internal state changes. The object will appear to change its class.  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "zs13^Fg536",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-weight: bold;\">20 - State Pattern.&nbsp; &nbsp;can you give an example with a uml diagram of the state pattern ?</span>  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">    The following implementation models the functionalities of a television and its remote control. Suppose that you have a remote control to support the operations of a TV. You can simply assume that at any given time, the TV is in either of these three states: On, Off, or Mute. Initially, the TV is in the Off state. When you press the On button on the remote control, the TV goes into the On state. If you press the Mute button, it goes into the Mute state.  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-style: italic;\">You can assume that if you press the Off button when the TV is already in the Off state, or if you press the On button when the TV is already in the On state, or if you press the Mute button when the TV is already in Mute mode, there is no state change for the TV.</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   The TV can go into the Off state from the On state if you press the Off button, or it goes into a Mute state if you press the Mute button  </div><h3><span style=\"font-weight: bold;\">KEY CHARACTERISTICS</span></h3>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   The key characteristics of the following implementations are as follows.  </div>  <ul>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     For a state-specific behavior, you have separate classes. For example, here you have classes like On, Off, and Mute.    </div></li>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     The TV class is the main class here (the word      <span style=\"font-style: italic;\">main</span> does not mean that it includes the main() method) and the client code only talks to it. In design pattern terms, TV is the context class here.    </div></li>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     Operations defined in the TV class are delegating the behaviour to the current state’s object implementation.    </div></li>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     PossibleState is the interface that defines the methods/operations that are called when you own an object. On, Off, and Mute are concrete states that implement this interface.    </div></li>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     States are triggering state transitions (one state to another state) themselves.    </div></li>  </ul><h3><span style=\"font-size: 11pt;\"><br></span></h3>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <img src=\"20-StatePatternImage.jpg\" type=\"image/jpeg\" data-filename=\"Image.jpg\" style=\"box-sizing: border-box; -webkit-tap-highlight-color: transparent; -webkit-font-smoothing: antialiased; border: 0px; height: 32.78em; max-width: 100%; vertical-align: middle; margin: 0px; padding: 2px;\" width=\"809\">  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "vZ>sHD;Rue",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-weight: bold;\">20 - State Pattern.&nbsp; &nbsp;Can you show an implementation of the state pattern ?</span>  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">    Here’s the implementation.  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\"><br></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">package jdp2e.state.demo;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">interface PossibleState</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;void pressOnButton(TV context);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;void pressOffButton(TV context);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;void pressMuteButton(TV context);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">//Off state</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">class Off implements &nbsp;PossibleState</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;//User is pressing Off button when the TV is in Off state</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;@Override</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public void pressOnButton(TV context)</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\"You pressed On button. Going from Off to On state.\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;context.setCurrentState(new On());</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(context.getCurrentState().toString());</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;//TV is Off already, user is pressing Off button again</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;@Override</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public void pressOffButton(TV context)</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\"You pressed Off button. TV is already in Off state.\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;//User is pressing Mute button when the TV is in Off state</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;@Override</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public void pressMuteButton(TV context)</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\"You pressed Mute button.TV is already in Off state, so Mute operation will not work.\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public String toString()</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;return \"\\t**TV is switched off now.**\";</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">//On state</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">class On implements PossibleState</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;//TV is On already, user is pressing On button again</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;@Override</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public void pressOnButton(TV context)</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\"You pressed On button. TV is already in On state.\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;//User is pressing Off button when the TV is in On state</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;@Override</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public void pressOffButton(TV context)</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\"You pressed Off button.Going from On to Off state.\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;context.setCurrentState(new Off());</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(context.getCurrentState().toString());</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;//User is pressing Mute button when the TV is in On state</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;@Override</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public void pressMuteButton(TV context)</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\"You pressed Mute button.Going from On to Mute mode.\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;context.setCurrentState(new Mute());</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(context.getCurrentState().toString());</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public String toString()</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;return \"\\t**TV is switched on now.**\";</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">//Mute state</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">class Mute implements PossibleState</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;//User is pressing On button when the TV is in Mute mode</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;@Override</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public void pressOnButton(TV context)</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\"You pressed On button.Going from Mute mode to On state.\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;context.setCurrentState(new On());</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(context.getCurrentState().toString());</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;//User is pressing Off button when the TV is in Mute mode</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;@Override</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public void pressOffButton(TV context)</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\"You pressed Off button. Going from Mute mode to Off state.\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;context.setCurrentState(new Off());</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(context.getCurrentState().toString());</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;//TV is in mute mode already, user is pressing mute button again</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;@Override</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public void pressMuteButton(TV context)</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\"You pressed Mute button.TV is already in Mute mode.\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public String toString()</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;return \"\\t**TV is silent(mute) now**\";</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">class TV</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;private PossibleState currentState;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public TV()</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;//Initially TV is initialized with Off state</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;this.setCurrentState(new Off());</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public PossibleState getCurrentState()</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;return currentState;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public void setCurrentState(PossibleState currentState)</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;this.currentState = currentState;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public void pressOffButton()</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;currentState.pressOffButton(this);//Delegating the state</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public void pressOnButton()</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;currentState.pressOnButton(this);//Delegating the state</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public void pressMuteButton()</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;currentState.pressMuteButton(this);//Delegating the state</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">//Client</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">public class StatePatternExample {</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public static void main(String[] args) {</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\"***State Pattern Demo***\\n\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;//Initially TV is Off.</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;TV tv = new TV();</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\"User is pressing buttons in the following sequence:\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\"Off-&gt;Mute-&gt;On-&gt;On-&gt;Mute-&gt;Mute-&gt;Off\\n\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;//TV is already in Off state.Again Off button is pressed.</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;tv.pressOffButton();</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;//TV is already in Off state.Again Mute button is pressed.</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;tv.pressMuteButton();</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;//Making the TV on</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;tv.pressOnButton();</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;//TV is already in On state.Again On button is pressed.</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;tv.pressOnButton();</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;//Putting the TV in Mute mode</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;tv.pressMuteButton();</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;//TV is already in Mute mode.Again Mute button is pressed.</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;tv.pressMuteButton();</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;//Making the TV off</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;tv.pressOffButton();</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">}</font>  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "q{](,;Twrf",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-weight: bold;\">20 - State Pattern.&nbsp; &nbsp;</span>   <span style=\"font-weight: bold;\">Can you elaborate how this pattern is useful with another real-world scenario?</span>  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <b>&nbsp;</b>Psychologists repeatedly documented the fact that human beings can    <span style=\"font-style: italic;\">perform their best when they are in a relaxed mode and they are free of tension</span> but in the reverse scenario, when their minds are filled with tension, they cannot produce great results. That is why psychologists always suggest that you should work in relaxed mood. You can relate this simple philosophy with the TV illustration. If the TV is on, it can entertain you; if it is off, it cannot. Right?    <span style=\"font-style: italic;\">So, if you want to design similar kinds of behavior changes of an object when it’s internal state changes, this pattern is useful.</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   Apart from this example, you can consider the scenario where a customer buys an online ticket and in some later phase he/she cancels it. The refund amount may vary with different conditions; for example, the number of days before you can cancel the ticket.  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "w|<dbH!A?H",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-weight: bold;\">20 - State Pattern.&nbsp; &nbsp;</span>   <span style=\"font-weight: bold;\">In this example, you have considered only three states of a TV: On, Off, or Mute. There are many other states, for example, there may be a state that deals with connection issues or display conditions. Why have you ignored those?</span>  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <b>&nbsp;</b>The straightforward answer is to represent simplicity. If the number of states increases significantly in the system, then it becomes difficult to maintain the system (and it is one of the key challenges associated with this design pattern). But if you understand this implementation, you can easily add any states you want.  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "qtWliw;PN;",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-weight: bold;\">20 - State Pattern.&nbsp; &nbsp;</span>   <span style=\"font-weight: bold;\">I noticed that the GoF represented a similar structure for both the state pattern and the strategy pattern in their famous book. I am confused to see that.</span>  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <b>&nbsp;</b>Yes, the structures are similar, but you need to note that the intents are different. Apart from this key distinction, you can simply think like this: with a strategy pattern provides a better alternative to subclassing. On the other hand, in a state design pattern, different types of behaviors can be encapsulated in a state object and the context is delegated to any of these states. When a context’s internal states change, its behavior also changes.  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   State patterns can also help us avoid lots of if conditions in some contexts. (Consider our example once again. If the TV is in the Off state, it cannot go to the Mute state. From this state, it can move to the On state only.) So, if you do not like state design pattern, you may need to code like this for a On button press.  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\"><br></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">class TV</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">//Some code before</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">public void pressOnButton()</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">if(currentState==Off )</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">System.<span style=\"font-style: italic; font-weight: bold;\">out</span>.println (\" You pressed Onbutton. Going from Off to OnState\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">//Do some operations</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">if(currentState==On )</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp;System.<span style=\"font-style: italic; font-weight: bold;\">out</span>.println (\" You pressed On button. TV is already &nbsp;in On state\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">//TV presently is in mute mode</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">else</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp;System.<span style=\"font-style: italic; font-weight: bold;\">out</span>.println (\" You pressed On button . Going from Mute mode to On State\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">//Do some operations</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\"><br></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   Notice that you need to repeat these checks for different kinds of button presses. (For example, for the pressOffButton() and pressMuteButton() methods, you need to repeat these checks and perform accordingly.)  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   If you do not think in terms of states, if your code base grows, maintenance becomes difficult.  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "Lu:y;-C*|B",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-weight: bold;\">20 - State Pattern.&nbsp; &nbsp;</span>   <span style=\"font-weight: bold;\">How are you supporting the open-close principle in our implementation?</span>  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <b>&nbsp;</b>Each of these TV states are closed for modification, but you can add brand-new states to the TV class.  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "vnt^Hw0li>",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-weight: bold;\">20 - State Pattern.&nbsp; &nbsp;</span>   <span style=\"font-weight: bold;\">What are the common characteristics between the strategy pattern and the state pattern?</span>  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <b>R.&nbsp;</b>Both can promote composition and delegation.  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "B=%ozz1<h",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-weight: bold;\">20 - State Pattern.&nbsp; &nbsp;</span>   <span style=\"font-weight: bold;\">It appears to me that these state objects are acting like singletons. Is this correct?</span>  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <b>&nbsp;&nbsp;</b>Yes. Most times they act in this way.  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "A?8AA:UlDQ",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"width: 846px; padding: 8px; border: 1px solid;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-weight: bold;\">20 - State Pattern.&nbsp; &nbsp;can you show a different implementation of the state pattern ?</span>  </div></td></tr>",
                        "<tr> <td style=\"width: 846px; padding: 8px; border: 1px solid;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   Here is the modified implementation.  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\"><br></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">package jdp2e.state.modified.demo;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">interface PossibleStates</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;void pressOnButton();</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;void pressOffButton();</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;void pressMuteButton();</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">class Off implements &nbsp;PossibleStates</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;TV tvContext;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;//Initially we'll start from Off state</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public Off(TV context)</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;//System.out.println(\" TV is Off now.\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;this.tvContext = context;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;//Users can press any of these buttons at this state-On, Off or Mute</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;//TV is Off now, user is pressing On button</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;@Override</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public void pressOnButton()</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\" You pressed On button. Going from Off to On state\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;tvContext.setCurrentState(tvContext.getOnState());</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(tvContext.getCurrentState().toString());</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;//TV is Off already, user is pressing Off button again</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;@Override</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public void pressOffButton()</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\" You pressed Off button. TV is already in Off state\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;//TV is Off now, user is pressing Mute button</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;@Override</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public void pressMuteButton()</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\" You pressed Mute button.TV is already in Off state, so Mute operation will not work.\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public String toString()</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;return \"\\t**TV is switched off now.**\";</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">class On implements PossibleStates</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;TV tvContext;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public On(TV context)</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;//System.out.println(\" TV is On now.\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;this.tvContext = context;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;//Users can press any of these buttons at this state-On, Off or Mute</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;//TV is On already, user is pressing On button again</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;@Override</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public void pressOnButton()</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\"You pressed On button. TV is already in On state.\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;//TV is On now, user is pressing Off button</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;@Override</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public void pressOffButton()</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\" You pressed Off button.Going from On to Off state.\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;tvContext.setCurrentState(tvContext.getOffState());</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(tvContext.getCurrentState().toString());</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;//TV is On now, user is pressing Mute button</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;@Override</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public void pressMuteButton()</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\"You pressed Mute button.Going from On to Mute mode.\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;tvContext.setCurrentState(tvContext.getMuteState());</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(tvContext.getCurrentState().toString());</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public String toString()</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;return \"\\t**TV is switched on now.**\";</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">class Mute implements PossibleStates</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;TV tvContext;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public Mute(TV context)</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;this.tvContext = context;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;//Users can press any of these buttons at this state-On, Off or Mute</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;//TV is in mute, user is pressing On button</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;@Override</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public void pressOnButton()</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\"You pressed On button.Going from Mute mode to On state.\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;tvContext.setCurrentState(tvContext.getOnState());</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(tvContext.getCurrentState().toString());</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;//TV is in mute, user is pressing Off button</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;@Override</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public void pressOffButton()</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\"You pressed Off button. Going from Mute mode to Off state.\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;tvContext.setCurrentState(tvContext.getOffState());</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(tvContext.getCurrentState().toString());</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;//TV is in mute already, user is pressing mute button again</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;@Override</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public void pressMuteButton()</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\" You pressed Mute button.TV is already in Mute mode.\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public String toString()</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;return \"\\t**TV is silent(mute) now**\";</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">class TV</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;private PossibleStates currentState;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;private PossibleStates onState;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;private PossibleStates offState;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;private PossibleStates muteState;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public TV()</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;onState=new On(this);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;offState=new Off(this);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;muteState=new Mute(this);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;setCurrentState(offState);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public PossibleStates getCurrentState()</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;return currentState;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public void setCurrentState(PossibleStates currentState)</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;this.currentState = currentState;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public void pressOffButton()</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;currentState.pressOffButton();</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public void pressOnButton()</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;currentState.pressOnButton();</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public void pressMuteButton()</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;currentState.pressMuteButton();</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public PossibleStates getOnState()</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;return onState;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public PossibleStates getOffState()</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;return offState;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public PossibleStates getMuteState()</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;return muteState;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">//Client</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">public class StatePatternAlternativeImplementation {</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public static void main(String[] args) {</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\"***State Pattern Alternative Implementation Demo***\\n\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;//Initially TV is Off.</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;TV tv = new TV();</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\"User is pressing buttons in the following sequence:\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\"Off-&gt;Mute-&gt;On-&gt;On-&gt;Mute-&gt;Mute-&gt;Off\\n\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;//TV is already in Off state.Again Off button is pressed.</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;tv.pressOffButton();</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;//TV is already in Off state.Again Mute button is pressed.</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;tv.pressMuteButton();</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;//Making the TV on</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;tv.pressOnButton();</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;//TV is already in On state.Again On button is pressed.</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;tv.pressOnButton();</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;//Putting the TV in Mute mode</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;tv.pressMuteButton();</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;//TV is already in Mute mode.Again Mute button is pressed.</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;tv.pressMuteButton();</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;//Making the TV off</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;tv.pressOffButton();</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">}</font>  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "MT.E#4yQG2",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-weight: bold;\">20 - State Pattern.&nbsp; &nbsp;</span>   <span style=\"font-weight: bold;\">Can you avoid the use of “contexts” in the method parameters. For example, can you avoid them in the following statements?</span>  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <b>&nbsp;</b>If you do not want to use the context parameter like this, you may need to modify the implementation. To give a quick overview, I am presenting the modified Package Explorer view with a modified implementation only.  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   One of the key changes in the following implementation can be seen in the class TV. The TV() constructor is initialized with all possible state objects, which are used for the change of states in later phases. The getter methods are invoked for this purpose. Consider the following implementation.  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "Jdnc:yBY.`",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-weight: bold;\">20 - State Pattern.&nbsp; &nbsp;</span>   <span style=\"font-weight: bold;\">In these implementations, TV is a concrete class. Why are you not programming to interface in this case?</span>  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <b>&nbsp;&nbsp;</b>I assume that the TV class is not going to change, and so I ignored that part to reduce some code size of the program. But yes, you can always start from an interface in which you can define the contracts.  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "n*,nimgu.|",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-weight: bold;\">20 - State Pattern.&nbsp; &nbsp;</span>   <span style=\"font-weight: bold;\">What are the pros and cons of a state design pattern?</span>  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <b>&nbsp;</b>   <span style=\"font-weight: bold;\">Pros</span>  </div>  <ul>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     You have already seen that following the open/close principle, you can easily add new states and new behaviors. Also, a state behavior can be extended without hassle. For example, in this implementation, you can add a new state and a new behavior for a TV class without changing the TV class itself.    </div></li>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     Reduces the use of if-else statements (i.e., conditional complexity is reduced. (Refer to the answer in question 3).    </div></li>  </ul>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-weight: bold;\">Cons</span>  </div>  <ul>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     The state pattern is also known as      <span style=\"font-style: italic;\">objects for states</span>. So, you can assume that more states need more codes, and the obvious side effect is difficult maintenance for you.    </div></li>  </ul></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "A)gV]Vq.5`",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-weight: bold;\">20 - State Pattern.&nbsp; &nbsp;In the TV class constructor, you are initializing the TV with an Off state. So, can both the states and the context class trigger the state transitions?</span>  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <b>&nbsp;</b>Yes.  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "rg!02!/I<=",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"width: 1134px; padding: 8px; border: 1px solid;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   6 - Proxy Pattern.&nbsp; &nbsp;&nbsp;  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   Can you give the gof definition of the proxy pattern?&nbsp;  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   Can you explain the purpose of the proxy pattern ?  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   can you give the uml diagram of the proxy pattern?  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <br>  </div></td></tr>",
                        "<tr> <td style=\"width: 1134px; padding: 8px; border: 1px solid;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   &nbsp;&nbsp; &nbsp;  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   Provide a surrogate or placeholder for another object to control access to it.  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   A proxy is basically a substitute for an intended object. Access to the original object is not always possible due to many factors. For example, it is expensive to create, it is in need of being secured, it resides in a remote location, and so forth. The proxy design pattern helps us in similar contexts. When a client deals with a proxy object, it assumes that it is talking to the actual object. So, in this pattern, you may want to use a class that can perform as an interface to something else.  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <br>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <br>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <img src=\"6-ProxyPatternImage.jpg\" type=\"image/jpeg\" data-filename=\"Image.jpg\" width=\"296\">  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "u?KL?MVewa",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"width: 1134px; padding: 8px; border: 1px solid;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   6 - Proxy Pattern.&nbsp; &nbsp;Can you give an implementation of the proxy pattern ?  </div></td></tr>",
                        "<tr> <td style=\"width: 1134px; padding: 8px; border: 1px solid;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   &nbsp;&nbsp; &nbsp;Here’s the implementation.  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <br>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">package jdp2e.proxy.demo;</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">// Abstract class Subject</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">abstract class Subject</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp;public abstract void doSomeWork();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">// ConcreteSubject class</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">class ConcreteSubject extends Subject</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp;@Override</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp;public void doSomeWork()</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp;{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;System.</span>   <span style=\"font-family: &quot;Source Code Pro&quot;; font-style: italic;\">out</span>   <span style=\"font-family: &quot;Source Code Pro&quot;;\">.println(\"doSomeWork() inside ConcreteSubject is invoked.\");</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp;}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">/**</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">* Proxy Class: It will try to invoke the doSomeWork()</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">* of a ConcreteSubject instance</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">*/</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">Class Proxy extends &nbsp;Subject</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp;static Subject</span>    <span style=\"font-family: &quot;Source Code Pro&quot;; font-style: italic;\">cs</span>   <span style=\"font-family: &quot;Source Code Pro&quot;;\">;</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp;@Override</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp;public void doSomeWork()</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp;{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;System.</span>   <span style=\"font-family: &quot;Source Code Pro&quot;; font-style: italic;\">out</span>   <span style=\"font-family: &quot;Source Code Pro&quot;;\">.println(\"Proxy call happening now...\");</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;//Lazy initialization:We'll not instantiate until the method is //called</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;if (</span>   <span style=\"font-family: &quot;Source Code Pro&quot;; font-style: italic;\">cs</span>    <span style=\"font-family: &quot;Source Code Pro&quot;;\">== null)</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span>    <span style=\"font-family: &quot;Source Code Pro&quot;; font-style: italic;\">cs</span>    <span style=\"font-family: &quot;Source Code Pro&quot;;\">= new ConcreteSubject();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span>   <span style=\"font-family: &quot;Source Code Pro&quot;; font-style: italic;\">cs</span>   <span style=\"font-family: &quot;Source Code Pro&quot;;\">.doSomeWork();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp;}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">/**</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">* The client is talking to a ConcreteSubject instance</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">* through a proxy method.</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">*/</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">public class ProxyPatternExample {</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp;public static void main(String[] args) {</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;System.</span>   <span style=\"font-family: &quot;Source Code Pro&quot;; font-style: italic;\">out</span>   <span style=\"font-family: &quot;Source Code Pro&quot;;\">.println(\"***Proxy Pattern Demo***\\n\");</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Proxy px = new Proxy();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;px.doSomeWork();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp;}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">}</span>  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "wn2q3b%@<U",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 1134px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   6 - Proxy Pattern.&nbsp; &nbsp;Using the proxy pattern (but not just in this case) with a lazy instantiation technique , you may create unnecessary objects in a multithreaded application. Is this correct?  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 1134px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   &nbsp;&nbsp; &nbsp;Yes. In this book, I am presenting simple illustrations only, so I have ignored that part. In the discussions on the singleton pattern, I analyzed some alternative approaches to deal with a multithreaded environment. You can always refer to those discussions in situations like this.&nbsp;  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "xm4{l3jkm]",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 1134px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   6 - Proxy Pattern.&nbsp; &nbsp;Can you give an example of a remote proxy?  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 1134px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   &nbsp;&nbsp; &nbsp;With the help of remote proxies, you can call the method on the proxy object, which in turn forwards the call to the actual object that is running on the remote machine.&nbsp;   <img src=\"6-ProxyPatternImage1.jpg\" type=\"image/jpeg\" data-filename=\"Image.jpg\" style=\"box-sizing: border-box; -webkit-tap-highlight-color: transparent; -webkit-font-smoothing: antialiased; border: 0px; height: 15.37em; max-width: 100%; vertical-align: middle; margin: 0px; padding: 2px;\" width=\"514\">  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "N8s?+^s}$t",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 1134px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   6 - Proxy Pattern.&nbsp; &nbsp;When can you use a virtual proxy?  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 1134px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"color: rgb(0, 0, 0); font-family: &quot;Segoe UI&quot;; font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">&nbsp;&nbsp; &nbsp;It can be used to avoid multiple loadings of an extremely large image.</span>  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "ru5YC>M{.B",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 1134px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   6 - Proxy Pattern.&nbsp; &nbsp;When can you use a protection proxy?  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <br>  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 1134px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   &nbsp; &nbsp;&nbsp;Consider the following example, which is basically a modified version of the proxy pattern implementation described earlier. For simplicity, let’s assume that at present, we have only three registered users who can exercise the doSomeWork() proxy method. A part from them, if any other user (say, Robin) tries to invoke the method, the system will reject those attempts. You must agree, when the system will reject this kind of unwanted access; there is no point in making a proxy object. So, if you avoid instantiating an object of ConcreteSubject in the Proxy class constructor, you can easily avoid these kinds of additional objects creation.  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <br>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">package jdp2e.proxy.modified.demo;</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">import java.util.ArrayList;</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">import java.util.Arrays;</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">import java.util.List;</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">//Abstract class Subject</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">abstract class Subject</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; public abstract void doSomeWork();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">//ConcreteSubject class</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">class ConcreteSubject extends Subject</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; @Override</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; public void doSomeWork()</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; {</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;System.</span>   <span style=\"font-family: &quot;Source Code Pro&quot;; font-style: italic;\">out</span>   <span style=\"font-family: &quot;Source Code Pro&quot;;\">.println(\"doSomeWork() inside ConcreteSubject is invoked.\");</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; }</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">/**</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">* Proxy Class:It will try to invoke the doSomeWork()</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">* of a ConcreteSubject instance</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">*/</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">class ModifiedProxy extends &nbsp;Subject</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; static Subject</span>    <span style=\"font-family: &quot;Source Code Pro&quot;; font-style: italic;\">cs</span>   <span style=\"font-family: &quot;Source Code Pro&quot;;\">;</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; String currentUser;</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; List&lt;String&gt; registeredUsers;</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; //Or, simply create this mutable list in one step</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; /*List&lt;String&gt; registeredUsers=new ArrayList&lt;String&gt;(Arrays.asList( \"Admin\",\"Rohit\",\"Sam\"));*/</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; public ModifiedProxy(String currentUser)</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; {</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;//Registered users are Admin, Rohit and Sam only .</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;registeredUsers = new ArrayList&lt;String&gt;();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;registeredUsers.add(\"Admin\");</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;registeredUsers.add(\"Rohit\");</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;registeredUsers.add(\"Sam\");</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;this.currentUser = currentUser;</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; }</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; @Override</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; public void doSomeWork()</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; {</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;System.</span>   <span style=\"font-family: &quot;Source Code Pro&quot;; font-style: italic;\">out</span>   <span style=\"font-family: &quot;Source Code Pro&quot;;\">.println(\"\\n Proxy call happening now...\");</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;System.</span>   <span style=\"font-family: &quot;Source Code Pro&quot;; font-style: italic;\">out</span>   <span style=\"font-family: &quot;Source Code Pro&quot;;\">.println(currentUser+\" wants to invoke a proxy method.\");</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;if (registeredUsers.contains(currentUser))</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //Lazy initialization:We'll not instantiate until the</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //method is called</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (</span>   <span style=\"font-family: &quot;Source Code Pro&quot;; font-style: italic;\">cs</span>    <span style=\"font-family: &quot;Source Code Pro&quot;;\">== null)</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span>   <span style=\"font-family: &quot;Source Code Pro&quot;; font-style: italic;\">cs</span>    <span style=\"font-family: &quot;Source Code Pro&quot;;\">= new ConcreteSubject();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //Allow the registered user to invoke the method</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span>    <span style=\"font-family: &quot;Source Code Pro&quot;; font-style: italic;\">cs</span>   <span style=\"font-family: &quot;Source Code Pro&quot;;\">.doSomeWork();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;else</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.</span>   <span style=\"font-family: &quot;Source Code Pro&quot;; font-style: italic;\">out</span>   <span style=\"font-family: &quot;Source Code Pro&quot;;\">.println(\"Sorry \"+ currentUser+ \" , you do not have access rights.\");</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; }</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">/**</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">* The client is talking to a ConcreteSubject instance</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">* through a proxy method.</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">*/</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">public class ModifiedProxyPatternExample {</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; public static void main(String[] args) {</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;System.</span>   <span style=\"font-family: &quot;Source Code Pro&quot;; font-style: italic;\">out</span>   <span style=\"font-family: &quot;Source Code Pro&quot;;\">.println(\"***Modified Proxy Pattern Demo***\\n\");</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;//Admin is an authorized user</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;ModifiedProxy px1 = new ModifiedProxy(\"Admin\");</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;px1.doSomeWork();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;//Robin is an unauthorized user</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;ModifiedProxy px2 = new ModifiedProxy(\"Robin\");</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;px2.doSomeWork();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; }</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">}</span>  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "bjiv#3H/[U",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 1134px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   6 - Proxy Pattern.&nbsp; &nbsp;Proxies act like decorators. Is this correct?  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 1134px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   &nbsp;&nbsp; &nbsp;You can implement a protection proxy similar to decorators but you should not forget the intent. Decorators focus on adding responsibilities, but proxies focus on controlling the access to an object. Proxies differ from each other with their types and implementations.    <span style=\"font-style: italic;\">Also, in general, proxies work on the same interface but decorators can work on extended interfaces</span>. So, if you can remember their purposes, in most cases, you can clearly distinguish them from decorators.   <br>  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "btaeDG+o{3",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 1134px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   6 - Proxy Pattern.&nbsp; &nbsp;What are the cons associated with proxies?  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 1134px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   &nbsp;&nbsp; &nbsp;If you are careful enough in your implementation, the pros are much greater than the cons, but  </div>  <ul>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     You can raise your concern about the response time. Since you are not directly talking to the actual object, it is possible that the response time through these proxies is longer.    </div></li>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     You need to maintain additional code for the proxies.    </div></li>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     A proxy can hide the actual responses from objects, which may create confusion in special scenarios.    </div></li>  </ul></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "t]^e<zpHCp",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"width: 846px; padding: 8px; border: 1px solid;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   12 - Bridge Pattern.&nbsp; &nbsp; can you give a definition of the bridge pattern ?  </div></td></tr>",
                        "<tr> <td style=\"width: 846px; padding: 8px; border: 1px solid;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">    Decouple an abstraction from its implementation so that the two can vary independently.  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "OCw:nG:!lH",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   12 - Bridge Pattern.&nbsp; &nbsp; can you show an examplewith uml diagram of the bridge pattern ?  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">    This pattern is also known as the    <span style=\"font-style: italic;\">handle/body pattern</span> , in which you separate an implementation from its abstraction and build separate inheritance structures for them. Finally, you connect them through a bridge.  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   You must note that the abstraction and the implementation can be represented either through an interface or an abstract class, but the abstraction contains a reference to its implementer. Normally, a child of an abstraction is called a    <span style=\"font-style: italic;\">refined abstraction</span> and a child of an implementation is called a    <span style=\"font-style: italic;\">concrete implementation</span> .  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   This bridge interface makes the functionality of concrete classes independent from the interface implementer classes. You can alter different kinds of classes structurally without affecting each other.  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <img src=\"12-BridgePatternImage.jpg\" type=\"image/jpeg\" data-filename=\"Image.jpg\" width=\"584\">  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "NSW8rL=;>]",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   12 - Bridge Pattern.&nbsp; &nbsp; What are the key characteristic of the bridge pattern ?  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">    Here are the key characteristics of the following implementation.  </div>  <ul>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     The ElectronicGoods abstract class plays the role of abstraction. The State interface plays the role of the implementor.    </div></li>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     The concrete implementors are OnState class and OffState class. They have implemented the moveState() and hardPressed()interface methods as per their requirements.    </div></li>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     The ElectronicGoods abstract class holds a reference of the State implementor.    </div></li>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     The abstraction methods are delegating the implementation to the implementor object. For example, notice that hardButtonPressed() is actually shorthand for state.hardPressed(), where state is the implementor object     <span style=\"font-style: italic;\">.</span>    </div></li>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     There are two refined abstractions: Television and DVD. The class is happy with the methods that it inherits from its parent. But the DVD class wants to provide an additional feature, so it implements a DVD-specific method: doublePress().      <span style=\"font-style: italic;\">The</span>      <span style=\"font-style: italic;\">doublePress() method</span>      <span style=\"font-style: italic;\">is coded in terms of superclass abstraction only</span>.    </div></li>  </ul></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "k%wU#!?AB?",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   12 - Bridge Pattern.&nbsp; &nbsp; can you show an implementation of the bridge pattern ?  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">    Here is the implementation.  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <br>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">package jdp2e.bridge.demo;</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">//Implementor</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">interface State</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;void moveState();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;void hardPressed();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">//A Concrete Implementor.</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">class OnState implements State</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;@Override</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;public void moveState()</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;System.</span>   <span style=\"font-family: &quot;Source Code Pro&quot;; font-style: italic;\">out</span>   <span style=\"font-family: &quot;Source Code Pro&quot;;\">.print(\"On State\\n\");</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;@Override</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;public void hardPressed()</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;System.</span>   <span style=\"font-family: &quot;Source Code Pro&quot;; font-style: italic;\">out</span>   <span style=\"font-family: &quot;Source Code Pro&quot;;\">.print(\"\\tThe device is already On.Do not press the button so hard.\\n\");</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">//Another Concrete Implementor.</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">class OffState implements State</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;@Override</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;public void moveState()</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;System.</span>   <span style=\"font-family: &quot;Source Code Pro&quot;; font-style: italic;\">out</span>   <span style=\"font-family: &quot;Source Code Pro&quot;;\">.print(\"Off State\\n\");</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;@Override</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;public void hardPressed()</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;System.</span>   <span style=\"font-family: &quot;Source Code Pro&quot;; font-style: italic;\">out</span>   <span style=\"font-family: &quot;Source Code Pro&quot;;\">.print(\"\\tThe device is Offline now.Do not press the off button again.\\n\");</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">//Abstraction</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">abstract class ElectronicGoods</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;//Composition - implementor</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;protected State state;</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;/*Alternative approach:</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp;We can also pass an implementor (as input argument) inside a constructor.</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; */</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;/*public ElectronicGoods(State state)</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;this.state = state;</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;}*/</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;public State getState()</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;return state;</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;public void setState(State state)</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;this.state = state;</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;/*Implementation specific:</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp;We are delegating the implementation to the Implementor object .</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; */</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;public void moveToCurrentState()</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;System.</span>   <span style=\"font-family: &quot;Source Code Pro&quot;; font-style: italic;\">out</span>   <span style=\"font-family: &quot;Source Code Pro&quot;;\">.print(\"The electronic item is functioning at : \");</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;state.moveState();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;public void hardButtonPressed()</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;state.hardPressed();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">//Refined Abstraction</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">//Television does not want to modify any superclass method.</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">class Television extends ElectronicGoods</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;/*public Television(State state)</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;super(state);</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;}*/</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">/*DVD class also ok with the super class method.</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">In addition to this, it uses one additional method*/</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">class DVD extends ElectronicGoods</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;/*public DVD(State state)</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;super(state);</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;}*/</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;/* Notice that following DVD specific method is coded with superclass methods but not with the implementor (State) method.So, this approach will allow to &nbsp;vary the abstraction and implementation independently .</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; */</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;public void doublePress() {</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;hardButtonPressed();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;hardButtonPressed();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">public class BridgePatternDemo {</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;public static void main(String[] args) {</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;System.</span>   <span style=\"font-family: &quot;Source Code Pro&quot;; font-style: italic;\">out</span>   <span style=\"font-family: &quot;Source Code Pro&quot;;\">.println(\"***Bridge Pattern Demo***\");</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;System.</span>   <span style=\"font-family: &quot;Source Code Pro&quot;; font-style: italic;\">out</span>   <span style=\"font-family: &quot;Source Code Pro&quot;;\">.println(\"\\n Dealing with a Television at present.\");</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;State presentState = new OnState();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;//ElectronicGoods eItem = new Television(presentState);</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;ElectronicGoods eItem = new Television();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;eItem.setState(presentState);</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;eItem.moveToCurrentState();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;//hard press</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;eItem.hardButtonPressed();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;//Verifying Off state of the Television now</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;presentState = new OffState();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;//eItem = new Television(presentState);</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;eItem.setState(presentState);</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;eItem.moveToCurrentState();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;System.</span>   <span style=\"font-family: &quot;Source Code Pro&quot;; font-style: italic;\">out</span>   <span style=\"font-family: &quot;Source Code Pro&quot;;\">.println(\"\\n Dealing with a DVD now.\");</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;presentState = new OnState();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;//eItem = new DVD(presentState);</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;eItem = new DVD();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;eItem.setState(presentState);</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;eItem.moveToCurrentState();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;presentState = new OffState();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;//eItem = new DVD(presentState);</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;eItem = new DVD();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;eItem.setState(presentState);</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;eItem.moveToCurrentState();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;//hard press-A DVD specific method</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;//(new DVD(presentState)).doublePress();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;((DVD)eItem).doublePress();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;/*The following line of code will cause error because a television object does not have this method.*/</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;//(new Television(presentState)).doublePress();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">}</span>  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "cvAxt+}[(D",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   12 - Bridge Pattern.&nbsp; &nbsp;&nbsp;   <span style=\"font-weight: bold;\">You could use simple subclassing instead of this kind of design. Is this correct?</span>  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-weight: bold;\">&nbsp;</span>No. With simple subclassing, your implementations cannot vary dynamically. It may appear that the implementations behave differently with subclassing techniques, but actually, those kinds of variations are already bound to the abstraction at compile time.  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "i6uA%sexLX",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   12 - Bridge Pattern.&nbsp; &nbsp;&nbsp;   <span style=\"font-weight: bold;\">What are key</span>    <span style=\"font-weight: bold;\">advantages</span>    <span style=\"font-weight: bold;\">of using a bridge design pattern?</span>  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     </div>  <ul>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     The implementations are not bound to the abstractions.    </div></li>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     Both the abstractions and the implementations can grow independently.    </div></li>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     Concrete classes are independent from the interface implementer classes (i.e., changes in one of these does not affect the other). You can also vary the interface and the concrete implementations in different ways.    </div></li>  </ul></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "IjJSMhW-yq",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   12 - Bridge Pattern.&nbsp; &nbsp;&nbsp;   <span style=\"font-weight: bold;\">What are the</span>    <span style=\"font-weight: bold;\">challenges</span>    <span style=\"font-weight: bold;\">associated with this pattern?</span>  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   &nbsp;  </div>  <ul>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     The overall structure may become complex.    </div></li>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     Sometimes it is confused with the adapter pattern. (The key purpose of an adapter pattern is to deal with incompatible interfaces only.)    </div></li>  </ul></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "JdTeqwi93U",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   12 - Bridge Pattern.&nbsp; &nbsp;&nbsp;   <span style=\"font-weight: bold;\">Suppose I have only one state; for example, either OnState or OffState. In this case, do I need to use the State interface?</span>  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">    No, it is not mandatory. GoF classified this case as a degenerate case of the bridge pattern.  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "l<vz0hMJik",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   12 - Bridge Pattern.&nbsp; &nbsp;&nbsp;   <span style=\"font-weight: bold;\">In this example, an abstract class is used to represent an abstraction and an interface is used for an implementation. Is it mandatory?</span>  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <b>&nbsp;</b>No. You can also use an interface for abstraction. Basically, you can use either of an abstract class or an interface for any of the abstractions or implementations. I simply used this format for better readability.  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "zWmW0dxG14",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"width: 846px; padding: 8px; border: 1px solid;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-weight: bold;\">10 - Flyweight Pattern.&nbsp; &nbsp;what is the gof definition of the flyweight pattern ? What you need to consider when using the flyweight pattern ?</span>  </div></td></tr>",
                        "<tr> <td style=\"width: 846px; padding: 8px; border: 1px solid;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">    Use sharing to support large numbers of fine-grained objects efficiently.  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   In their famous book    <span style=\"font-style: italic;\">Design Patterns: Elements of Reusable Object-Oriented Software</span> (Addison-Wesley, 1995), the Gang of Four (GoF) wrote about flyweights as follows:  </div>  <blockquote>   <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">    <span style=\"font-style: italic;\">A flyweight is a shared object that can be used in multiple contexts simultaneously. The flyweight acts as an independent object in each context—it’s indistinguishable from an instance of the object that’s not shared. Flyweights cannot make assumptions about the context in which they operate.</span>   </div>  </blockquote>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   When you consider flyweight pattern, you need to remember following points:  </div>  <ul>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     The pattern is useful when you need a large number of similar objects that are unique in terms of only a few parameters and most of the stuffs are common in general.    </div></li>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     A flyweight is an object. It tries to minimize memory usage by sharing data as much as possible with other similar objects. Sharing objects may allow their usage at fine granularities with minimum costs.    </div></li>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     Two common terms are used in this context: extrinsic and intrinsic. An      <span style=\"font-style: italic;\">intrinsic</span> state is stored/shared in the flyweight object, and it is independent of flyweight’s context. On the other hand, an extrinsic state varies with flyweight’s context, which is why they cannot be shared. Client objects maintain the extrinsic state, and they need to pass this to a flyweight. Note that, if required, clients can also compute the extrinsic state on the fly when using flyweights.    </div></li>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     Experts suggest that while implementing this pattern, we should make intrinsic states immutable.    </div></li>  </ul></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "M6Wc,j[F(s",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-weight: bold;\">10 - Flyweight Pattern.&nbsp; &nbsp;can you show an UML diagram of the flyweight pattern ?</span>  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">    In the following example, I used three different types of objects: small, large, and fixed-size robots. These robots have two states: “robotTypeCreated” and “color”. The first one can be shared among “similar” objects, so it is an    <span style=\"font-style: italic;\">intrinsic</span> state. The second one (color) is supplied by the client and it varies with the context. So, it is an    <span style=\"font-style: italic;\">extrinsic</span> state in this example.  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   For the fixed-size robots, it does not matter which color is supplied by the client. For these robots, I am ignoring the extrinsic state, so you can conclude that these fixed-size robots are representing    <span style=\"font-style: italic;\">unshared flyweights</span> .  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   In this implementation, the robotFactory class caches these flyweights and provides a method to get them.  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   Lastly, these objects are similar. So, once a particular robot is created, you do not want to repeat the process from scratch. Instead, the next time onward, you will try to use these flyweights to serve your needs. Now go through the code with the comments for your ready reference.  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <br>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   Figure    <a href=\"https://learning.oreilly.com/library/view/java-design-patterns/9781484240786/html/395506_2_En_10_Chapter.xhtml#Fig1\">10-1</a> shows the class diagram.  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <img src=\"10-FlyweightPatternImage.jpg\" type=\"image/jpeg\" data-filename=\"Image.jpg\" style=\"box-sizing: border-box; -webkit-tap-highlight-color: transparent; -webkit-font-smoothing: antialiased; border: 0px; height: 30.62em; max-width: 100%; vertical-align: middle; margin: 0px; padding: 2px;\" width=\"596\">  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "i<|Qr{JpH~",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   10 - Flyweight Pattern. can you show an implementation of the flyweight pattern ?  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   &nbsp;  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   Here’s the implementation.  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <br>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">package jdp2e.flyweight.demo;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">import java.util.Map;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">import java.util.HashMap;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">import java.util.Random;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">interface Robot</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;//Color comes from client.It is extrinsic.</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;void showMe(String color);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">//A shared flyweight implementation</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">class SmallRobot implements Robot</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;/*</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; * Intrinsic state.</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; * It is not supplied by client.</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; * So, it is independent of the flyweight’s context.</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; * This can be shared across.</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; * These data are often immutable.</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; */</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;private final String robotTypeCreated;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public SmallRobot()</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; robotTypeCreated=\"A small robot created\";</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.<span style=\"font-style: italic;\">out</span>.print(robotTypeCreated);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;@Override</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public void showMe(String color)</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.print(\" with \" +color + \" color\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">//A shared flyweight implementation</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">class LargeRobot implements Robot</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;/*</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; * Intrinsic state.</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; * It is not supplied by client .</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; * So, it is independent of the flyweight’s context.</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; * This can be shared across.</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; * These data are often immutable.</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; */</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;private final String robotTypeCreated;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public LargeRobot()</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;robotTypeCreated=\"A large robot created\";</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.print(robotTypeCreated);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;@Override</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public void showMe(String color)</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.print(\" with \" + color + \" color\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">//An unshared flyweight implementation</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">class FixedSizeRobot implements Robot</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;/*</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; * Intrinsic state.</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; * It is not supplied by client.</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; * So, it is independent of the flyweight’s context.</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; * This can be shared acorss.</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; */</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;private final String robotTypeCreated;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public FixedSizeRobot()</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;robotTypeCreated=\"A robot with a fixed size created\";</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.print(robotTypeCreated);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;@Override</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;//Ingoring the extrinsic state argument</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;//Since it is an unshared flyweight</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public void showMe(String color)</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.print(\" with \" + \" blue (default) color\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">class RobotFactory</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;static Map&lt;String, Robot&gt; <span style=\"font-style: italic;\">robotFactory</span> = new HashMap&lt;String, Robot&gt;();</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public int totalObjectsCreated()</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;return <span style=\"font-style: italic;\">robotFactory</span>.size();</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public static synchronized Robot getRobotFromFactory(String robotType) throws Exception</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;Robot robotCategory = <span style=\"font-style: italic;\">robotFactory</span>.get(robotType);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;if(robotCategory==null)</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;switch (robotType)</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;case \"small\":</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\"We do not have Small Robot at present.So we are creating a small robot now.\") ;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;robotCategory = new SmallRobot();</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;break;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;case \"large\":</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\"We do not have Large Robot at present.So we are creating a large robot now.\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;robotCategory = new LargeRobot();</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;break;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;case \"fixed\":</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\"We do not have fixed size at present. So we are creating a fixed size robot now.\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;robotCategory = new FixedSizeRobot();</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;break;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;default:</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;throw new Exception(\" Robot Factory can create only small ,large or fixed size robots\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span style=\"font-style: italic;\">robotFactory</span>.put(robotType,robotCategory);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;else</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.print(\"\\n \\t Using existing \"+ robotType +\" robot and coloring it\" );</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;return robotCategory;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">public class FlyweightPatternExample {</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public static void main(String[] args) throws Exception {</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;RobotFactory robotFactory = new RobotFactory();</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\"\\n***Flyweight Pattern Example ***\\n\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;Robot myRobot;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;//Here we are trying to get 3 Small type robots</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;for (int i = 0; i &lt; 3; i++)</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;myRobot = RobotFactory.<span style=\"font-style: italic;\">getRobotFromFactory</span>(\"small\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;/*</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Not required to add sleep().But it is included to</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;increase the probability of getting a new random number</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;to see the variations in the output .</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; */</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Thread.<span style=\"font-style: italic;\">sleep</span>(1000);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;//The extrinsic property color is supplied by the client code.</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;myRobot.showMe(<span style=\"font-style: italic;\">getRandomColor</span>());</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;int numOfDistinctRobots = robotFactory.totalObjectsCreated();</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\"\\n Till now, total no of distinct robot objects created: \" + numOfDistinctRobots);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;//Here we are trying to get 5 Large type robots</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;for (int i = 0; i &lt; 5; i++)</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;myRobot = RobotFactory.<span style=\"font-style: italic;\">getRobotFromFactory</span>(\"large\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;/*</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Not required to add sleep().But it is included to</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;increase the probability of getting a new random number</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;to see the variations in the output.</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; */</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Thread.<span style=\"font-style: italic;\">sleep</span>(1000);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;//The extrinsic property color is supplied by the client code.</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;myRobot.showMe(<span style=\"font-style: italic;\">getRandomColor</span>());</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;numOfDistinctRobots = robotFactory.totalObjectsCreated();</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\"\\n Till now, total no of distinct robot objects created: \" + numOfDistinctRobots);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;//Here we are trying to get 4 fixed sizerobots</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;for (int i = 0; i &lt; 4; i++)</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;myRobot = RobotFactory.<span style=\"font-style: italic;\">getRobotFromFactory</span>(\"fixed\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;/*</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Not required to add sleep().But it is included to</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;increase the probability of getting a new random number</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;to see the variations in the output.</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; */</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Thread.<span style=\"font-style: italic;\">sleep</span>(1000);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;//The extrinsic property color is supplied by the client code.</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;myRobot.showMe(<span style=\"font-style: italic;\">getRandomColor</span>());</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;numOfDistinctRobots = robotFactory.totalObjectsCreated();</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\"\\n Till now, total no of distinct robot objects created: \" + numOfDistinctRobots);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;static String getRandomColor()</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;Random r = new Random();</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;/* I am simply checking the random number generated that can be either an even number or an odd number. And based on that we are choosing the color. For simplicity, I am using only two colors-red and green</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp; */</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;int random = r.nextInt();</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;if (random % 2 == 0)</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;return \"red\";</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;else</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;return \"green\";</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">}</font>  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "dZ@9=ALlM,",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-weight: bold;\">10 - Flyweight Pattern.&nbsp; &nbsp;</span>   <span style=\"font-weight: bold;\">I notice some similarities between a singleton pattern and a flyweight pattern. Can you highlight the key differences between them?</span>  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">    The singleton pattern helps you maintain only one required object in the system. In other words, once the required object is created, you cannot create more. You need to reuse the existing object.  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   The flyweight pattern is generally concerned about a large number of similar (which can be heavy) objects, because they may occupy big blocks of memory. So, you try to create a smaller set of template objects that can be configured on the fly to complete the creation of the heavy objects. These smaller and configurable objects are called flyweights. You can reuse them in your application to appear that you have many large objects. This approach helps you reduce the consumption of big chunks of memory. Basically, flyweights make one look like many. This is why the GoF tells us:    <span style=\"font-style: italic;\">A flyweight is a shared object that can be used in multiple contexts simultaneously. The flyweight acts as an independent object in each context — it’s indistinguishable from an instance of the object that’s not shared</span>.  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "saFBd_5Bub",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-weight: bold;\">10 - Flyweight Pattern.&nbsp; &nbsp;</span>   <span style=\"font-weight: bold;\">Can you observe any impact due to multithreading?</span>  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">    If you are creating objects with new operators in a multithreaded environment, you may end up with multiple unwanted objects (similar to singleton patterns). The remedy is similar to the way you handle multithreaded environment in a singleton pattern.  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "thdafF-z~/",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-weight: bold;\">10 - Flyweight Pattern.&nbsp; &nbsp;</span>   <span style=\"font-weight: bold;\">What are the</span>    <span style=\"font-weight: bold;\">advantages</span>    <span style=\"font-weight: bold;\">of using flyweight design patterns?</span>  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     </div>  <ul>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     You can reduce memory consumptions of heavy objects that can be controlled identically.    </div></li>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     You can reduce the total number of “complete but similar objects” in the system.    </div></li>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     You can provide a centralized mechanism to control the states of many “virtual” objects.    </div></li>  </ul></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "Kgb^Wp:,=X",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-weight: bold;\">10 - Flyweight Pattern.&nbsp; &nbsp;</span>   <span style=\"font-weight: bold;\">What are the</span>    <span style=\"font-weight: bold;\">challenges</span>    <span style=\"font-weight: bold;\">associated with using flyweight design patterns?</span>  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     </div>  <ul>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     In this pattern, you need to take the time to configure these flyweights. The configuration time can impact the overall performance of the application.    </div></li>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     To create flyweights, you extract a common template class from the existing objects. This additional layer of programming can be tricky and sometimes hard to debug and maintain.    </div></li>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     You can see that logical instances of a class cannot behave differently from other instances.    </div></li>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     The flyweight pattern is often combined with singleton factory implementation and to guard the singularity, additional cost is required (e.g., you may opt for a synchronized method or double-checked locking, but each of them are costly operations).    </div></li>  </ul></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "cA(o+|t(K+",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-weight: bold;\">10 - Flyweight Pattern.&nbsp; &nbsp;</span>   <span style=\"font-weight: bold;\">Can I have non-shareable flyweight interface?</span>  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <b>&nbsp;</b>Yes. A flyweight interface does not enforce that it needs to always be shareable. In some cases, you may have non-shareable flyweights with concrete flyweight objects as children. In our example, you saw the use of non-shareable flyweights using fixed-size robots.  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "xx,?I/--sx",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-weight: bold;\">10 - Flyweight Pattern.&nbsp; &nbsp;</span>   <span style=\"font-weight: bold;\">Since intrinsic data of flyweights are the same, I can share them. Is this correct?</span>  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <b>&nbsp;</b>Yes.  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "LD?uoggj:1",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-weight: bold;\">10 - Flyweight Pattern.&nbsp; &nbsp;</span>    <span style=\"color: rgb(0, 0, 0); font-family: &quot;Segoe UI&quot;; font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: bold; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">How do clients handle the extrinsic data of these flyweights?</span>  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <b>&nbsp;</b>They need to pass the information (states) to the flyweights. Clients either manage the data or compute them on the fly.  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "Gwh_9LB:0E",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-weight: bold;\">10 - Flyweight Pattern.&nbsp; &nbsp;</span>   <span style=\"font-weight: bold;\">Extrinsic data is not shareable. Is this correct?</span>  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <b>&nbsp;</b>Yes.  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "Pxk(t)5bnj",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-weight: bold;\">10 - Flyweight Pattern.&nbsp; &nbsp;</span>   <span style=\"font-weight: bold;\">You said that I should try to make intrinsic states immutable. How can I achieve that?</span>  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <b>&nbsp;</b>Yes, for thread safety and security, experts suggest that you implement that. In this case, it is already implemented. In Java, you must remember that String objects are inherently immutable.  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   Also, you may notice that in the concrete flyweights (SmallRobot, LargeRobot, FixedSizeRobot), there are no setter methods to set/modify the value of robotTypeCreated. When you supply the data only through a constructor and there are no setter methods, you are following an approach that promotes immutability.  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "y!sxo/}!D}",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   10 - Flyweight Pattern.&nbsp;   <span style=\"font-weight: bold;\">You have tagged the final keyword with the intrinsic state robotTypeCreated to achieve immutability. Is this correct?</span>  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <b>&nbsp;</b>You need to remember that    <span style=\"font-style: italic;\">final</span> and    <span style=\"font-style: italic;\">immutability</span> are not synonymous. In the context of design patterns, the word    <span style=\"font-style: italic;\">immutability</span> generally means that once created, you cannot change the state of the object. Although the keyword final can be applied to a class, a method, or a field, the aim is different.  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   The final field can help you construct a thread-safe immutable object without synchronization, and it provides safety in a multithreaded environment. So, I used it in this example.  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "w>yE^Eu[)K",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-weight: bold;\">10 - Flyweight Pattern.&nbsp; &nbsp;</span>   <span style=\"font-weight: bold;\">The</span>    <span style=\"font-weight: bold;\">getRobotFromFactory() method</span>    <span style=\"font-weight: bold;\">is synchronized here to provide thread safety. Is this understanding correct?</span>  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">    Exactly. In a single-threaded environment, it is not required.  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "P|EnqRTsCt",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-weight: bold;\">10 - Flyweight Pattern.&nbsp; &nbsp;</span>   <span style=\"font-weight: bold;\">The getRobotFromFactory() method is static here. Is that mandatory?</span>  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">    No. You can implement a non-static factory method also. You may often notice the presence of a singleton factory with flyweight pattern implementations.  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "eozFQ-?y9p",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-weight: bold;\">10 - Flyweight Pattern. What is the role</span>    <span style=\"font-weight: bold;\">of “RobotFactory” in this implementation?</span>  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">    It caches flyweights and provides a method to get them. In this example, there are many objects that can be shared. So, storing them in a central place is always a good idea.  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "z+{a@Km8=z",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   7 - Decorator Pattern.&nbsp; &nbsp;  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   Could you give the gof definition of the decorator pattern ?  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   What's the purpose of the decorator pattern ?  </div></td></tr>",
                        "<tr> <td>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">    &nbsp; &nbsp;  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   Attach additional responsibilities to an object dynamically. Decorators provide a flexible alternative to subclassing for extending functionality.  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   This pattern says that the class must be closed for modification but open for extension; that is, a new functionality can be added without disturbing existing functionalities. The concept is very useful when we want to add special functionalities to a specific object instead of the whole class. In this pattern, we try to use the concept of object composition instead of inheritance. So, when we master this technique, we can add new responsibilities to an object without affecting the underlying classes.  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "m>!{EFB7Ol",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border-color:rgb(204, 204, 204);\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   7 - Decorator Pattern.&nbsp; &nbsp;  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   can you give an example of the decorator pattern ?  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   Can you give the uml diagram of the decorator pattern ?  </div></td></tr>",
                        "<tr> <td style=\"border-color:rgb(204, 204, 204);\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">    &nbsp; &nbsp;Suppose that in a GUI-based toolkit, we want to add some border properties. We can do this with inheritance. But it cannot be treated as an ultimate solution because the user cannot have absolute control over this creation from the beginning. So, the core choice is static in this case.  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   Decorators comes into picture with a flexible approach. They promote the concept of dynamic choices, for example, we can surround the component in another object. The enclosing object is called a    <i>decorator</i>. It must conform to the interface of the component that it decorates. It forwards the requests to the component. It can perform additional operations before or after the forwardings. An unlimited number of responsibilities can be added with this concept.  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <br>  </div><img src=\"7-DecoratorPatternImage.jpg\" type=\"image/jpeg\" data-filename=\"Image.jpg\" style=\"--en-viewerProps:{};\" width=\"509px\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <br>  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "rQsz0_SgUB",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border-color:rgb(204, 204, 204);\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   7 - Decorator Pattern.&nbsp; &nbsp; Can you give an example of implementation of the decorator pattern ?  </div></td></tr>",
                        "<tr> <td style=\"border-color:rgb(204, 204, 204);\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">    &nbsp; &nbsp;Here’s the implementation.  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <br>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: Source Code Pro;\">package jdp2e.decorator.demo;</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: Source Code Pro;\">abstract class Component</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: Source Code Pro;\">{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: Source Code Pro;\">&nbsp; &nbsp;public abstract void makeHouse();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: Source Code Pro;\">}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <br>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: Source Code Pro;\">class ConcreteComponent extends Component</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: Source Code Pro;\">{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: Source Code Pro;\">&nbsp; &nbsp;public void makeHouse()</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: Source Code Pro;\">&nbsp; &nbsp;{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: Source Code Pro;\">&nbsp; &nbsp; &nbsp; &nbsp;System.<i>out</i>.println(\"Original House is complete. It is closed for modification.\");</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: Source Code Pro;\">&nbsp; &nbsp;}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: Source Code Pro;\">}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <br>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: Source Code Pro;\">abstract class AbstractDecorator extends Component</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: Source Code Pro;\">{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: Source Code Pro;\">&nbsp; &nbsp;protected Component component ;</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: Source Code Pro;\">&nbsp; &nbsp;public void setTheComponent(Component c)</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: Source Code Pro;\">&nbsp; &nbsp;{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: Source Code Pro;\">&nbsp; &nbsp; &nbsp; &nbsp;component = c;</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: Source Code Pro;\">&nbsp; &nbsp;}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: Source Code Pro;\">&nbsp; &nbsp;public void makeHouse()</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: Source Code Pro;\">&nbsp; &nbsp;{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: Source Code Pro;\">&nbsp; &nbsp; &nbsp; &nbsp;if (component != null)</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: Source Code Pro;\">&nbsp; &nbsp; &nbsp; &nbsp;{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: Source Code Pro;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;component.makeHouse();//Delegating the task</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: Source Code Pro;\">&nbsp; &nbsp; &nbsp; &nbsp;}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: Source Code Pro;\">&nbsp; &nbsp;}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: Source Code Pro;\">}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <br>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: Source Code Pro;\">//A floor decorator</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: Source Code Pro;\">class FloorDecorator extends AbstractDecorator</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: Source Code Pro;\">{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: Source Code Pro;\">&nbsp; &nbsp;public &nbsp;void makeHouse()</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: Source Code Pro;\">&nbsp; &nbsp;{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: Source Code Pro;\">&nbsp; &nbsp; &nbsp; &nbsp;super.makeHouse();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: Source Code Pro;\">&nbsp; &nbsp; &nbsp; &nbsp;//Decorating now.</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: Source Code Pro;\">&nbsp; &nbsp; &nbsp; &nbsp;System.<i>out</i>.println(\"***Floor decorator is in action***\");</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: Source Code Pro;\">&nbsp; &nbsp; &nbsp; &nbsp;addFloor();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: Source Code Pro;\">&nbsp; &nbsp; &nbsp; &nbsp;/*You can put additional stuffs as per your need*/</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: Source Code Pro;\">&nbsp; &nbsp;}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: Source Code Pro;\">&nbsp; &nbsp;private void addFloor()</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: Source Code Pro;\">&nbsp; &nbsp;{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: Source Code Pro;\">&nbsp; &nbsp; &nbsp; &nbsp;System.<i>out</i>.println(\"I am making an additional floor on top of it.\");</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: Source Code Pro;\">&nbsp; &nbsp;}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: Source Code Pro;\">}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: Source Code Pro;\">//A paint decorator</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: Source Code Pro;\">class PaintDecorator extends AbstractDecorator</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: Source Code Pro;\">{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: Source Code Pro;\">&nbsp; &nbsp;public void makeHouse()</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: Source Code Pro;\">&nbsp; &nbsp;{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: Source Code Pro;\">&nbsp; &nbsp; &nbsp; &nbsp;super.makeHouse();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: Source Code Pro;\">&nbsp; &nbsp; &nbsp; &nbsp;//Decorating now.</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: Source Code Pro;\">&nbsp; &nbsp; &nbsp; &nbsp;System.<i>out</i>.println(\"***Paint decorator is in action now***\");</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: Source Code Pro;\">&nbsp; &nbsp; &nbsp; &nbsp;paintTheHouse();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: Source Code Pro;\">&nbsp; &nbsp; &nbsp; &nbsp;//You can add additional stuffs as per your need</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: Source Code Pro;\">&nbsp; &nbsp;}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: Source Code Pro;\">&nbsp; &nbsp;private void paintTheHouse()</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: Source Code Pro;\">&nbsp; &nbsp;{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: Source Code Pro;\">&nbsp; &nbsp; &nbsp; &nbsp;System.<i>out</i>.println(\"Now I am painting the house.\");</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: Source Code Pro;\">&nbsp; &nbsp;}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: Source Code Pro;\">}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: Source Code Pro;\">public class DecoratorPatternExample {</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: Source Code Pro;\">&nbsp; &nbsp;public static void main(String[] args) {</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: Source Code Pro;\">&nbsp; &nbsp; &nbsp; &nbsp;System.<i>out</i>.println(\"***Decorator pattern Demo***\\n\");</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: Source Code Pro;\">&nbsp; &nbsp; &nbsp; &nbsp;ConcreteComponent withoutDecorator = new ConcreteComponent();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: Source Code Pro;\">&nbsp; &nbsp; &nbsp; &nbsp;withoutDecorator.makeHouse();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: Source Code Pro;\">&nbsp; &nbsp; &nbsp; &nbsp;System.<i>out</i>.println(\"_________________\");</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: Source Code Pro;\">&nbsp; &nbsp; &nbsp; &nbsp;//Using a decorator to add floor</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: Source Code Pro;\">&nbsp; &nbsp; &nbsp; &nbsp;System.<i>out</i>.println(\"Using a Floor decorator now.\");</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: Source Code Pro;\">&nbsp; &nbsp; &nbsp; &nbsp;FloorDecorator floorDecorator = new FloorDecorator();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: Source Code Pro;\">&nbsp; &nbsp; &nbsp; &nbsp;floorDecorator.setTheComponent(withoutDecorator);</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: Source Code Pro;\">&nbsp; &nbsp; &nbsp; &nbsp;floorDecorator.makeHouse();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: Source Code Pro;\">&nbsp; &nbsp; &nbsp; &nbsp;System.<i>out</i>.println(\"_________________\");</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: Source Code Pro;\">&nbsp; &nbsp; &nbsp; &nbsp;//Using a decorator to add floor to original house and then</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: Source Code Pro;\">&nbsp; &nbsp; &nbsp; &nbsp;//paint it.</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: Source Code Pro;\">&nbsp; &nbsp; &nbsp; &nbsp;System.<i>out</i>.println(\"Using a Paint decorator now.\");</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: Source Code Pro;\">&nbsp; &nbsp; &nbsp; &nbsp;PaintDecorator paintDecorator = new PaintDecorator();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: Source Code Pro;\">&nbsp; &nbsp; &nbsp; &nbsp;//Adding results from floor decorator</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: Source Code Pro;\">&nbsp; &nbsp; &nbsp; &nbsp;paintDecorator.setTheComponent(floorDecorator);</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: Source Code Pro;\">&nbsp; &nbsp; &nbsp; &nbsp;paintDecorator.makeHouse();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: Source Code Pro;\">&nbsp; &nbsp; &nbsp; &nbsp;System.<i>out</i>.println(\"_________________\");</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: Source Code Pro;\">&nbsp; &nbsp;}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: Source Code Pro;\">}</span>  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "A|_6~V_=i$",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border-color:rgb(204, 204, 204);\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   7 - Decorator Pattern.&nbsp; &nbsp;Can you explain how composition is promoting a dynamic behavior that inheritance cannot?  </div></td></tr>",
                        "<tr> <td style=\"border-color:rgb(204, 204, 204);\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">    &nbsp; &nbsp;We know that when a derived class inherits from a parent class, it inherits the behavior of the base class at that time only. Though different subclasses can extend the base/parent class in different ways, this type of binding is known in compile-time, so the choice is static in nature. But the way that you used the concept of composition in the example lets you experiment with dynamic behavior.  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   When we design a parent class, we may not have enough visibility about    <i>what kind of additional responsibilities our clients may want in</i>    <i>later phases</i>. And our constraint is that we should not modify the existing code frequently. In such a case, object composition not only outclasses inheritances, it also ensures that we are not introducing bugs to the existing architecture. Lastly, in this context, you must remember one of the key design principles:    <i>Classes should be open for extension but closed for modification.</i>  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "i)MFwP:Oz_",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border-color:rgb(204, 204, 204);\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   7 - Decorator Pattern.&nbsp; &nbsp;What are the key advantages of using a decorator?  </div></td></tr>",
                        "<tr> <td style=\"border-color:rgb(204, 204, 204);\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     </div>  <ul>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     The existing structure is untouched, so that you are not introducing bugs there.    </div></li>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     New functionalities can be easily added to an existing object.    </div></li>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     You do not need to predict/implement all the supported functionalities at the initial design phase. You can develop incrementally (e.g., add decorator objects one by one to support incremental needs). You must acknowledge the fact that if you make a complex class first, and then you try to extend the functionalities, it will be a tedious process.    </div></li>  </ul></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "Ia`,p|SnI+",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border-color:rgb(204, 204, 204);\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   7 - Decorator Pattern.&nbsp; &nbsp;How is the overall design pattern different from inheritance?  </div></td></tr>",
                        "<tr> <td style=\"border-color:rgb(204, 204, 204);\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">    &nbsp; &nbsp;You can add or remove responsibilities by simply attaching or detaching decorators. But with a simple inheritance mechanism, you need to create a new class for the new responsibilities. So, it is possible that you may end up with a complex system.  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <br>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   Consider the example again. Suppose that you want to add a new floor, paint the house, and do    <i>some extra work</i>. To fulfill this need, you start with decorator2 because it is already providing the support to add a floor to the existing architecture, and then you can paint it. So, you can add a simple wrapper to complete those additional responsibilities.  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   But if you start with inheritance from the beginning, then you may have multiple subclasses (e.g., one for adding a floor, one for painting the house). Figure below shows hierarchical inheritance.  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <br>  </div><img src=\"7-DecoratorPatternImage1.jpg\" type=\"image/jpeg\" data-filename=\"Image.jpg\" style=\"--en-viewerProps:{};\" width=\"378px\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <br>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <br>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   If you need an additional painted floor with extra features, you may end up with a design like the one shown in figure below  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <br>  </div><img src=\"7-DecoratorPatternImage2.jpg\" type=\"image/jpeg\" data-filename=\"Image.jpg\" style=\"--en-viewerProps:{};\" width=\"418px\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <br>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <br>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   Now you feel the heat of the diamond effect because in many programming languages including Java, multiple parent classes are not allowed.  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   In this context, even if you consider multilevel inheritance, you discover that overall the inheritance mechanism is much more challenging and time-consuming than the decorator pattern, and it may promote duplicate code in your application. Lastly, you must remember that inheritance mechanism is promoting only compile-time binding (not the dynamic binding).  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "At]J=80CCw",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border-color:rgb(204, 204, 204);\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   7 - Decorator Pattern.&nbsp; &nbsp;Why can’t multilevel inheritance score higher in the previous context?  </div></td></tr>",
                        "<tr> <td style=\"border-color:rgb(204, 204, 204);\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">    &nbsp; &nbsp;the decorator pattern surely outclasses the inheritance mechanism because you can simply add a decorator to the existing system that supports the client that you just want only.  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "AmT.LFN]yS",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border-color:rgb(204, 204, 204);\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   7 - Decorator Pattern.&nbsp; &nbsp;Why are you creating a class with a single responsibility? You could make a subclass that can simply add a floor and then paint. In that case, you end up with fewer subclasses. Is this understanding correct?  </div></td></tr>",
                        "<tr> <td style=\"border-color:rgb(204, 204, 204);\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">    &nbsp; &nbsp;If you are familiar with SOLID principles, you know that there is a principle called    <i>single responsibility</i> . The idea behind this principle is that each class should have a responsibility over a single part of the functionality in the software. The decorator pattern is very much effective when you use the single responsibility principle because you can simply add/remove responsibilities dynamically.  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "n>VFlz~FSP",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border-color:rgb(204, 204, 204);\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   7 - Decorator Pattern.&nbsp; &nbsp;What are the disadvantages associated with this pattern?  </div></td></tr>",
                        "<tr> <td style=\"border-color:rgb(204, 204, 204);\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">    &nbsp; &nbsp;I believe that if you are careful enough, there is no significant disadvantage. But you must be aware of the fact that if you create too many decorators in the system, it will be hard to maintain and debug. So, in that case, it can create unnecessary confusion.  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "~Yi4G|Vbi",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border-color:rgb(204, 204, 204);\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   7 - Decorator Pattern.&nbsp; &nbsp;Is it mandatory to use decorators for dynamic binding only?  </div></td></tr>",
                        "<tr> <td style=\"border-color:rgb(204, 204, 204);\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">    &nbsp; &nbsp;No. You can use both static and dynamic binding. But dynamic binding is its strength, so I concentrated on it. You may notice that the GoF definition also focused on dynamic binding only.  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "Hhy`E|5,WD",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border-color:rgb(204, 204, 204);\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   7 - Decorator Pattern.&nbsp; &nbsp;You are using decorators to wrap your core architecture. Is this correct?  </div></td></tr>",
                        "<tr> <td style=\"border-color:rgb(204, 204, 204);\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">    Yes. The decorators are wrapper code to extend the core functionalities of the application. But the core architecture is untouched when you use them.  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "f5Puzw$O$[",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"width: 1134px; padding: 8px; border: 1px solid;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-weight: normal;\">2 - Prototype Pattern.&nbsp; &nbsp; What is the GoF Definition of a prototype ? When do we need&nbsp; prototype ? Can you define the uml diagram of a prototype ?</span>  </div></td></tr>",
                        "<tr> <td style=\"width: 1134px; padding: 8px; border: 1px solid;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-weight: normal;\"> Specify the kinds of objects to create using a prototypical instance, and create new objects by copying this prototype.</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-weight: normal;\">In general, creating a new instance from scratch is a costly operation. Using the prototype pattern, you can create new instances by copying or cloning an instance of an existing one.</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-weight: bold;\"><img src=\"2-PrototypePatternImage.jpg\" type=\"image/jpeg\" data-filename=\"Image.jpg\" width=\"255\"></span>  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "lC!NHhdCI+",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"width: 1134px; padding: 8px; border: 1px solid;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-weight: bold;\">2 - Prototype Pattern.</span>&nbsp; &nbsp; can you give an implementation of the prototype pattern ?  </div></td></tr>",
                        "<tr> <td style=\"width: 1134px; padding: 8px; border: 1px solid;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-weight: bold;\"></span> &nbsp; &nbsp; here's the implementation:  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">//BasicCar.java</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">package jdp2e.prototype.demo;</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">import java.util.Random;</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">public abstract class BasicCar implements Cloneable</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;public String modelName;</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;public int basePrice,onRoadPrice;</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;public String getModelname() {</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;return modelName;</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;public void setModelname(String modelname) {</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;this.modelName = modelname;</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;public static int setAdditionalPrice()</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;int price = 0;</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;Random r = new Random();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;//We will get an integer value in the range 0 to 100000</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;int p = r.nextInt(100000);</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;price = p;</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;return price;</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;public BasicCar clone() throws CloneNotSupportedException</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;return &nbsp;(BasicCar)super.clone();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">//Nano.java</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">package jdp2e.prototype.demo;</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">class Nano extends BasicCar</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;//A base price for Nano</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;public int basePrice=100000;</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;public Nano(String m)</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;modelName = m;</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;@Override</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;public BasicCar clone() throws CloneNotSupportedException</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; return (Nano)super.clone();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; //return this.clone();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">//Ford.java</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">package jdp2e.prototype.demo;</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">class Ford extends BasicCar</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;//A base price for Ford</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;public int basePrice=100000;</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;public Ford(String m)</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;modelName = m;</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;@Override</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;public BasicCar clone() throws CloneNotSupportedException</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;return (Ford)super.clone();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <br>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">//Client</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">// PrototypePatternExample.java</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">package jdp2e.prototype.demo;</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">public class PrototypePatternExample</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;public static void main(String[] args) throws CloneNotSupportedException</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;System.</span>   <span style=\"font-family: &quot;Source Code Pro&quot;; font-style: italic;\">out</span>   <span style=\"font-family: &quot;Source Code Pro&quot;;\">.println(\"***Prototype Pattern Demo***\\n\");</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;BasicCar nano = new Nano(\"Green Nano\") ;</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;nano.basePrice=100000;</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;BasicCar ford = new Ford(\"Ford Yellow\");</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;ford.basePrice=500000;</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;BasicCar bc1;</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;//Nano</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;bc1 =nano.clone();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;//Price will be more than 100000 for sure</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;bc1.onRoadPrice = nano.basePrice+BasicCar.</span>   <span style=\"font-family: &quot;Source Code Pro&quot;; font-style: italic;\">setAdditionalPrice</span>   <span style=\"font-family: &quot;Source Code Pro&quot;;\">();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;System.</span>   <span style=\"font-family: &quot;Source Code Pro&quot;; font-style: italic;\">out</span>   <span style=\"font-family: &quot;Source Code Pro&quot;;\">.println(\"Car is: \"+ bc1.modelName+\" and it's price is Rs.\"+bc1.onRoadPrice);</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;//Ford</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;bc1 =ford.clone();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;//Price will be more than 500000 for sure</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;bc1.onRoadPrice = ford.basePrice+BasicCar.</span>   <span style=\"font-family: &quot;Source Code Pro&quot;; font-style: italic;\">setAdditionalPrice</span>   <span style=\"font-family: &quot;Source Code Pro&quot;;\">();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;System.</span>   <span style=\"font-family: &quot;Source Code Pro&quot;; font-style: italic;\">out</span>   <span style=\"font-family: &quot;Source Code Pro&quot;;\">.println(\"Car is: \"+ bc1.modelName+\" and it's price is Rs.\"+bc1.onRoadPrice);</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">}</span>  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "qfP8,!B9^4",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"width: 1134px; padding: 8px; border: 1px solid;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-weight: bold;\">2 - Prototype Pattern. &nbsp; &nbsp;What are the</span>    <span style=\"font-weight: bold;\">advantages</span>    <span style=\"font-weight: bold;\">of using prototype design patterns?</span>  </div></td></tr>",
                        "<tr> <td style=\"width: 1134px; padding: 8px; border: 1px solid;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-weight: bold;\"></span>  </div>  <ul>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     It is useful when creating an instance of a class is a complicated (or boring) process. Instead, you can focus on other key activities.    </div></li>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     You can include or discard products at runtime.    </div></li>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     You can create new instances at a cheaper cost.    </div></li>  </ul></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "yCH]nAZJ|",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 1134px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-weight: bold;\">2 - Prototype Pattern.</span> &nbsp; &nbsp;   <span style=\"font-weight: bold;\">What are the</span>    <span style=\"font-weight: bold;\">challenges</span>    <span style=\"font-weight: bold;\">associated with using prototype design patterns?</span>  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 1134px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-weight: bold;\"> &nbsp; &nbsp;</span>  </div>  <ul>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     Each subclass needs to implement the cloning or copying mechanism.    </div></li>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     Sometimes creating a copy from an existing instance is not simple. For example, implementing a cloning mechanism can be challenging if the objects under consideration do not support copying/cloning or if there are circular references. For example, in Java, a class with the clone() method needs to implement the Cloneable marker interface; otherwise, it will throw a CloneNotSupportedException.    </div></li>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     In this example, I have used the clone() method that performs a shallow copy in Java. Following the convention, I obtained the returned object by calling super.clone().(If you want to learn more about this, put your cursor on the eclipse editor and go through the instructions). If you need a deep copy for your application, that can be expensive.    </div></li>  </ul></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "eQo}RPOlcy",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"width: 1134px; padding: 8px; border: 1px solid;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-weight: bold;\">2 - Prototype Pattern. &nbsp; &nbsp;Can you please elaborate the difference between a shallow copy and a deep copy?</span>  </div></td></tr>",
                        "<tr> <td style=\"width: 1134px; padding: 8px; border: 1px solid;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">    &nbsp;&nbsp; &nbsp;A    <span style=\"font-style: italic;\">shallow copy</span> creates a new object and then copies various field values from the original object to the new object. So, it is also known as a    <span style=\"font-style: italic;\">field-by-field copy</span> . If the original object contains any references to other objects as fields, then the references of those objects are copied into the new object, (i.e., you do not create the copies of those objects).  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   Let’s try to understand the mechanism with a simple diagram. Suppose we have an object, X1, and it has a reference to another object, Y1. Further assume that object Y1 has a reference to object Z1.  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <img src=\"2-PrototypePatternImage1.jpg\" type=\"image/jpeg\" data-filename=\"Image.jpg\" style=\"box-sizing: border-box; -webkit-tap-highlight-color: transparent; -webkit-font-smoothing: antialiased; border: 0px; height: 10.55em; max-width: 100%; vertical-align: middle; margin: 0px; padding: 2px;\" width=\"482\">  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-style: italic; font-weight: bold;\">Figure 2-4</span>Before shallow copy of the reference/s  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   Now, with the shallow copy of X1, a new object, X2, is created; it also has a reference to Y1.  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <img src=\"2-PrototypePatternImage2.jpg\" type=\"image/jpeg\" data-filename=\"Image.jpg\" style=\"box-sizing: border-box; -webkit-tap-highlight-color: transparent; -webkit-font-smoothing: antialiased; border: 0px; height: 19.1em; max-width: 100%; vertical-align: middle; margin: 0px; padding: 2px;\" width=\"485\">  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-style: italic; font-weight: bold;\">Figure 2-5</span>After the shallow copy of the reference  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <br>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   You have already seen the use of the clone() method in our implementation. It performs a shallow copy.  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   For a    <span style=\"font-style: italic;\">deep copy</span> of X1, a new object, X3, is created. X3 has a reference to new object Y3, which is actually a copy of Y1. Also, Y3, in turn, has a reference to another new object, Z3, which is a copy of Z1.  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <img src=\"2-PrototypePatternImage3.jpg\" type=\"image/jpeg\" data-filename=\"Image.jpg\" style=\"box-sizing: border-box; -webkit-tap-highlight-color: transparent; -webkit-font-smoothing: antialiased; border: 0px; height: 8.28em; max-width: 100%; vertical-align: middle; margin: 0px; padding: 2px;\" width=\"393\">  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-style: italic; font-weight: bold;\">Figure 2-6</span>After the deep copy of the reference  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <br>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   In a deep copy, the new object is totally separated from the original one. Any changes made in one object should not be reflected on the other one. To create a deep copy in Java, you may need to override the clone() method and then proceed. Also, a deep copy is expensive because you need to create additional objects. A complete implementation of deep copy is presented in the “Q&amp;A Session” of Memento Pattern (Chapter    <a href=\"https://learning.oreilly.com/library/view/java-design-patterns/9781484240786/html/395506_2_En_19_Chapter.xhtml\">19</a>) in this book.  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <br>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-weight: bold;\">D: &nbsp; &nbsp;When do you choose a shallow copy over a deep copy (and vice versa)?</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">    &nbsp;&nbsp; &nbsp;A shallow copy is faster and less expensive. It is always better if your target object has the primitive fields only.  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   A deep copy is expensive and slow. But it is useful if your target object contains many fields that have references to other objects.  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "cY}xn=Up~>",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   19 - Memento Pattern.&nbsp; &nbsp;Can you give the gof definition of the memento pattern ?  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">    Without violating encapsulation, capture and externalize an object’s internal state so that the object can be restored to this state later.  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "Pg1w}&XZ?F",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   19 - Memento Pattern.&nbsp; &nbsp;Can you show an example with a uml diagram of the memento pattern ?  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">    In your application, you may need to support “undo” operations. To achieve this, you need to record the internal state of an object. So, you must save this state information in a place that can be referred again to revert back the old state of the object. But in general, objects encapsulate their states, and those states are inaccessible to the outer world. So, if you expose the state information, then you violate encapsulation.  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   The dictionary meaning of    <span style=\"font-style: italic;\">memento</span> is reminder (of past events). So, you can guess that using this pattern, you can restore an object to its previous state, but it ensures that you achieve your goal without violating the encapsulation.  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <br>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   Go through the code and follow the comments for your ready reference. In this example, three objects are involved: a memento, an originator, and a caretaker. (These names are very common, so I have kept the same naming convention in our implementation.)  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   The    <span style=\"font-style: italic;\">originator</span> object has an internal state. A client can set a state in it. A    <span style=\"font-style: italic;\">memento</span> object may store as much or as little of the originator’s state, at the originator’s discretion. When a    <span style=\"font-style: italic;\">caretaker</span> wants to record the state of the originator, it requests the current state from it. So, it first asks the originator for a memento object.  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   In the following example, the caretaker object confirms the save operation by displaying a console message. Suppose that the client makes some changes and then wants to revert back to the previous state. Since the originator object’s state is already changed, to roll back to the previous state requires help from the caretaker object, which saved the state earlier. The caretaker object returns the memento object (with the previous state) to the originator. The memento object itself is an opaque object (one which the caretaker is not allowed to make any change to, and ideally, only the originator, who created the memento can access the memento’s internal state).  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   So, you can conclude that caretaker has a narrow view/interface to the memento because it can only pass it to other objects. In contrast, the originator sees the wide interface because it can access the data necessary to return to a previous state.  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <br>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <img src=\"19-MementoPatternImage.jpg\" type=\"image/jpeg\" data-filename=\"Image.jpg\" width=\"377\">  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "P6Ucg#j%05",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   19 - Memento Pattern.&nbsp; &nbsp;ca you show an implementation of the memento pattern ?  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">    Here is the implementation.  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\"><br></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">package jdp2e.memento.demo;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">class Memento</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;private int stateId;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public Memento(int stateId)</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;this.stateId = stateId;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public int getStateId() {</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;return stateId;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;/*This class does not have the</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;setter method.We need to use this class</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;to get the state of the object only.*/</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;/*public void setState(String state) {</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;this.state = state;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}*/</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">/*</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">The 'Originator' class</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">WikiPedia notes( for your reference):</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">Make an object (originator) itself responsible for:</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">1.Saving its internal state to a(memento) object and</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">2.Restoring to a previous state from a(memento) object.</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">3.Only the originator that created a memento is allowed to access it .</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">*/</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">class Originator</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;private int stateId;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public Originator()</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;this.stateId = 0;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\" Originator is created with state id : \"+ stateId);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public int getStateId()</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;return stateId;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public void setStateId(int stateId)</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\" Setting the state id of the originator to : \"+ stateId);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;this.stateId= stateId;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;//Saving its internal state to a(memento) object</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public Memento saveMemento(int stateId)</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\" Saving originator's current state id. \");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;//Create memento with the current state and return it.</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;return new Memento(stateId);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;//Restoring to a previous state from a(memento) object .</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public void revertMemento(Memento previousMemento)</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\" Restoring to state id...\"+ previousMemento.getStateId());</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;this.stateId = previousMemento.getStateId();</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\" Current state id of originator : \"+ stateId);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">/*</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">The 'Caretaker' class.</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">WikiPedia notes( for your reference):</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">1.A client (caretaker) can request a memento from the originator &nbsp;to save the internal state of the originator and</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">2.Pass a memento back to the originator (to restore to a previous state)</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">This enables to save and restore the internal state of an originator without violating its encapsulation.</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">*/</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">public class MementoPatternExample {</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public static void main(String[] args) {</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\"***Memento Pattern Demo***\\n\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;//Originator is initialized with a state</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;Originator originatorObject = new Originator();</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;Memento mementoObject;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;originatorObject.setStateId(1);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;// A client (caretaker) can request a memento from the originator</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;//to save the internal state of the originator</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;mementoObject=originatorObject.saveMemento(originatorObject.getStateId());</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\" Snapshot #1: Originator's current state id is saved in caretaker.\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;//A client (or caretaker) cannot set/modify the memento's state</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;//mementoObject.setState(\"arbitratyState\");//error</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;//Changing the state id of Originator</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;originatorObject.setStateId(2);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;mementoObject=originatorObject.saveMemento(originatorObject.getStateId());</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\" Snapshot #2: Originator's current state id is saved in caretaker.\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;//Changing the state id of Originator again .</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;originatorObject.setStateId(3);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;//Reverting back to previous state id.</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;originatorObject.revertMemento(mementoObject);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">}</font>  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "hj&?M9ue^g",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   19 - Memento Pattern.&nbsp; &nbsp;   <span style=\"font-weight: bold;\">I can restore the previous snapshot/restore point. But in a real-life scenario, I may have multiple restore points. How can you implement that using this design pattern?</span>  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <b>&nbsp;&nbsp;</b>You can use an ArrayList in such a case. Consider the following program.  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   The Originator class and Memento class are same as before, so I am presenting the modified Caretaker class only. I am using the following line of code in the upcoming implementation.  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   List&lt;Memento&gt; savedStateIds = new ArrayList&lt;Memento&gt;();  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   In this modified program, you can see three different variations of “undo” operations.  </div>  <ul>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     You can just go back to the previous restore point.    </div></li>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     You can go back to your specified restore point.    </div></li>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     You can revert back to all restore points.    </div></li>  </ul></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "h{>{T6y/9E",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   19 - Memento Pattern.&nbsp; &nbsp;   <span style=\"font-weight: bold;\">In many applications, I notice that the memento class is presented as an inner class of Originator. Why are you not following that approach?</span>  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <b>&nbsp;</b>The memento design pattern can be implemented in many different ways (for example, using package-private visibility or using object serialization techniques). But in each case, if you analyze the key aim, you find that once the memento instance is created by an originator, no one else besides its creator is allowed to access the internal state (this includes the caretaker/client). A caretaker’s job is to store the memento instance (restore points in our example) and supply them back when you are in need. So, there is no harm if your memento class is public. You can just block the public setter method for the memento. I believe that it is sufficient enough.  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "DUt-?*xj4%",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   19 - Memento Pattern.&nbsp; &nbsp;   <span style=\"font-weight: bold;\">But you are still using the getter method getStateId(). Does it not violate the encapsulation?</span>  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <b>&nbsp;</b>There is a lot of discussion and debate around this area—whether you should use getter/setter or not, particularly when you consider encapsulation. I believe that it depends on the amount of strictness that you want to impose. For example, if you just provide getter/setters for all fields without any reason, that is surely a bad design. The same thing applies when you use all the public fields inside the objects. But sometimes the accessor methods are required and useful. In this book, my aim is to encourage you learn design patterns with simple examples. If I need to consider each and every minute detail such as this, you may lose interest. So, in these examples, I show a simple way to promote encapsulation using the memento pattern. But, if you want to be stricter, you may prefer to implement the memento class as an inner class of the originator and modify the initial implementation  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "DlJL`bc6v",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   19 - Memento Pattern.&nbsp; &nbsp;   <span style=\"font-weight: bold;\">What are key</span>    <span style=\"font-weight: bold;\">challenges</span>    <span style=\"font-weight: bold;\">associated with a memento design pattern?</span>  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     </div>  <ul>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     A high number of mementos require more storage. At the same time, they put additional burdens on a caretaker.    </div></li>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     The preceding point increases maintenance costs in parallel.    </div></li>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     You cannot ignore the time to save these states. The additional time to save the states decreases the overall performance of the system.    </div></li>  </ul>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-weight: bold;\">Note</span> In a language like C# or Java, developers may prefer the serialization/deserialization techniques instead of directly implementing a memento design pattern. Both techniques have their own pros/cons. But you can also combine both techniques in your application.  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "ID+-!%&#_Y",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   19 - Memento Pattern.&nbsp; &nbsp;   <span style=\"font-weight: bold;\">In these implementations, if you make the originator’s state public, then our clients also could directly access the states. Is this correct?</span>  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <b>&nbsp;</b>Yes. But you should not try to break the encapsulation. Notice the GoF definition that begins “without violating    <span style=\"font-style: italic;\">encapsulation</span>…”  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "J@Fq</]QP-",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   19 - Memento Pattern.&nbsp; &nbsp;   <span style=\"font-weight: bold;\">In these implementations, the memento class does not have a public setter method. What is the reason behind this?</span>  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <b>&nbsp;</b>Go through the answer of question 2 again. And read the comment in the code that says, “Only the originator that created a memento is allowed to access it.” So, if you do not provide a public setter method for your memento class, the caretaker or client cannot modify the memento instances that are created by an originator.  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "B!<%j!+d1>",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   19 - Memento Pattern.&nbsp; &nbsp;   <span style=\"font-weight: bold;\">In these implementations, you could ignore the getter method of the memento by using package-private visibility for stateId. For example, you could code memento class like the following.</span>    <span style=\"font-weight: bold;\">Is this correct?</span>  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">    Yes. In many application, other classes (except originator) cannot even read the memento’s state. When you use package-private visibility, you do not need any accessor method. In other words, you are simply using the default modifier in this case.  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   So, this kind of visibility is slightly more open than private visibility and other classes in the same package can access a class member. So, in this case, the intended classes need to be placed inside the same package. At the same time, you need to accept that all other classes inside the same package will have the direct access to this state. So, you need to be careful enough when you place the classes in your special package.  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "K~(>T&m8hu",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   19 - Memento Pattern.&nbsp; &nbsp;   <span style=\"font-weight: bold;\">I am confused. To support undo operations, which pattern should I prefer—memento or command?</span>  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <b>&nbsp;&nbsp;</b>The GoF told us that these are related patterns. It primarily depends on how you want to handle the situation. For example, suppose that you are adding 10 to an integer. After this addition, you want to undo the operation by doing the reverse operation (i.e., 50 + 10 = 60, so to go back, you do 60 –10 = 50). In this type of operation, we do not need to store the previous state.  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   But consider a situation where you need to store the state of your objects prior to the operations. In this case, memento is your savior. So, in a paint application, you can avoid the cost of undoing a paint operation. You can store the list of objects prior to executing the commands. This stored list can be treated as a memento in this case. You can keep this list with the associated commands  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "L(s/+zE(I6",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   19 - Memento Pattern.&nbsp; &nbsp;What are the differences between shallow copy and deep copy and how it is related to the memento pattern ?  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">    You clone with the clone() method in Java, but at the same time, you need to implement the Cloneable interface (which is a marker interface) because the Java objects that implement this Cloneable interface are only eligible for cloning. The default version of clone()creates a shallow copy. To create the deep copy, you need to override the clone() method .  </div><h4><span style=\"font-style: italic; font-weight: bold;\">Key Characteristics of the Following Program</span></h4>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   In the following example, you have two classes: Employee and EmpAddress.  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   The Employee class has three fields: id, name, and EmpAddress. So, you may notice that to form an Employee object, you need to pass an EmpAddress object also. So, in the following example, you will notice the line of code:  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   Employee emp=new Employee(1,\"John\",initialAddress);  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   EmpAddress has only a field called address, which is a String datatype.  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   In the client code, you create an Employee object emp and then you create another object, empClone, through cloning. So, you will notice the line of code as follows:  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   Employee empClone=(Employee)emp.clone();  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   Then you change the field values of the emp object. But as a side effect of this change, the address of empClone object also changes, but this is not wanted.  </div><h4><span style=\"font-style: italic; font-weight: bold;\">Implementation</span></h4>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">package jdp2e.memento.questions_answers;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">class EmpAddress implements Cloneable</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;String address;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public EmpAddress(String address)</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;this.address=address;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public String getAddress()</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;return address;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public void setAddress(String address)</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;this.address = address;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;@Override</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public String toString()</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;return &nbsp;this.address ;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;@Override</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public Object clone() throws CloneNotSupportedException</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;//Shallow Copy</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;return super.clone();</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">class Employee implements Cloneable</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;int id;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;String name;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;EmpAddress empAddress;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public Employee(int id,String name,EmpAddress empAddress)</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;this.id=id;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;this.name=name;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;this.empAddress=empAddress;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public int getId()</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;return id;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public void setId(int id)</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;this.id = id;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public String getName()</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;return name;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public void setName(String name)</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;this.name = name;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public EmpAddress getAddress()</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;return this.empAddress;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public void setAddress(EmpAddress newAddress)</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;this.empAddress=newAddress;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;@Override</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public String toString()</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;return \"EmpId=\" +this.id+ \" EmpName=\"+ this.name+ \" EmpAddressName=\"+ this.empAddress;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;@Override</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public Object clone() throws CloneNotSupportedException</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;//Shallow Copy</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;return super.clone();</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">public class ShallowVsDeepCopy {</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public static void main(String[] args) throws CloneNotSupportedException &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\"***Shallow vs Deep Copy Demo***\\n\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;EmpAddress initialAddress=new EmpAddress(\"21, abc Road, USA\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;Employee emp=new Employee(1,\"John\",initialAddress);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\"emp1 object is as follows:\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(emp);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;Employee empClone=(Employee)emp.clone();</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\"empClone object is as follows:\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(empClone);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\"\\n Now changing the name, id and address of the emp object \");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;emp.setId(10);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;emp.setName(\"Sam\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;emp.empAddress.setAddress(\"221, xyz Road, Canada\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\"Now emp1 object is as follows:\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(emp);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\"And emp1Clone object is as follows:\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(empClone);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\"><br></font>  </div><h4><span style=\"font-style: italic; font-weight: bold;\">Output</span></h4>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   Here is the output.  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   ***Shallow vs Deep Copy Demo***  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   emp1 object is as follows:  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   EmpId=1 EmpName=John EmpAddressName=21, abc Road, USA  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   empClone object is as follows:  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   EmpId=1 EmpName=John EmpAddressName=21, abc Road, USA  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   Now changing the name and id of emp object  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   Now emp1 object is as follows:  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   EmpId=10 EmpName=Sam EmpAddressName=221, xyz Road, Canada  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   And emp1Clone object is as follows:  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   EmpId=1 EmpName=John    <span style=\"font-weight: bold;\">EmpAddressName=221, xyz Road, Canada</span>  </div><h4><span style=\"font-style: italic; font-weight: bold;\">Analysis</span></h4>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   Notice the last line of the output. You see an unwanted side effect. The address of the cloned object is modified due the modification to the emp object. This is because the original object and the cloned object both point to the same address, and they are not 100% disjoined. Figure    <a href=\"https://learning.oreilly.com/library/view/java-design-patterns/9781484240786/html/395506_2_En_19_Chapter.xhtml#Fig3\">19-3</a> depicts the scenario.  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <img src=\"19-MementoPatternImage1.jpg\" type=\"image/jpeg\" data-filename=\"Image.jpg\" style=\"box-sizing: border-box; -webkit-tap-highlight-color: transparent; -webkit-font-smoothing: antialiased; border: 0px; height: 19.75em; max-width: 100%; vertical-align: middle; margin: 0px; padding: 2px;\" width=\"329\">  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <br>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   So, now let’s experiment with a deep copy implementation. Let’s modify the clone method of the Employee class as follows.  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\"><br></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">@Override</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public Object clone() throws CloneNotSupportedException</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;//Shallow Copy</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;//return super.clone();</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;//For deep copy</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;<span style=\"font-weight: bold;\">Employee employee = (Employee) &nbsp;super.clone();</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;<span style=\"font-weight: bold;\">employee.empAddress = (EmpAddress) empAddress.clone();</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;<span style=\"font-weight: bold;\">return employee;</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div><h4><span style=\"font-style: italic; font-weight: bold;\">Modified Output</span></h4>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   Here is the modified output.  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   ***Shallow vs Deep Copy Demo***  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   emp1 object is as follows:  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   EmpId=1 EmpName=John EmpAddressName=21, abc Road, USA  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   empClone object is as follows:  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   EmpId=1 EmpName=John EmpAddressName=21, abc Road, USA  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   Now changing the name, id and address of the emp object  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   Now emp1 object is as follows:  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-weight: bold;\">EmpId=10 EmpName=Sam EmpAddressName=221, xyz Road, Canada</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   And emp1Clone object is as follows:  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-weight: bold;\">EmpId=1 EmpName=John EmpAddressName=21, abc Road, USA</span>  </div><h4><span style=\"font-style: italic; font-weight: bold;\">Analysis</span></h4>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   Notice the last line of the output. Now you do not see the unwanted side effect due to the modification to the emp object. This is because the original object and the cloned object are totally different and independent of each other. Figure    <a href=\"https://learning.oreilly.com/library/view/java-design-patterns/9781484240786/html/395506_2_En_19_Chapter.xhtml#Fig4\">19-4</a> depicts the scenario.  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <img src=\"19-MementoPatternImage2.jpg\" type=\"image/jpeg\" data-filename=\"Image.jpg\" style=\"box-sizing: border-box; -webkit-tap-highlight-color: transparent; -webkit-font-smoothing: antialiased; border: 0px; height: 22.28em; max-width: 100%; vertical-align: middle; margin: 0px; padding: 2px;\" width=\"330\">  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "s,I~]4UMAm",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"width: 846px; padding: 8px; border: 1px solid;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   16 - Template Method Pattern.&nbsp; &nbsp;can you give the gof definition of the template method pattern ?  </div></td></tr>",
                        "<tr> <td style=\"width: 846px; padding: 8px; border: 1px solid;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">    Define the skeleton of an algorithm in an operation, deferring some steps to subclasses. Template method lets subclasses redefine certain steps of an algorithm without changing the algorithm’s structure.  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "p/>-:;5G}r",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   16 - Template Method Pattern.&nbsp; &nbsp;Can you show the uml diagram of the template method pattern ?  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">    In a template method, you define the minimum or essential structure of an algorithm. Then you defer some responsibilities to the subclasses. The key intent is that you can redefine certain steps of an algorithm, but those changes should not impact the basic flow of the algorithm.  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   So, this design pattern is useful when you implement a multistep algorithm and you want to allow customization through subclasses.  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <br>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <img src=\"16-TemplateMethodPatternImage.jpg\" type=\"image/jpeg\" data-filename=\"Image.jpg\" width=\"511\">  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "Cf(mcT^5?(",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   16 - Template Method Pattern.&nbsp; &nbsp;Can you give an implementation of the template method pattern ?  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   R. Here’s the implementation:  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\"><br></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">package jdp2e.templatemethod.demo;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">abstract class BasicEngineering</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;//Making the method final to prevent overriding.</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public final void completeCourse()</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;//The course needs to be completed in the following sequence</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;//1.Math-2.SoftSkills-3.Special Paper</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;//Common Papers:</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;completeMath();</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;completeSoftSkills();</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;//Specialization Paper:</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;completeSpecialPaper();</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;private void completeMath()</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\"1.Mathematics\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;private void completeSoftSkills()</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\"2.SoftSkills\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public abstract void completeSpecialPaper();</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">class ComputerScience extends BasicEngineering</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;@Override</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public void completeSpecialPaper() {</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\"3.Object-Oriented Programming\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">class Electronics extends BasicEngineering</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;@Override</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public void completeSpecialPaper()</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\"3.Digital Logic and Circuit Theory\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">public class TemplateMethodPatternExample {</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public static void main(String[] args) {</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\"***Template Method Pattern Demo***\\n\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;BasicEngineering preferrredCourse = new ComputerScience();</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\"Computer Sc. course will be completed in following order:\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;<a href=\"http://preferrredCourse.completeCourse%28%29%3B\">preferrredCourse.completeCourse();</a></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println();</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;preferrredCourse = new Electronics();</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\"Electronics course will be completed in following order:\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;<a href=\"http://preferrredCourse.completeCourse%28%29%3B\">preferrredCourse.completeCourse();</a></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">}</font>  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "OUmB7na?em",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   16 - Template Method Pattern.&nbsp; &nbsp;   <span style=\"font-weight: bold;\">Consider a situation like this: Suppose you want to add some more methods in the BasicEngineering class but you want to work on those methods if and only if, the child classes need them otherwise you will ignore them. This type of situation is very common in some PhD courses where some courses are not mandatory for all candidates. For example, if a student has certain qualifications, he/she may not need to attend the lectures of those subjects. Can you design this kind of situation with the Template Method Pattern?</span>  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <b>&nbsp;</b>Yes, we can. Basically, you may need to put a    <span style=\"font-weight: bold;\">hook</span> which is nothing but a method that can help us to control the flow in an algorithm.  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   To show an example of this kind of design, I am adding one more method in BasicEngineering called is    <span style=\"font-weight: bold;\">AdditionalPapersNeeded()</span> . Let us assume that Computer science students need to complete this course, but Electronics students can opt out this paper. Let’s go through the program and output.  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   Here’s the modified implementation. Key changes are shown in bold.  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\"><br></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">package jdp2e.templatemethod.questions_answers;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">abstract class BasicEngineering</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;//Making the method final to prevent overriding.</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public final void completeCourse()</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;//The course needs to be completed in the following sequence</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;//1.Math-2.SoftSkills-3.Special Paper-4.Additional Papers(if any)</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;//Common Papers:</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;completeMath();</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;completeSoftSkills();</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;//Specialization Paper:</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;completeSpecialPaper();</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;if (isAdditionalPapersNeeded())</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;completeAdditionalPapers();</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;private void completeMath()</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\"1.Mathematics\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;private void completeSoftSkills()</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\"2.SoftSkills\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public abstract void completeSpecialPaper();</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;<span style=\"font-weight: bold;\">private void completeAdditionalPapers()</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;<span style=\"font-weight: bold;\">{</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;<span style=\"font-weight: bold;\">System.</span><span style=\"font-style: italic; font-weight: bold;\">out</span><span style=\"font-weight: bold;\">.println(\"4.Additional Papers are needed for this course.\");</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;<span style=\"font-weight: bold;\">}</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;<span style=\"font-weight: bold;\">//By default, AdditionalPapers are needed for a course</span> <span style=\"font-weight: bold;\">.</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;<span style=\"font-weight: bold;\">boolean isAdditionalPapersNeeded()</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;<span style=\"font-weight: bold;\">{</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;<span style=\"font-weight: bold;\">return true;</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;<span style=\"font-weight: bold;\">}</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">class ComputerScience extends BasicEngineering</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;@Override</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public void completeSpecialPaper()</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\"3.Object-Oriented Programming\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;//Additional papers are needed for ComputerScience</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;//So, there is no change for the hook method.</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">class Electronics extends BasicEngineering</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;@Override</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public void completeSpecialPaper()</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\"3.Digital Logic and Circuit Theory\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;<span style=\"font-weight: bold;\">//Overriding the hook method:</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;<span style=\"font-weight: bold;\">//Indicating that AdditionalPapers are not needed for Electronics.</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;@Override</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;<span style=\"font-weight: bold;\">public &nbsp;boolean isAdditionalPapersNeeded()</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;<span style=\"font-weight: bold;\">{</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;<span style=\"font-weight: bold;\">return false;</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;<span style=\"font-weight: bold;\">}</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">public class TemplateMethodPatternModifiedExample {</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public static void main(String[] args) {</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\"***Template Method Pattern Modified Demo***\\n\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;BasicEngineering preferrredCourse = new ComputerScience();</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\"Computer Sc. course will be completed in following order:\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;<a href=\"http://preferrredcourse.completecourse%28%29%3B/\">preferrredCourse.completeCourse();</a></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println();</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;preferrredCourse = new Electronics();</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\"Electronics course will be completed in following order:\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;<a href=\"http://preferrredcourse.completecourse%28%29%3B/\">preferrredCourse.completeCourse();</a></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">}</font>  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "rpAj7tM@kZ",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   16 - Template Method Pattern.&nbsp; &nbsp;   <span style=\"font-weight: bold;\">What are the key</span>    <span style=\"font-weight: bold;\">advantages</span>    <span style=\"font-weight: bold;\">of using a template design pattern?</span>  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     </div>  <ul>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     You can control the flow of the algorithms. Clients cannot change them. (Notice that completeCourse() is marked with final keyword in the abstract class BasicEngineering)    </div></li>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     Common operations are placed in a centralized location, for example, in an abstract class. The subclasses can redefine only the varying parts, so that, you can avoid redundant codes.    </div></li>  </ul></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "qW}bB2a@36",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   16 - Template Method Pattern.&nbsp; &nbsp;   <span style=\"font-weight: bold;\">What are key challenges associated with a template design pattern?</span>  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <b>&nbsp;</b>  </div>  <ul>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     Client code cannot direct the sequence of steps (If you need that approach, you may follow the Builder pattern).    </div></li>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     A subclass can override a method defined in the parent class (i.e. hiding the original definition in parent class) which can go against Liskov Substitution Principle that basically says: If S is a subtype of T, then objects of type T can be replaced with objects of type S    </div></li>  </ul></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "u:H;qCJ~4&",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   16 - Template Method Pattern.&nbsp; &nbsp;   <span style=\"font-weight: bold;\">Looks like the subclasses can override other parent methods also in the BasicEngineering. Is the understanding correct?</span>  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <b>&nbsp;</b>You can do this but ideally that should not be your intent. In this pattern, you may not want to override all the parent methods entirely to bring the radical changes in the subclasses. In this way, it differs from simple polymorphism.  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "J$q^y1k$3}",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"width: 1134px; padding: 8px; border: 1px solid;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt;\">3 - Builder pattern.&nbsp; &nbsp;&nbsp;</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt;\">can you give the GoF Definition of the builder pattern ?&nbsp;</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt;\">When is useful the builder pattern ?&nbsp;</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt;\">how should be the creational mechanism ?&nbsp;</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 13.3333px;\">Can you give the UML diagram of the builder pattern ?</span>   <span style=\"font-size: 10pt;\">&nbsp;</span>  </div></td></tr>",
                        "<tr> <td style=\"width: 1134px; padding: 8px; border: 1px solid;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt;\"> &nbsp;&nbsp; &nbsp;Separate the construction of a complex object from its representation so that the same construction processes can create different representations.&nbsp;</span>   <span style=\"font-size: 10pt;\">The builder pattern is useful for creating complex objects that have multiple parts. T</span>   <span style=\"font-size: 10pt;\">he creational mechanism of an object should be independent of these parts.&nbsp;</span>   <span style=\"font-size: 10pt;\">&nbsp;The construction process does not care about how these parts are assembled. The same construction process must allow us to create different representations of the objects.</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <img src=\"3-BuilderpatternImage.jpg\" type=\"image/jpeg\" data-filename=\"Image.jpg\" style=\"box-sizing: border-box; -webkit-tap-highlight-color: transparent; -webkit-font-smoothing: antialiased; border: 0px; height: 23.1em; max-width: 100%; vertical-align: middle; margin: 0px; padding: 2px;\" width=\"653\">  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "vjqahi4U73",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"width: 1134px; padding: 8px; border: 1px solid;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt;\">3 - Builder pattern.</span>   <span style=\"font-size: 10pt;\">&nbsp; &nbsp; Can you give an implementation of the builder pattern ?</span>  </div></td></tr>",
                        "<tr> <td style=\"width: 1134px; padding: 8px; border: 1px solid;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-weight: bold;\"></span>   <span style=\"font-size: 10pt;\">&nbsp;&nbsp;&nbsp; &nbsp;</span>   <span style=\"font-size: 10pt;\">Here’s the implementation.</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <br>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">package jdp2e.builder.demo;</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">import java.util.LinkedList;</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">//The common interface</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">interface Builder</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; void startUpOperations();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; void buildBody();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; void insertWheels();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; void addHeadlights();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; void &nbsp;endOperations();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; /*The following method is used to retrieve the object that is constructed.*/</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; Product getVehicle();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">//Car class</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">class Car implements Builder</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;private String brandName;</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;private Product product;</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;public Car(String brand)</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;product = new Product();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;this.brandName = brand;</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;public void startUpOperations()</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp;//Starting with brand name</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;product.add(String.</span>   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;; font-style: italic;\">format</span>   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">(\"Car model is :%s\",this.brandName));</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;public void buildBody()</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;product.add(\"This is a body of a Car\");</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;public void insertWheels()</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;product.add(\"4 wheels are added\");</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;public void addHeadlights()</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;product.add(\"2 Headlights are added\");</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;public void endOperations()</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;{ &nbsp; //Nothing in this case</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;public Product getVehicle()</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;return product;</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">//Motorcycle class</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">class MotorCycle implements Builder</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;private String brandName;</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;private Product product;</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;public MotorCycle(String brand)</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;product = new Product();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;this.brandName = brand;</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;public void startUpOperations()</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;{ &nbsp; //Nothing in this case</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;public &nbsp;void buildBody()</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;product.add(\"This is a body of a Motorcycle\");</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;public void insertWheels()</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;product.add(\"2 wheels are added\");</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;public void addHeadlights()</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;product.add(\"1 Headlights are added\");</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;public void endOperations()</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;//Finishing up with brand name</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;product.add(String.</span>   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;; font-style: italic;\">format</span>   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">(\"Motorcycle model is :%s\", this.brandName));</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;public Product getVehicle()</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;return product;</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">// Product class</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">class Product</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">&nbsp; /* You can use any data structure that you prefer.</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; I have used LinkedList&lt;String&gt; in this case.*/</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;private LinkedList&lt;String&gt; parts;</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;public Product()</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;parts = new LinkedList&lt;String&gt;();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;public void add(String part)</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; //Adding parts</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;parts.addLast(part);</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;public void showProduct()</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp;System.</span>   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;; font-style: italic;\">out</span>   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">.println(\"\\nProduct completed as below :\");</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;for (String part: parts)</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;System.</span>   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;; font-style: italic;\">out</span>   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">.println(part);</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">// Director class</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">class Director</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;Builder builder;</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;// Director knows how to use the builder and the sequence of steps.</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;public void construct(Builder builder)</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;this.builder = builder;</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;builder.startUpOperations();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;builder.buildBody();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;builder.insertWheels();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;builder.addHeadlights();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;builder.endOperations();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">public class BuilderPatternExample {</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp;public static void main(String[] args) {</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.</span>   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;; font-style: italic;\">out</span>   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">.println(\"***Builder Pattern Demo***\");</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;Director director = new Director();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;Builder fordCar = new Car(\"Ford\");</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;Builder hondaMotorycle = new MotorCycle(\"Honda\");</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;// Making Car</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;director.construct(fordCar);</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;Product p1 = fordCar.getVehicle();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;p1.showProduct();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;//Making MotorCycle</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;director.construct(hondaMotorycle );</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;Product p2 = hondaMotorycle.getVehicle();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;p2.showProduct();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp;}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-family: &quot;Source Code Pro&quot;;\">}</span>  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "O$Pzy9`!%x",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"width: 1134px; padding: 8px; border: 1px solid;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   3 - Builder pattern.&nbsp;&nbsp; &nbsp;   <span style=\"font-size: 10pt; font-weight: bold;\">What are the</span>    <span style=\"font-size: 10pt; font-weight: bold;\">advantages</span>    <span style=\"font-size: 10pt; font-weight: bold;\">of using a builder pattern?</span>  </div></td></tr>",
                        "<tr> <td style=\"width: 1134px; padding: 8px; border: 1px solid;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-weight: bold;\"></span>  </div>  <ul>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     <span style=\"font-size: 10pt;\">You can create a complex object, step by step, and vary the steps. You promote encapsulation by hiding the details of the complex construction process. The director can retrieve the final product from the builder when the whole construction is over. In general, at a high level, you seem to have only one method that makes the complete product. Other internal methods only involve partial creation. So, you have finer control over the construction process.</span>    </div></li>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     <span style=\"font-size: 10pt;\">Using this pattern, the same construction process can produce different products.</span>    </div></li>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     <span style=\"font-size: 10pt;\">Since you can vary the construction steps, you can vary product’s internal representation.</span>    </div></li>  </ul></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "u^RU`%:-U?",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"width: 1134px; padding: 8px; border: 1px solid;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   3 - Builder pattern.&nbsp;&nbsp; &nbsp;   <span style=\"font-size: 10pt; font-weight: bold;\">What are the</span>    <span style=\"font-size: 10pt; font-weight: bold;\">drawbacks/pitfalls</span>    <span style=\"font-size: 10pt; font-weight: bold;\">associated with the builder pattern?</span>  </div></td></tr>",
                        "<tr> <td style=\"width: 1134px; padding: 8px; border: 1px solid;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-weight: bold;\">&nbsp;&nbsp;&nbsp; &nbsp;</span>  </div>  <ul>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     <span style=\"font-size: 10pt;\">It is not suitable if you want to deal with mutable objects (which can be modified later).</span>    </div></li>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     <span style=\"font-size: 10pt;\">You may need to duplicate some portion of the code. These duplications may have significant impact in some context and turn into an antipattern.</span>    </div></li>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     <span style=\"font-size: 10pt;\">A concrete builder is dedicated to a particular type of product. So, to create different type of products, you may need to come up with different concrete builders.</span>    </div></li>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     <span style=\"font-size: 10pt;\">The approach makes more sense if the structure is very complex.</span>    </div></li>  </ul></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "QhwuP#T!o,",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 1134px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt;\">3 - Builder pattern.&nbsp;&nbsp;&nbsp;</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-weight: bold;\">Can I use an</span>    <span style=\"font-size: 10pt; font-weight: bold;\">abstract class</span>    <span style=\"font-size: 10pt; font-weight: bold;\">instead of the interface in the illustration of this pattern?&nbsp;</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt; font-weight: bold;\">How do I decide whether I should use an abstract class or an interface in an application?</span>  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 1134px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt;\"> &nbsp;&nbsp; &nbsp;</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt;\">Yes. You can use an abstract class instead of an interface in this example.&nbsp;</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt;\">I believe that if you want to have some centralized or default behavior, the abstract class is a better choice. In those cases, you can provide some default implementation. On the other hand, interface implementation starts from scratch. They indicate some kind of rules/contracts on</span>    <span style=\"font-size: 10pt; font-style: italic;\">what</span>    <span style=\"font-size: 10pt;\">is to be done (e.g., you must implement the method) but they will not enforce the</span>    <span style=\"font-size: 10pt; font-style: italic;\">how</span>    <span style=\"font-size: 10pt;\">part of it. Also, interfaces are preferred when you are trying to implement the concept of multiple inheritance.</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt;\">But at the same time, if you need to add a new method in an interface, then you need to track down all the implementations of that interface and you need to put the concrete implementation for that method in all of those places. You can add a new method in an abstract class with a default implementation and the existing code can run smoothly.</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt;\">Java has taken special care with this last point. Java 8 introduced the use of ‘default’ keyword in the interface. You can prefix the default word before the intended method signature and provide a default implementation. Interface methods are public by default, so you do not need to mark it with the keyword public.</span>  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "cg7N}<V*RE",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"width: 1134px; padding: 8px; border: 1px solid;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt;\">3 - Builder pattern.&nbsp; &nbsp; when you should prefer abstract classes or interfaces ?</span>   <br>  </div></td></tr>",
                        "<tr> <td style=\"width: 1134px; padding: 8px; border: 1px solid;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt;\">&nbsp;&nbsp; &nbsp;You should prefer the abstract class in the following scenarios:</span>  </div>  <ul>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     <span style=\"font-size: 10pt;\">You want to share code among multiple closely related classes.</span>    </div></li>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     <span style=\"font-size: 10pt;\">The classes that extend the abstract class can have many common methods or fields, or they require non-public access modifiers inside them.</span>    </div></li>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     <span style=\"font-size: 10pt;\">You want to use non-static or/and non-final fields, which enables us to define methods that can access and modify the state of the object to which they belong.</span>    </div></li>  </ul>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt;\">On the other hand, you should prefer interfaces for these scenarios:</span>  </div>  <ul>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     <span style=\"font-size: 10pt;\">You expect that several unrelated classes are going to implement your interface (e.g., comparable interface can be implemented by many unrelated classes).</span>    </div></li>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     <span style=\"font-size: 10pt;\">You specify the behavior of a particular data type, but it does not matter how the implementer implements that.</span>    </div></li>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     <span style=\"font-size: 10pt;\">You want to use the concept of multiple inheritance in your application.</span>    </div></li>  </ul></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "M>sI&zB0]J",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"width: 1134px; padding: 8px; border: 1px solid;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   3 - Builder pattern.&nbsp; &nbsp;&nbsp;  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   Why using the final keyword in the client code for object construction&nbsp;   <span style=\"font-size: 10pt;\">?&nbsp;</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt;\">What is the key benefit of immutable objects?</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt;\">When should I consider using a builder pattern?</span>  </div></td></tr>",
                        "<tr> <td style=\"width: 1134px; padding: 8px; border: 1px solid;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt;\"> &nbsp;&nbsp;&nbsp;</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt;\">In the client code, I used the final keywords to promote immutability. But in the ProductClass class, the attributes are already marked with private keywords and there are no setter methods, so these are already immutable.</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt;\">Once constructed, they can be safely shared, and most importantly, they are thread safe, so you save lots in synchronization costs in a multithreaded environment.</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt;\">&nbsp;If you need to make a complex object that involves various steps in the construction process, and at the same time, the products need to be immutable, the builder pattern is a good choice.</span>  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "xL<.~1*=/T",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"width: 846px; padding: 8px; border: 1px solid;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   17 - Command Pattern.&nbsp; &nbsp;can you give the gof definition of the command pattern ?  </div></td></tr>",
                        "<tr> <td style=\"width: 846px; padding: 8px; border: 1px solid;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">    Encapsulate a request as an object, thereby letting you parameterize clients with different requests, queues, or log requests, and supports undoable operations.  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "EXF6Vkmr3J",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   17 - Command Pattern.&nbsp; &nbsp;can you show the uml diagram of the command pattern ?  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">    Here you encapsulate a method invocation process. In general, four terms are associated:    <span style=\"font-style: italic;\">invoker</span>,    <span style=\"font-style: italic;\">client</span>,    <span style=\"font-style: italic;\">command</span>, and    <span style=\"font-style: italic;\">receiver</span>. A command object can invoke a method of the receiver in a way that is specific to that receiver’s class. The receiver then starts processing the job. A command object is separately passed to the invoker object to invoke the command. The client object holds the invoker object and the command objects. The client only makes the decision—which commands to execute—and then it passes the command to the invoker object (for that execution).  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <img src=\"17-CommandPatternImage.jpg\" type=\"image/jpeg\" data-filename=\"Image.jpg\" width=\"563\">  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "uqH.x67M*<",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   17 - Command Pattern.&nbsp; &nbsp;Can you show an implementation of the command pattern ?  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">    Here’s the implementation.  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\"><br></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">package <a href=\"http://jdp2e.command.demo%3B/\">jdp2e.command.demo;</a></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">interface Command</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;//Typically this method does not take any argument.</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;//Some of the reasons are:</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;//1.We supply all the information when it is created.</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;//2.Invoker may reside in different address space.etc.</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;void executeCommand();</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">class MyUndoCommand implements Command</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;private Receiver receiver;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public MyUndoCommand(Receiver receiver)</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;this.receiver=receiver;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;@Override</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public void executeCommand()</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;//Perform any optional task prior to UnDo</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;receiver.doOptionalTaskPriorToUndo();</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;//Call UnDo in receiver now</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;receiver.performUndo();</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">class MyRedoCommand implements Command</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;private Receiver receiver;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public MyRedoCommand(Receiver receiver)</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;this.receiver=receiver;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;@Override</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public void executeCommand()</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;//Perform any optional task prior to ReDo</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;receiver.doOptionalTaskPriorToRedo();</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;//Call ReDo in receiver now</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;receiver.performRedo();</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">//Receiver Class</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">class Receiver</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public void performUndo()</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\"Performing an undo command in Receiver.\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public void performRedo()</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\"Performing an redo command in Receiver.\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;/*Optional method-If you want to perform</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; any prior tasks before undo operations.*/</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public void doOptionalTaskPriorToUndo()</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\"Executing -Optional Task/s prior to &nbsp; &nbsp;execute undo command.\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;/*Optional method-If you want to perform</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; any prior tasks before redo operations*/</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public void doOptionalTaskPriorToRedo()</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\"Executing -Optional Task/s prior to &nbsp; &nbsp;execute redo command.\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">//Invoker class</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">class Invoker</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;Command commandToBePerformed;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;//Alternative approach:</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;//You can also initialize the invoker with a command object</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;/*public Invoker(Command command)</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;<a href=\"http://this.commandtobeperformed/\">this.commandToBePerformed</a> = command;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}*/</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;//Set the command</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public void setCommand(Command command)</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;<a href=\"http://this.commandtobeperformed/\">this.commandToBePerformed</a> = command;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;//Invoke the command</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public void invokeCommand()</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;commandToBePerformed.executeCommand();</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">//Client</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">public class CommandPatternExample {</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public static void main(String[] args) {</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\"***Command Pattern Demo***\\n\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;/*Client holds both the Invoker and Command Objects*/</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;Receiver intendedReceiver = new Receiver();</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;MyUndoCommand undoCmd = new MyUndoCommand(intendedReceiver);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;//If you use parameterized constructor of Invoker</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;//use the following line of code.</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;//Invoker invoker = new Invoker(undoCmd);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;Invoker invoker = new Invoker();</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;invoker.setCommand(undoCmd);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;invoker.invokeCommand();</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;MyRedoCommand redoCmd = new MyRedoCommand(intendedReceiver);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;invoker.setCommand(redoCmd);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;invoker.invokeCommand();</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">}</font>  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "rtT57-[rDS",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   17 - Command Pattern.&nbsp; &nbsp;   <span style=\"font-weight: bold;\">I have two questions. In this example, you are dealing with a single receiver only. How can you deal with multiple receivers? And the GoF definition says that this pattern supports undoable operations. Can you show an example with a true undo operation using this pattern?</span>  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <b>&nbsp;</b>Consider the following program. The key characteristics of this program are as follows:  </div>  <ul>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     Here you have two different receivers (Receiver1 and Receiver2). Each of them implements the Receiver interface methods. Since I am dealing with multiple receivers, I introduced a common interface, Receiver.    </div></li>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     In an undo operation, you generally want to reverse the last action or operation. A typical undo operation may involve complex logic. But in the upcoming implementation, I am presenting a simple example that supports undo operations with the following assumptions.    </div>    <ul>     <li>      <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">       A Receiver1 object is initialized with the value 10 (the myNumber instance variable is used for this purpose) and a Receiver2 object is initialized with the “power off” status (the status instance variable is used for this purpose). Any Receiver1 object can keep adding 2 to an existing integer.      </div></li>     <li>      <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">       I have put a checkmark on the value 10, so that when you process an undo operation, if you notice that a Receiver1 object’s myNumber is 10, you will not go beyond (because you started at 10).      </div></li>     <li>      <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">       A Receiver2 object does different things. It can switch a machine on or off. If the machine is already powered on, then by requesting an undo operation, you can switch off the machine and vice versa. But if your machine is already in switch on mode, then a further “switch on” request is ignored.      </div></li>    </ul></li>  </ul></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "P.Mm%9,Z=e",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   17 - Command Pattern.&nbsp; &nbsp;can you show an uml diagram of the command pattern with more participant involved ?  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">    There are many participants and dependencies in the modified class diagram shown in Figure    <a href=\"https://learning.oreilly.com/library/view/java-design-patterns/9781484240786/html/395506_2_En_17_Chapter.xhtml#Fig3\">17-3</a>. To illustrate the main design and keep the diagram neat and clean, I do not show the client code dependencies.  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <img src=\"17-CommandPatternImage1.jpg\" type=\"image/jpeg\" data-filename=\"Image.jpg\" style=\"box-sizing: border-box; -webkit-tap-highlight-color: transparent; -webkit-font-smoothing: antialiased; border: 0px; height: 27.1em; max-width: 100%; vertical-align: middle; margin: 0px; padding: 2px;\" width=\"652\">  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "lnLtcZc&>q",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   17 - Command Pattern.&nbsp; &nbsp;can you show an implementation fo the command pattern with multiple participant involved ?  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-family: &quot;Segoe UI&quot;; font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"> Here’s the modified implementation</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\"><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><br></span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\"><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">package</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">&nbsp;</span><a href=\"http://jdp2e.command.modified.demo%3B/\" style=\"box-sizing: border-box; color: rgb(0, 0, 238); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">jdp2e.command.modified.demo;</a></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">/**</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">*In general, an undo operation involves complex logic.</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">But for simplicity, in this example,I assume that executeDo() can either add 2 with a given integer or it can switch on a machine.</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">Similarly, executeUnDo() can either subtract 2 from a given number() or,</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">it will switch off a machine.But you cannot go beyond the initialized value(i.e.10 in this case)*/</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">interface Command</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">{</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;void executeDo();</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;void executeUnDo();</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">}</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">class AdditionCommand implements Command</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">{</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;private Receiver receiver;</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;public AdditionCommand(Receiver receiver)</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;{</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;this.receiver = receiver;</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;}</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;@Override</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;public void executeDo()</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;{</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;receiver.performDo();</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;}</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;@Override</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;public void executeUnDo()</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;{</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;receiver.performUnDo();</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;}</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">}</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">class PowerCommand implements Command</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">{</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;private Receiver receiver;</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;public PowerCommand(Receiver receiver)</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;{</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;this.receiver = receiver;</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;}</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;@Override</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;public void executeDo()</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;{</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;receiver.performDo();</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;}</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;@Override</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;public void executeUnDo()</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;{</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;receiver.performUnDo();</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;}</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">}</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">//To deal with multiple receivers , we are using interfaces here</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">interface Receiver</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">{</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;//It will add 2 with a number or switch on the m/c</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;void performDo();</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;//It will subtract 2 from a number or switch off the m/c</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;void performUnDo();</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">}</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">//Receiver Class</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">class Receiver1 implements Receiver</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">{</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;private int myNumber;</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;public int getMyNumber()</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;{</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;return myNumber;</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;}</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;public void setMyNumber(int myNumber)</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;{</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;this.myNumber = myNumber;</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;}</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;public Receiver1()</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;{</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;myNumber = 10;</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\"><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">&nbsp; &nbsp; &nbsp; &nbsp;System.</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; font-style: italic;\">out</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">.println(\"Receiver1 initialized with \" + myNumber);</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\"><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">&nbsp; &nbsp; &nbsp; &nbsp;System.</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; font-style: italic;\">out</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">.println(\"The objects of receiver1 cannot set beyond \"+ myNumber);</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;}</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;@Override</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;public void performDo()</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;{</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\"><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">&nbsp; &nbsp; &nbsp; &nbsp;System.</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; font-style: italic;\">out</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">.println(\"Received an addition request.\");</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;int presentNumber = getMyNumber();</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;setMyNumber(presentNumber + 2);</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\"><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">&nbsp; &nbsp; &nbsp; &nbsp;System.</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; font-style: italic;\">out</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">.println(presentNumber +\" + 2 =\"+ this.myNumber);</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;}</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;@Override</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;public void performUnDo()</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;{</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\"><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">&nbsp; &nbsp; &nbsp; &nbsp;System.</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; font-style: italic;\">out</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">.println(\"Received an undo addition request.\");</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;int presentNumber = this.myNumber;</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;//We started with number 10.We'll not decrease further.</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;if (presentNumber &gt; 10)</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;{</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;setMyNumber(this.myNumber - 2);</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\"><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;System.</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; font-style: italic;\">out</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">.println(presentNumber +\" - 2 =\"+ this.myNumber);</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\"><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;System.</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; font-style: italic;\">out</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">.println(\"\\t Undo request processed.\");</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;}</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;else</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;{</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\"><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;System.</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; font-style: italic;\">out</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">.println(\"Nothing more to undo...\");</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;}</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;}</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">}</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">//Receiver2 Class</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">class Receiver2 implements Receiver</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">{</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;boolean status;</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;public Receiver2()</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;{</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\"><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">&nbsp; &nbsp; &nbsp; &nbsp;System.</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; font-style: italic;\">out</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">.println(\"Receiver2 initialized \");</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;status=false;</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;}</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;@Override</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;public void performDo()</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;{</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\"><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">&nbsp; &nbsp; &nbsp; &nbsp;System.</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; font-style: italic;\">out</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">.println(\"Received a system power on request.\");</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;if( status==false)</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;{</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\"><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;System.</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; font-style: italic;\">out</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">.println(\"System is starting up.\");</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;status=true;</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;}</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;else</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;{</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\"><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;System.</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; font-style: italic;\">out</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">.println(\"System is already running.So, power on request is ignored.\");</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;}</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;}</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;@Override</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;public void performUnDo()</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;{</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\"><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">&nbsp; &nbsp; &nbsp; &nbsp;System.</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; font-style: italic;\">out</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">.println(\"Received a undo request.\");</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;if( status==true)</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;{</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\"><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;System.</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; font-style: italic;\">out</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">.println(\"System is currently powered on.\");</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;status=false;</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\"><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;System.</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; font-style: italic;\">out</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">.println(\"\\t Undo request processed.System is switched off now.\");</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;}</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;else</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;{</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\"><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;System.</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; font-style: italic;\">out</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">.println(\"System is switched off at present.\");</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;status=true;</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\"><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;System.</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; font-style: italic;\">out</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">.println(\"\\t Undo request processed.System is powered on now.\");</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;}</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;}</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">}</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">//Invoker class</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">class Invoker</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">{</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;Command commandToBePerformed;</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;public void setCommand(Command command)</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;{</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\"><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">&nbsp; &nbsp; &nbsp; &nbsp;</span><a href=\"http://this.commandtobeperformed/\" style=\"box-sizing: border-box; color: rgb(0, 0, 238); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">this.commandToBePerformed</a><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">&nbsp;</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">= command;</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;}</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;public void executeCommand()</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;{</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;commandToBePerformed.executeDo();</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;}</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;public void undoCommand()</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;{</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;commandToBePerformed.executeUnDo();</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;}</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">}</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">//Client</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">public class ModifiedCommandPatternExample {</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;public static void main(String[] args) {</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\"><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">&nbsp; &nbsp; &nbsp; &nbsp;System.</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; font-style: italic;\">out</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">.println(\"***Command Pattern Q&amp;As***\");</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\"><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">&nbsp; &nbsp; &nbsp; &nbsp;System.</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; font-style: italic;\">out</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">.println(\"***A simple demo with undo supported operations***\\n\");</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;//Client holds &nbsp;both the Invoker and Command Objects</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;//Testing receiver -Receiver1</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\"><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">&nbsp; &nbsp; &nbsp; &nbsp;System.</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; font-style: italic;\">out</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">.println(\"-----Testing operations in Receiver1-----\");</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;Receiver intendedreceiver = new Receiver1();</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;Command currentCmd = new AdditionCommand(intendedreceiver);</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;Invoker invoker = new Invoker();</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;invoker.setCommand(currentCmd);</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\"><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">&nbsp; &nbsp; &nbsp; &nbsp;System.</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; font-style: italic;\">out</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">.println(\"*Testing single do/undo operation*\");</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;invoker.executeCommand();</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;invoker.undoCommand();</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\"><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">&nbsp; &nbsp; &nbsp; &nbsp;System.</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; font-style: italic;\">out</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">.println(\"_______\");</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\"><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">&nbsp; &nbsp; &nbsp; &nbsp;System.</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; font-style: italic;\">out</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">.println(\"**Testing a series of do/undo operations**\");</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;//Executed the command 2 times</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;invoker.executeCommand();</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;//invoker.undoCommand();</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;invoker.executeCommand();</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;//Trying to undo 3 times</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;invoker.undoCommand();</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;invoker.undoCommand();</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;invoker.undoCommand();</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\"><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">&nbsp; &nbsp; &nbsp; &nbsp;System.</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; font-style: italic;\">out</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">.println(\"\\n-----Testing operations in Receiver2-----\");</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;intendedreceiver = new Receiver2();</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;currentCmd = new PowerCommand(intendedreceiver);</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;invoker.setCommand(currentCmd);</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\"><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">&nbsp; &nbsp; &nbsp; &nbsp;System.</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; font-style: italic;\">out</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">.println(\"*Testing single do/undo operation*\");</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;invoker.executeCommand();</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;invoker.undoCommand();</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\"><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">&nbsp; &nbsp; &nbsp; &nbsp;System.</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; font-style: italic;\">out</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">.println(\"_______\");</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\"><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">&nbsp; &nbsp; &nbsp; &nbsp;System.</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; font-style: italic;\">out</span><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">.println(\"**Testing a series of do/undo operations**\");</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;//Executing the command 2 times</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;invoker.executeCommand();</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;invoker.executeCommand();</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;//Trying to undo 3 times</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;invoker.undoCommand();</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;invoker.undoCommand();</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;invoker.undoCommand();</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">&nbsp; &nbsp;}</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><font face=\"Source Code Pro\">}</font></span>  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "AOY|}&kbWB",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   17 - Command Pattern.&nbsp; &nbsp;   <span style=\"font-weight: bold;\">Why do you need the invoker?</span>  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <b>&nbsp;</b>Most of the time, programmers try to encapsulate data and corresponding methods in object-oriented programming. But if you look carefully, you find that in this pattern, you are trying to encapsulate command objects. In other words, you are implementing encapsulation from a different perspective.  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   This approach makes sense when you deal with a complex set of commands.  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   Now let’s review the terms again. You create command objects to shoot them to receivers and invoke some methods. But you execute those commands through an invoker, which calls the methods of the command object (e.g., executeCommand). But for a simple case, this invoker class is not mandatory; for example, consider a case in which a command object has only one method to execute and you are trying to dispense with the invoker to invoke the method. But the invokers may play an important role when you want to keep track of multiple commands in a log file (or in a queue).  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "f;qDDlDD(G",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   17 - Command Pattern.&nbsp; &nbsp;   <span style=\"font-weight: bold;\">Why are you interested in keeping track of these logs?</span>  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <b>&nbsp;</b>They are useful if you want to do the undo or redo operations.  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "E9uNNiiW9}",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   17 - Command Pattern.&nbsp; &nbsp;   <span style=\"font-weight: bold;\">What are the key advantages associated with command patterns?</span>  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <b></b>  </div>  <ul>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     Requests for creation and the ultimate execution are decoupled. Clients may not know how an invoker is performing the operations.    </div></li>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     You can create macros (sequence of commands).    </div></li>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     New commands can be added without affecting the existing system.    </div></li>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     Most importantly, you can support the undo/redo operations.    </div></li>  </ul></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "s!>j3ji0ht",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   17 - Command Pattern.&nbsp; &nbsp;   <span style=\"font-weight: bold;\">What are the challenges associated with command patterns?</span>  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <b></b>  </div>  <ul>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     To support more commands, you need to create more classes. So, maintenance can be difficult as time goes on.    </div></li>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     How to handle errors or make a decision about what to do with return values when an erroneous situation occurs becomes tricky. A client may want to know about those. But here you decouple the command with client codes, so these situations are difficult to handle. The challenge becomes significant in a multithreaded environment where the invoker is also running in a different thread.    </div></li>  </ul></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "Qw33JF7u-a",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"width: 1134px; padding: 8px; border: 1px solid;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   8 - Adapter pattern.&nbsp; &nbsp;  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   Can you give the god definition of the adapter pattern ?&nbsp;  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   Can yougive an example of the use of the adapter pattern ?  </div></td></tr>",
                        "<tr> <td style=\"width: 1134px; padding: 8px; border: 1px solid;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   &nbsp;&nbsp; &nbsp;  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   Convert the interface of a class into another interface that clients expect. Adapter lets classes work together that could not otherwise because of incompatible interfaces.  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   A very common use of this pattern can be seen in an electrical outlet adapter/AC power adapter in international travels. These adapters act as a middleman when an electronic device (let’s say, a laptop) that accepts a US power supply can be plugged into a European power outlet. Consider another example. Suppose that you need to charge your mobile phone, but you see that the switchboard is not compatible with your charger. In this case, you may need to use an adapter. Or, a translator who is translating language for someone can be considered following this pattern in real life.  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   Now you can imagine a situation where you need to plug in an application into an adapter (which is X-shaped in this example) to use the intended interface. Without using this adapter, you cannot properly join the application and the interface.  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   Figure    <a href=\"https://learning.oreilly.com/library/view/java-design-patterns/9781484240786/html/395506_2_En_8_Chapter.xhtml#Fig1\">8-1</a> shows the case before using an adapter.  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <img src=\"8-AdapterpatternImage.jpg\" type=\"image/jpeg\" data-filename=\"Image.jpg\" style=\"box-sizing: border-box; -webkit-tap-highlight-color: transparent; -webkit-font-smoothing: antialiased; border: 0px; height: 11.02em; max-width: 100%; vertical-align: middle; margin: 0px; padding: 2px;\" width=\"416\">  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-style: italic; font-weight: bold;\">Figure 8-1</span>Before using an adapter  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   Figure    <a href=\"https://learning.oreilly.com/library/view/java-design-patterns/9781484240786/html/395506_2_En_8_Chapter.xhtml#Fig2\">8-2</a> shows the case after using an adapter.  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <img src=\"8-AdapterpatternImage1.jpg\" type=\"image/jpeg\" data-filename=\"Image.jpg\" style=\"box-sizing: border-box; -webkit-tap-highlight-color: transparent; -webkit-font-smoothing: antialiased; border: 0px; height: 13.9em; max-width: 100%; vertical-align: middle; margin: 0px; padding: 2px;\" width=\"421\">  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-style: italic; font-weight: bold;\">Figure 8-2</span>After using an adapter  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "vC5qWf14/`",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 1134px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   8 - Adapter pattern.&nbsp; &nbsp;Can you show an implementation of the adapter pattern ?  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 1134px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   &nbsp;&nbsp; &nbsp;A simple use of this pattern is described in the following example.  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   In this example, you can easily calculate the area of a rectangle. If you notice the Calculator class and its getArea() method , you understand that you need to supply a rectangle object in the getArea() method to calculate the area of the rectangle. Now suppose that you want to calculate the area of a triangle, but your constraint is that you want to get the area of it through the getArea()method of the Calculator class. So how can you achieve that?  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   To deal with this type of problem, I made CalculatorAdapter for the Triangle class and passed a triangle in its getArea() method. In turn, the method treats the triangle like a rectangle and calculates the area from the getArea() method of the Calculator class.  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <img src=\"8-AdapterpatternImage2.jpg\" type=\"image/jpeg\" data-filename=\"Image.jpg\" width=\"343\">  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <br>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">package jdp2e.adapter.demo;</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">class Rectangle</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;public double length;</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;public double width;</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">class Calculator</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;public double getArea(Rectangle rect)</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;return rect.length * rect.width;</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">class Triangle</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;public double base;//base</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;public double height;//height</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;public Triangle(int b, int h)</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;this.base = b;</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;this.height = h;</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">class CalculatorAdapter</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;public double getArea(Triangle triangle)</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;Calculator c = new Calculator();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;Rectangle rect = new Rectangle();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;//Area of Triangle=0.5*base*height</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;rect.length = triangle.base;</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;rect.width = 0.5 * triangle.height;</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;return c.getArea(rect);</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">class AdapterPatternExample {</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;public static void main(String[] args) {</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;System.</span>   <span style=\"font-family: &quot;Source Code Pro&quot;; font-style: italic;\">out</span>   <span style=\"font-family: &quot;Source Code Pro&quot;;\">.println(\"***Adapter Pattern Demo***\\n\");</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;CalculatorAdapter calculatorAdapter = new CalculatorAdapter();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;Triangle t = new Triangle(20,10);</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;System.</span>   <span style=\"font-family: &quot;Source Code Pro&quot;; font-style: italic;\">out</span>   <span style=\"font-family: &quot;Source Code Pro&quot;;\">.println(\"Area of Triangle is \" + calculatorAdapter.getArea(t) + \" Square unit\");</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">}</span>  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "tCu>a&-Vk0",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 1134px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   8 - Adapter pattern.&nbsp; &nbsp; What criteria you should follow when using the adapter pattern ?  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 1134px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   &nbsp;&nbsp; &nbsp;If you want to strictly follow object-oriented design principles, you may want to modify the implementation because you have learned that instead of using concrete classes, you should always prefer to use interfaces. So, keeping this key principle in mind, let’s modify an already existing implementation.   <br>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <img src=\"8-AdapterpatternImage3.jpg\" type=\"image/jpeg\" data-filename=\"Image.jpg\" style=\"box-sizing: border-box; -webkit-tap-highlight-color: transparent; -webkit-font-smoothing: antialiased; border: 0px; height: 32.02em; max-width: 100%; vertical-align: middle; margin: 0px; padding: 2px;\" width=\"798\">  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <br>  </div><h3><br></h3>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   The following are the key characteristics of the modified implementation.  </div>  <ul>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     The Rectangle class is implementing RectInterface and the calculateAreaOfRectangle() method helps calculate the area of a rectangle object.    </div></li>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     The Triangle class implements TriInterface and the calculateAreaOfTriangle() method helps calculate the area of a triangle object.    </div></li>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     But the constraint is that you need to calculate the area of the triangle using the RectInterface ( or, you can simply say that your existing system needs to adapt the triangle objects). To serve this purpose, I introduced an adapter(TriangleAdapter), which interacts with the RectInterface interface.    </div></li>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     Neither the rectangle nor the triangle code needs to change. You are simply using the adapter because it implements the RectInterface interface, and using a RectInterface method, you can easily compute the area of a triangle. This is because I am overriding the interface method to delegate to the corresponding method of the class (Triangle) that I am adapting from.    </div></li>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     Notice that getArea(RectInterface) method does not know that through TriangleAdapter, it is actually processing a Triangle object instead of a Rectangle object.    </div></li>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     Notice another important fact and usage. Suppose that in a specific case, you need to play with some rectangle objects that have an area of 200 square units, but you do not have a sufficient number of such objects. But you notice that you have triangle objects whose area are 100 square units. So, using this pattern, you can adapt some of those triangle objects. How? Well, if you look carefully, you find that when using the adapter’s calculateAreaOfRectangle() method, you are actually invoking calculateAreaOfTriangle() of a Triangle object ( i.e., you are delegating the corresponding method of the class you are adapting from). So, you can modify (override) the method body as you need (e.g., in this case, you could multiply the triangle area by 2.0 to get an area of 200 square units (just like a rectangle object with length 20 units and breadth 10 units).    </div></li>  </ul>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <br>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   This technique can help you in a scenario where you may need to deal with objects that are not exactly same but are very similar. In the last part of the client code, I have shown such a usage where the application displays current objects in the system using an enhanced for loop (which was introduced in Java 5.0).  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   This is the modified implementation.  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <br>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">package jdp2e.adapter.modified.demo;</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">import java.util.ArrayList;</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">import java.util.List;</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">interface RectInterface</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;void aboutRectangle();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;double calculateAreaOfRectangle();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">class Rectangle implements RectInterface</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;public double length;</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;public double width;</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;public Rectangle(double length, double width)</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;this.length = length;</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;this.width = width;</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;@Override</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;public void aboutRectangle()</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;System.</span>   <span style=\"font-family: &quot;Source Code Pro&quot;; font-style: italic;\">out</span>   <span style=\"font-family: &quot;Source Code Pro&quot;;\">.println(\"Rectangle object with length: \"+ this.length +\" unit and width :\" +this.width+ \" unit.\");</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;@Override</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;public double calculateAreaOfRectangle()</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;return length * width;</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">interface TriInterface</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;void aboutTriangle();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;double calculateAreaOfTriangle();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">class Triangle implements TriInterface</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;public double base;//base</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;public double height;//height</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;public Triangle(double base, double height)</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;this.base = base;</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;this.height = height;</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;@Override</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;public void aboutTriangle() {</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;System.</span>   <span style=\"font-family: &quot;Source Code Pro&quot;; font-style: italic;\">out</span>   <span style=\"font-family: &quot;Source Code Pro&quot;;\">.println(\"Triangle object with base: \"+ this.base +\" unit and height :\" +this.height+ \" unit.\");</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;@Override</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;public double calculateAreaOfTriangle() {</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;return 0.5 * base * height;</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">/*TriangleAdapter is implementing RectInterface.</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">So, it needs to implement all the methods defined</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">in the target interface.*/</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">class TriangleAdapter implements RectInterface</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;Triangle triangle;</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;public TriangleAdapter(Triangle t)</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;this.triangle = t;</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;@Override</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;public void aboutRectangle() {</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;triangle.aboutTriangle();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;@Override</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;public double calculateAreaOfRectangle() {</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;return triangle.calculateAreaOfTriangle();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">class ModifiedAdapterPatternExample {</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;public static void main(String[] args) {</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;System.</span>   <span style=\"font-family: &quot;Source Code Pro&quot;; font-style: italic;\">out</span>   <span style=\"font-family: &quot;Source Code Pro&quot;;\">.println(\"***Adapter Pattern Modified Demo***\\n\");</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;Rectangle rectangle = new Rectangle(20, 10);</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;System.</span>   <span style=\"font-family: &quot;Source Code Pro&quot;; font-style: italic;\">out</span>   <span style=\"font-family: &quot;Source Code Pro&quot;;\">.println(\"Area of Rectangle is : &nbsp;\"+ rectangle.calculateAreaOfRectangle()+\" Square unit.\");</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;Triangle triangle = new Triangle(10,5);</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;System.</span>   <span style=\"font-family: &quot;Source Code Pro&quot;; font-style: italic;\">out</span>   <span style=\"font-family: &quot;Source Code Pro&quot;;\">.println(\"Area of Triangle is : \"+triangle.calculateAreaOfTriangle()+ \" Square unit.\");</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;RectInterface adapter = new TriangleAdapter(triangle);</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;//Passing a Triangle instead of a Rectangle</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;System.</span>   <span style=\"font-family: &quot;Source Code Pro&quot;; font-style: italic;\">out</span>   <span style=\"font-family: &quot;Source Code Pro&quot;;\">.println(\"Area of Triangle using the triangle adapter is : \"+</span>   <span style=\"font-family: &quot;Source Code Pro&quot;; font-style: italic;\">getArea</span>   <span style=\"font-family: &quot;Source Code Pro&quot;;\">(adapter)+\" Square unit.\");</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;//Some Additional code (Optional) to show the power of adapter</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;//pattern</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;List&lt;RectInterface&gt; rectangleObjects=new ArrayList&lt;RectInterface&gt;();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;rectangleObjects.add(rectangle);</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;//rectangleObjects.add(triangle);//Error</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;rectangleObjects.add(adapter);//Ok</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;System.</span>   <span style=\"font-family: &quot;Source Code Pro&quot;; font-style: italic;\">out</span>   <span style=\"font-family: &quot;Source Code Pro&quot;;\">.println(\"\");</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;System.</span>   <span style=\"font-family: &quot;Source Code Pro&quot;; font-style: italic;\">out</span>   <span style=\"font-family: &quot;Source Code Pro&quot;;\">.println(\"*****Current objects in the system are:******\");</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;for(RectInterface rectObjects:rectangleObjects)</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;rectObjects.aboutRectangle();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;/*getArea(RectInterface r) method &nbsp;does not know that through TriangleAdapter, it is getting a Triangle &nbsp;object instead of a Rectangle object*/</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;static double getArea(RectInterface r)</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;return r.calculateAreaOfRectangle();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">}</span>  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "GPvm|QCmd/",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 1134px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   8 - Adapter pattern.&nbsp; &nbsp;how many kind of adapater there are ?&nbsp;  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 1134px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   &nbsp;&nbsp; &nbsp;GoF explains two types of adapters: class adapters and object adapters.&nbsp;   <span style=\"font-style: italic; font-weight: bold;\">Object Adapters&nbsp;</span>Object adapters adapt through object compositions, as shown in Figure    <a href=\"https://learning.oreilly.com/library/view/java-design-patterns/9781484240786/html/395506_2_En_8_Chapter.xhtml#Fig6\">8-6</a>. The adapter discussed so far is an example of an object adapter.&nbsp;   <span style=\"font-style: italic; font-weight: bold;\">Class Adapters&nbsp;</span>Class adapters adapt through subclassing. They are the promoters of multiple inheritance. But you know that in Java, multiple inheritance through classes is not supported. (You need interfaces to implement the concept of multiple inheritance.)  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "Fm-e>}I6+&",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 1134px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   8 - Adapter pattern.&nbsp; &nbsp;What are the drawbacks associated with this pattern?  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 1134px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   &nbsp;&nbsp; &nbsp;I do not see any big challenges. I believe that you can make an adapter’s job simple and straightforward, but you may need to write some additional code. But the payoff is great—particularly for those legacy systems that cannot be changed but you still need to use them for their stability.   <br>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   At the same time, experts suggest that you do not use different types of validations or add a new behavior to the adapter. Ideally, the job of an adaptar should be limited to only performing simple interface translations.  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "Bda{FR>Wo:",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"width: 846px; padding: 8px; border: 1px solid;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-weight: bold;\">18 - Iterator Pattern.&nbsp; &nbsp;Can you give the gof definition of the iterator pattern ? Whatis the purpose of the Iterator pattern ?</span>  </div></td></tr>",
                        "<tr> <td style=\"width: 846px; padding: 8px; border: 1px solid;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">    Provide a way to access the elements of an aggregate object sequentially without exposing its underlying representation.  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   Using iterators, a client object can traverse a container (or a collection of objects) to access its elements without knowing how these data are stored internally. The concept is very useful when you need to traverse different kinds of collection objects in a standard and uniform way. The following are some important points about this pattern.  </div>  <ul>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     It is often used to traverse the nodes of a tree-like structure. So, in many scenarios, you may notice the use of iterator patterns with composite patterns.    </div></li>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     The role of an iterator is not limited to traversing. This role can vary to support various requirements.    </div></li>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     Clients cannot see the actual traversal mechanism. A client program only uses the iterator methods that are public in nature.    </div></li>  </ul></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "HVBBsZ/[YC",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-weight: bold;\">18 - Iterator Pattern.&nbsp; &nbsp;can you show an uml diagram of the iterator pattern ?</span>  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">    In this chapter, there are three different implementations of the iterator pattern. I’ll start with an example that follows the core theory of this pattern. In the next example, I’ll modify the example using Java’s built-in support of the iterator pattern. In the third and final example, you use this pattern with a different data structure. In the first two examples, I’ll simply use “String” data types but in the final example, I’ll use a complex data type.  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   In the first implementation, let’s assume that in a particular college, an arts department student needs to study four papers (or subjects)—English, history, geography, and psychology. The details of these papers are stored in an array data structure. And your job is to print the curriculum using an iterator.  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   Let’s assume that your iterator currently supports four basic methods: first(), next(), currentItem(), and hasNext().  </div>  <ul>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     The first() method resets the pointer to the first element before you start traversing a data structure.    </div></li>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     The next() method returns the next element in the container.    </div></li>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     The currentItem() method returns the current element of the container that the iterator is pointing at a particular point of time.    </div></li>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     The hasNext() validates whether any next element is available for further processing. So, it helps you determine whether you have reached the end of your container.    </div></li>  </ul><h3><span style=\"font-size: 11pt;\"><br></span></h3>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <img src=\"18-IteratorPatternImage.jpg\" type=\"image/jpeg\" data-filename=\"Image.jpg\" style=\"box-sizing: border-box; -webkit-tap-highlight-color: transparent; -webkit-font-smoothing: antialiased; border: 0px; height: 31.58em; max-width: 100%; vertical-align: middle; margin: 0px; padding: 2px;\" width=\"553\">  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "x-)|%;lLY$",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-weight: bold;\">18 - Iterator Pattern.&nbsp; &nbsp;can you show an implementation of the iterator pattern ?</span>  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">    Here’s the first implementation.  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\"><br></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">package jdp2e.iterator.demo;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">interface Subjects</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;Iterator createIterator();</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">class Arts implements Subjects</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;private String[] papers;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public Arts()</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;papers = new String[] { \"English\",\"History\", \"Geography\",\"Psychology\" };</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public Iterator createIterator()</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;return new ArtsIterator(papers);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">interface Iterator</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;void first();//Reset to first element</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;String next();//To get the next element</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;String currentItem();//To retrieve the current element</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;boolean hasNext();//To check whether there is any next element or not.</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">class ArtsIterator implements Iterator</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;private String[] papers;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;private int position;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public ArtsIterator(String[] papers)</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;this.papers = papers;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;position = 0;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;@Override</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public void first()</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;position = 0;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;@Override</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public String next()</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;//System.out.println(\"Currently pointing to: \"+ this.currentItem()) ;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;return papers[position++];</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;@Override</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public String currentItem()</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;return papers[position];</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;@Override</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public boolean hasNext()</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;if(position &gt;= papers.length)</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;return false;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;return true;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">public class IteratorPatternExample {</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public static void main(String[] args) {</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\"***Iterator Pattern Demo***\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;Subjects artsSubjects = new Arts();</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;Iterator iteratorForArts = artsSubjects.createIterator();</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\"\\n Arts subjects are as follows:\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;while (iteratorForArts.hasNext())</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(iteratorForArts.next());</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;//Moving back to first element</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;iteratorForArts.first();</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\" Currently pointing back to: \"+ iteratorForArts.currentItem());</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">}</font>  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "H*;8W<WcSS",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-weight: bold;\">18 - Iterator Pattern.&nbsp; &nbsp;can you show an implementation of the iterator pattern using default java libraries ?</span>  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">    I used Java’s built-in support for the iterator pattern. Note the inclusion of the following line at the beginning of the program.  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;import java.util.Iterator;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   If you open the source code, you see that this interface has three methods: hasNext(), next(), and remove(). But the remove() method has a default implementation already. So, in the following example, I needed to override the hasNext() and next() methods only.  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   Here you are using the Java’s Iterator interface, so there is no need to define your own Iterator interface.  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   In this modified implementation, key changes are shown in bold.  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <br>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">package jdp2e.iterator.modified.demo;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">import java.util.Iterator;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">interface Subjects</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;//Iterator CreateIterator();</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;<span style=\"font-weight: bold;\">ArtsIterator createIterator();</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">class Arts implements Subjects</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;private String[] papers;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public Arts()</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;papers = new String[] { \"English\",\"History\", \"Geography\",\"Psychology\" };</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;//public Iterator CreateIterator()</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public ArtsIterator createIterator()</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;return new ArtsIterator(papers);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-weight: bold;\"><font face=\"Source Code Pro\">class ArtsIterator implements Iterator&lt;String&gt;</font></span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;private String[] papers;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;private int position;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public ArtsIterator(String[] papers)</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;this.papers = papers;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;position = 0;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public void first()</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;position = 0;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public String currentItem()</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;return papers[position];</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;@Override</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public boolean hasNext()</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;if(position &gt;= papers.length)</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;return false;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;return true;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;@Override</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public String next()</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;return papers[position++];</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\"><span style=\"font-weight: bold;\">public class ModifiedIteratorPatternExample</span> {</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public static void main(String[] args) {</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\"***Modified Iterator Pattern Demo.***\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;Subjects artsSubjects = new Arts();</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;//Iterator IteratorForArts = artsSubjects.createIterator();</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;<span style=\"font-weight: bold;\">ArtsIterator iteratorForArts = artsSubjects.createIterator();</span></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\"\\nArts subjects are as follows:\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;while (iteratorForArts.hasNext())</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(iteratorForArts.next());</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;//Moving back to first element</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;iteratorForArts.first();</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\"Currently pointing to: \"+ iteratorForArts.currentItem());</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">}</font>  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "gToq6o>&D@",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-weight: bold;\">18 - Iterator Pattern.&nbsp; &nbsp;</span>   <span style=\"font-weight: bold;\">What is the use of an iterator pattern?&nbsp;</span>   <span style=\"font-weight: bold;\">What are the key challenges associated with this pattern?</span>  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <b>&nbsp;</b>  </div>  <ul>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     You can traverse an object structure without knowing its internal details. As a result, if you have a collection of different subcollections (e.g., your container is mixed up with arrays, lists, or linked lists, etc.), you can still traverse the overall collection and deal with the elements in a universal way without knowing the internal details or differences among them.    </div></li>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     You can traverse a collection in different ways. You can also provide an implementation that supports multiple traversals simultaneously.    </div></li>  </ul>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <b><br></b>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   Ideally, during a traversal/iteration process, you should not perform any accidental modification to the core architecture.  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "gy260j2<pJ",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-weight: bold;\">18 - Iterator Pattern.&nbsp; &nbsp; In these implementations, I am seeing that you are only using strings of arrays to store and manipulate data. Can you show an iterator pattern implementation that uses a relatively complex data type and a different data structure?</span>  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <b>&nbsp;</b>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   To make these examples simple and straightforward, I only used strings and an array data structure. You can always choose your preferred data structure and apply the same process when you consider a complex data type. For example, consider the following illustration (third implementation) with these key characteristics.  </div>  <ul>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     Here I am using a relatively complex data type, Employee. Each employee object has three things: a name, an identification number (id), and the salary.    </div></li>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     Instead of an array, I used a different data structure, LinkedList, in the following implementation. So, I need to include the following line in this implementation.    </div>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     import java.util.LinkedList;    </div></li>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     I have followed the same approach that I used in the previous example.    </div></li>  </ul>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <br>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">package jdp2e.iterator.questions_answers;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">import java.util.Iterator;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">import java.util.LinkedList;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">class Employee</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;private String name;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;private int id;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;private double salary;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public Employee(String name, int id, double salary )</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;this.name=name;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;this.id=id;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;this.salary=salary;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public String getName() {</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;return name;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public void setName(String name) {</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;this.name = name;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public int getId() {</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;return id;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public void setId(int id) {</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;this.id = id;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public double getSalary() {</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;return salary;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public void setSalary(double salary) {</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;this.salary = salary;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;@Override</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public String toString(){</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;return \"Employee Name: \"+this.getName()+\", ID: \"+this.getId()+ \" and salary: \"+this.getSalary()+\"$\";</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">interface DataBase</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;EmployeeIterator createIterator();</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">class EmployeeDatabase implements DataBase</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;private LinkedList&lt;Employee&gt; employeeList;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public EmployeeDatabase()</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;employeeList = new LinkedList&lt;Employee&gt;();</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;employeeList.add(new Employee(\"Ron\",1, 1000.25));</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;employeeList.add(new Employee(\"Jack\",2, 2000.5));</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;employeeList.add(new Employee(\"Ambrose\",3, 3000.75));</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;employeeList.add(new Employee(\"Jian\",4, 2550.0));</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;employeeList.add(new Employee(\"Alex\",5, 753.83));</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public EmployeeIterator createIterator()</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;return new EmployeeIterator(employeeList);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">class EmployeeIterator implements Iterator&lt;Employee&gt;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;private LinkedList&lt;Employee&gt; employeeList;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;private int position;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public EmployeeIterator(LinkedList&lt;Employee&gt; employeeList)</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;this.employeeList= employeeList;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;position = 0;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;//@Override</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public void first()</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;position = 0;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;//@Override</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public Employee currentItem()</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;return employeeList.get(position);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;@Override</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public Employee next()</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;return employeeList.get(position++);</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;@Override</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public boolean hasNext() {</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;if(position &gt;= employeeList.size())</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;return false;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;return true;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">public class ModifiedIteratorPatternExample2 {</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public static void main(String[] args) {</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\"***Modified Iterator Pattern Demo.Example-2.***\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;DataBase employeesList = new EmployeeDatabase();</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;EmployeeIterator iteratorForEmployee = employeesList.createIterator();</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\"\\n -----Employee details are as follows-----\\n\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;while (iteratorForEmployee.hasNext())</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(iteratorForEmployee.next());</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">}</font>  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "bh<S$/zdq+",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"width: 1134px; padding: 8px; border: 1px solid;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   4- Factory Method Pattern.&nbsp; &nbsp;&nbsp;  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   Could you give the gof definition of the factory method pattern ?&nbsp;  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   When do I need the factory method pattern ?&nbsp;  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   could you give an uml diagram of the factory method pattern ?  </div></td></tr>",
                        "<tr> <td style=\"width: 1134px; padding: 8px; border: 1px solid;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">    &nbsp;&nbsp; &nbsp;  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   Define an interface for creating an object, but let subclasses decide which class to instantiate. Factory method lets a class defer instantiation to subclasses.  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   Whenever you want to define a bast structure of the application and let the subclasses that derive from this abstract class perform the actual instantiation process.  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <img src=\"4-FactoryMethodPatternImage.jpg\" type=\"image/jpeg\" data-filename=\"Image.jpg\" style=\"box-sizing: border-box; -webkit-tap-highlight-color: transparent; -webkit-font-smoothing: antialiased; border: 0px; height: 25.82em; max-width: 100%; vertical-align: middle; margin: 0px; padding: 2px;\" width=\"722\">  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "tUrN#tJl[I",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"width: 1134px; padding: 8px; border: 1px solid;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-size: 10pt;\">4- Factory Method Pattern.&nbsp; &nbsp; could you give an implementation of the factory method pattern ?</span>  </div></td></tr>",
                        "<tr> <td style=\"width: 1134px; padding: 8px; border: 1px solid;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">    &nbsp;&nbsp; &nbsp;Here’s the implementation.  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <br>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">package jdp2e.factorymethod.demo;</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">interface Animal</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; void speak();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; void preferredAction();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">class Dog implements Animal</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; public void speak()</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; {</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;System.</span>   <span style=\"font-family: &quot;Source Code Pro&quot;; font-style: italic;\">out</span>   <span style=\"font-family: &quot;Source Code Pro&quot;;\">.println(\"Dog says: Bow-Wow.\");</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; }</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; public void preferredAction()</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; {</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;System.</span>   <span style=\"font-family: &quot;Source Code Pro&quot;; font-style: italic;\">out</span>   <span style=\"font-family: &quot;Source Code Pro&quot;;\">.println(\"Dogs prefer barking...\\n\");</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; }</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">class Tiger implements Animal</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; public void speak()</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; {</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;System.</span>   <span style=\"font-family: &quot;Source Code Pro&quot;; font-style: italic;\">out</span>   <span style=\"font-family: &quot;Source Code Pro&quot;;\">.println(\"Tiger says: Halum.\");</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; }</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; public void preferredAction()</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; {</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;System.</span>   <span style=\"font-family: &quot;Source Code Pro&quot;; font-style: italic;\">out</span>   <span style=\"font-family: &quot;Source Code Pro&quot;;\">.println(\"Tigers prefer hunting...\\n\");</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; }</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">abstract class AnimalFactory</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">/*Remember that the GoF definition says \"....Factory method lets a class defer instantiation to subclasses.\"</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">In our case, the following method will create a Tiger or Dog but at this point it does not know whether it will get a Dog or a Tiger. This decision will be taken by the subclasses i.e. DogFactory or TigerFactory. So,in this implementation, the following method is playing the role of a factory (of creation)*/</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; public abstract Animal createAnimal();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">class DogFactory extends AnimalFactory</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; public Animal createAnimal()</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; {</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;//Creating a Dog</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;return new Dog();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; }</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">class TigerFactory extends AnimalFactory</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; public Animal createAnimal()</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; {</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;//Creating a Tiger</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;return new Tiger();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; }</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">class FactoryMethodPatternExample {</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; public static void main(String[] args) {</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;System.</span>   <span style=\"font-family: &quot;Source Code Pro&quot;; font-style: italic;\">out</span>   <span style=\"font-family: &quot;Source Code Pro&quot;;\">.println(\"***Factory Pattern Demo***\\n\");</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// Creating a Tiger Factory</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;AnimalFactory tigerFactory =new TigerFactory();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// Creating a tiger using the Factory Method</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Animal aTiger = tigerFactory.createAnimal();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;aTiger.speak();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;aTiger.preferredAction();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// Creating a DogFactory</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;AnimalFactory dogFactory = new DogFactory();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// Creating a dog using the Factory Method</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Animal aDog = dogFactory.createAnimal();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;aDog.speak();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;aDog.preferredAction();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; }</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">}</span>  </div><h3>NB: MODIFIED IMPLEMENTATION</h3>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   In this implementation, the AnimalFactory class is an abstract class. The following are the key characteristics of the design.  </div>  <ul>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     Only AnimalFactory is modified as follows (i.e., I am introducing a new makeAnimal() method).    </div></li>  </ul>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <br>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">//Modifying the AnimalFactory class.</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">abstract class AnimalFactory</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;public Animal makeAnimal()</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;{</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp;System.</span>   <span style=\"font-family: &quot;Source Code Pro&quot;; font-style: italic;\">out</span>   <span style=\"font-family: &quot;Source Code Pro&quot;;\">.println(\"I am inside makeAnimal() of AnimalFactory.You cannot ignore my rules.\");</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;/*</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;At this point, it doesn't know whether it will get a Dog or a Tiger. It will be decided by the subclasses i.e.DogFactory or TigerFactory.But it knows that it will Speak and it will have a preferred way of Action.</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;*/</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;Animal animal = createAnimal();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;animal.speak();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;animal.preferredAction();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;return animal;</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp;}</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">/*Remember that the GoF definition says \"....Factory method lets a class defer instantiation to subclasses.\"</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">In our case, the following method will create a Tiger or Dog but at this point it does not know whether it will get a Dog or a Tiger.</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">This decision will be taken by the subclasses i.e. DogFactory or TigerFactory. So,in this implementation, the following method is playing the role of a factory (of creation)*/</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; public abstract Animal createAnimal();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">}</span>  </div>  <ul>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     Client code has adapted these changes:    </div></li>  </ul>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">class ModifiedFactoryMethodPatternExample {</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; public static void main(String[] args) {</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;System.</span>   <span style=\"font-family: &quot;Source Code Pro&quot;; font-style: italic;\">out</span>   <span style=\"font-family: &quot;Source Code Pro&quot;;\">.println(\"***Modified Factory Pattern Demo***\\n\");</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// Creating a Tiger Factory</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;AnimalFactory tigerFactory =new TigerFactory();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// Creating a tiger using the Factory Method</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Animal aTiger = tigerFactory.makeAnimal();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;//aTiger.speak();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;//aTiger.preferredAction();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// Creating a DogFactory</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;AnimalFactory dogFactory = new DogFactory();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// Creating a dog using the Factory Method</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Animal aDog = dogFactory.makeAnimal();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;//aDog.speak();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;//aDog.preferredAction();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">&nbsp; &nbsp; &nbsp; }</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">}</span>  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "O%_.7O|e:(",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"width: 1134px; padding: 8px; border: 1px solid;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   4- Factory Method Pattern.&nbsp; &nbsp;&nbsp;What are the advantages of using a factory like this?  </div></td></tr>",
                        "<tr> <td style=\"width: 1134px; padding: 8px; border: 1px solid;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     </div>  <ul>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     You are separating code that can vary from the code that does not vary (i.e., the advantages of using a simple factory pattern is still present). This technique helps you easily maintain code.    </div></li>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     Your code is not tightly coupled; so, you can add new classes like Lion, Beer, and so forth, at any time in the system without modifying the existing architecture. So, you have followed the “closed for modification but open for extension” principle.    </div></li>  </ul></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "s`s^}{KI)d",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"width: 1134px; padding: 8px; border: 1px solid;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   4- Factory Method Pattern.&nbsp; &nbsp;&nbsp;What are the challenges of using a factory like this?   <br>  </div></td></tr>",
                        "<tr> <td style=\"width: 1134px; padding: 8px; border: 1px solid;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   &nbsp;&nbsp; &nbsp;If you need to deal with a large number of classes, then you may encounter maintenance overhead.   <br>  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "zHrP2Yegie",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 1134px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   4- Factory Method Pattern.&nbsp; &nbsp;&nbsp;I see that the factory pattern is supporting two parallel hierarchies. Is this correct?  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 1134px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">    Good catch. Yes, from the class diagram (see Figure    <a href=\"https://learning.oreilly.com/library/view/java-design-patterns/9781484240786/html/395506_2_En_4_Chapter.xhtml#Fig3\">4-3</a>), it is evident that this pattern supports parallel class hierarchies.  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <img src=\"4-FactoryMethodPatternImage1.jpg\" type=\"image/jpeg\" data-filename=\"Image.jpg\" style=\"box-sizing: border-box; -webkit-tap-highlight-color: transparent; -webkit-font-smoothing: antialiased; border: 0px; height: 20.5em; max-width: 100%; vertical-align: middle; margin: 0px; padding: 2px;\" width=\"765\">  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <br>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   So, in this example, AnimalFactory, DogFactory, and TigerFactory are placed in one hierarchy, and Animal, Dog, and Tiger are placed in another hierarchy. So, the creators and their creations/products are two hierarchies running in parallel.  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "LPxR*(M8AQ",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 1134px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   4- Factory Method Pattern.&nbsp; &nbsp;&nbsp;I should always mark the factory method with an abstract keyword so that subclasses can complete them. Is this correct?  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 1134px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"color: rgb(0, 0, 0); font-family: &quot;Segoe UI&quot;; font-size: medium; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"> &nbsp;&nbsp; &nbsp;No. You may be interested in a default factory method if the creator has no subclasses. And in that case, you cannot mark the factory method with the abstract keyword.</span>  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "O/92+~IX8-",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 1134px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-weight: bold;\">4- Factory Method Pattern.&nbsp;&nbsp; &nbsp;</span>   <span style=\"font-weight: bold;\">It still appears to me that the factory method pattern is not much different from simple factory. Is this correct?</span>  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 1134px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">    &nbsp;&nbsp; &nbsp;If you look at the subclasses in the examples in both chapters, you may find some similarities. But you should not forget the key aim of the factory method pattern is that it is supplying the framework through which different subclasses can make different products. But in a simple factory, you cannot vary the products like you can with the factory method pattern. Think of simple factory as a    <span style=\"font-style: italic;\">one-time deal</span> but most importantly, your creational part will not be closed for modification. Whenever you want to add a new stuff, you need to add an if/else block or a switch statement in the factory class of your simple factory pattern.  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "HQ6%fOjh9@",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 1134px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   4- Factory Method Pattern.&nbsp; &nbsp;&nbsp;In the factory method pattern, I can simply use a subclassing mechanism (i.e., using inheritance) and then implement the factory method (that is defined in the parent class). Is this correct?  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 1134px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   &nbsp;&nbsp; &nbsp;The answer to this question is yes if you want to strictly follow the GoF definitions. But it is important to note that in many applications/implementations, there is no use of an abstract class or interface; for example, in Java, an XML reader object is used like this:  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <br>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">//Some code before…</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">XMLReader xmlReader1 = XMLReaderFactory.</span>   <span style=\"font-family: &quot;Source Code Pro&quot;; font-style: italic;\">createXMLReader</span>   <span style=\"font-family: &quot;Source Code Pro&quot;;\">();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">//Some code after</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <br>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   XMLReaderFactory is a final class in Java. So, you cannot inherit from it. But when you use SAXPaserFactory, as follows, you are using an abstract class SAXParserFactory.  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <br>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">//some code before….</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">SAXParserFactory factory = SAXParserFactory.</span>   <span style=\"font-family: &quot;Source Code Pro&quot;; font-style: italic;\">newInstance</span>   <span style=\"font-family: &quot;Source Code Pro&quot;;\">();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">SAXParser parser = factory.newSAXParser();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">XMLReader xmlReader2 = parser.getXMLReader();</span>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <span style=\"font-family: &quot;Source Code Pro&quot;;\">//Some code after</span>  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "h*:%LRePai",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"width: 846px; padding: 8px; border: 1px solid;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   15 - Strategy Pattern.&nbsp; &nbsp;can you give the gof definition of the strategy pattern ?  </div></td></tr>",
                        "<tr> <td style=\"width: 846px; padding: 8px; border: 1px solid;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">    Define a family of algorithms, encapsulate each one, and make them interchangeable. Strategy lets the algorithm vary independently from the clients that use it.  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "Gc*?C50?#D",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   15 - Strategy Pattern.&nbsp; &nbsp;can you show an uml diagram that explains the strategy pattern ?  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">    Before you proceed, let’s keep in mind the following points.  </div>  <ul>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     The strategy pattern encourages you to use object composition instead of subclassing. So, it suggests you do      <span style=\"font-style: italic;\">not</span> override parent class behaviors in different subclasses. Instead, you put these behaviors in separate classes (called a      <span style=\"font-style: italic;\">strategy</span>) that share a common interface.    </div></li>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     The client class only decides which algorithm to use; the context class does not decide that.    </div></li>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     A context object contains reference variables for the strategy objects’ interface type. So, you can obtain different behaviors by changing the strategy in the context.    </div></li>  </ul>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   In the following implementation, the Vehicle class is an abstract class that plays the role of a context. Boat and Aeroplane are two concrete implementations of the Vehicle class. You know that they are associated with different behaviors: one travels through water and the other one travels through air.  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   These behaviors are placed in two concrete classes: AirTransport and WaterTransport. These classes share a common interface, TransportMedium. So, these concrete classes are playing the role of the strategy classes where different behaviors are reflected through the transport() method implementations.  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   In the Vehicle class, there is a method called showTransportMedium() . Using this method, I am delegating the task to the corresponding behavior class. So, once you pick your strategy, the corresponding behavior can be invoked. Notice that in the Vehicle class, there is a method called commonJob(),which is not supposed to vary in the future, so its behavior is not treated as a volatile behavior.  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <br>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <img src=\"15-StrategyPatternImage.jpg\" type=\"image/jpeg\" data-filename=\"Image.jpg\" style=\"box-sizing: border-box; -webkit-tap-highlight-color: transparent; -webkit-font-smoothing: antialiased; border: 0px; height: 19.35em; max-width: 100%; vertical-align: middle; margin: 0px; padding: 2px;\" width=\"624\">  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "wQ]u_{^01)",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   15 - Strategy Pattern.&nbsp; &nbsp;can you show an implementation of the strategy pattern ?  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">    Here’s the implementation.  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\"><br></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">// Vehicle.java</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">package jdp2e.strategy.demo;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">//Context class</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">public abstract class Vehicle</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;/*A context object contains reference variable/s for the strategy object/s interface type.*/</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;TransportMedium transportMedium;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public Vehicle()</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public void showTransportMedium()</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;//Delegate the task to the //corresponding behavior class.</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;transportMedium.transport();</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;//The code that does not vary.</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public void commonJob()</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\"We all can be used to transport\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public abstract void showMe();</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">// Boat.java</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">package jdp2e.strategy.demo;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">public class Boat extends Vehicle</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public Boat()</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;transportMedium= new WaterTransport();</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;@Override</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public void showMe() {</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\"I am a boat.\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">// Aeroplane.java</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">package jdp2e.strategy.demo;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">public class Aeroplane extends Vehicle</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public Aeroplane()</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;transportMedium= new AirTransport();</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;@Override</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public void showMe() {</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\"I am an aeroplane.\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">// TransportMedium.java</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">package jdp2e.strategy.demo;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">public interface TransportMedium</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public void transport();</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">//WaterTransport.java</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">package jdp2e.strategy.demo;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">//This class represents an algorithm/behavior .</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">public class WaterTransport implements TransportMedium</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;@Override</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public void transport()</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\"I am transporting in water.\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">//AirTransport.java</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">package jdp2e.strategy.demo;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">//This class represents an algorithm/behavior.</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">public class AirTransport implements TransportMedium</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;@Override</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public void transport()</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\"I am transporting in air.\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">// StrategyPatternExample.java</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">package jdp2e.strategy.demo;</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">//Client code</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">public class StrategyPatternExample {</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public static void main(String[] args) {</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\"***Strategy Pattern Demo***\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;Vehicle vehicleContext=new Boat();</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;vehicleContext.showMe();</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;vehicleContext.showTransportMedium();</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\"________\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;vehicleContext=new Aeroplane();</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;vehicleContext.showMe();</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;vehicleContext.showTransportMedium();</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">}</font>  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "NEjqQhW6fN",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   15 - Strategy Pattern.&nbsp; &nbsp;   <span style=\"font-weight: bold;\">Why are you complicating the example by avoiding simple subclassing of these behaviors?</span>  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <b>&nbsp;</b>In object-oriented programming, you may prefer to use the concept of polymorphism so that your code can pick the intended object (among different object types) at runtime, leaving your code unchanged.  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   When you are familiar with design patterns, most often, you prefer composition over inheritance.  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   Strategy patterns help you combine composition with polymorphism. Let’s examine the reasons behind this.  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   It is assumed that you try to use the following guidelines in any application you write:  </div>  <ul>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     Separate the code that varies a lot from the part of code that does not vary.    </div></li>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     Try to maintain the varying parts as freestanding as possible (for easy maintenance).    </div></li>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     Try to reuse them as much as possible.    </div></li>  </ul>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   Following these guidelines, I have used composition to extract and encapsulate the volatile/varying parts of the code, so that the whole task can be handled easily, and you can reuse them.  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   But when you use inheritance, your parent class can provide a default implementation, and then the derived class changes it (Java calls it    <span style=\"font-style: italic;\">overriding it</span>). The next derived class can further modify the implementation, so you are basically spreading out the tasks over different levels, which may cause severe maintenance and extensibility issues in the future  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "e^XfmX24n7",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   15 - Strategy Pattern.&nbsp; &nbsp;   <span style=\"font-weight: bold;\">If this is the case, you could create a separate interface, TransportInterface, and place the showTransportMedium() method in that interface. Now any class that wants to get the method can implement that interface also. Is this understanding correct?</span>  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">    Yes, you can do that. But this is what the code looks like:   <br>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\"><br></font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">abstract class Vehicle</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;//The code that does not vary.</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public void commonJob()</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\"We all can be used to transport\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public abstract void showMe();</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">interface TransportInterface</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;void showTransportMedium();</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">class Aeroplane extends Vehicle implements TransportInterface</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;@Override</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public void showMe() {</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\"I am an aeroplane.\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;@Override</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public void showTransportMedium() {</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\"I am transporting in air.\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">class Boat extends Vehicle implements TransportInterface</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;@Override</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public void showMe()</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;{</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\"I am a boat.\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;@Override</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;public void showTransportMedium() {</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp; &nbsp; &nbsp;System.<span style=\"font-style: italic;\">out</span>.println(\"I am transporting in water.\");</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">&nbsp; &nbsp;}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">}</font>  </div>  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <font face=\"Source Code Pro\">You can see that each class and its subclasses may need to provide its own implementations for the showTransportMedium() method. So, you cannot reuse your code, which is as bad as inheritance in this case.</font>  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "PMe3N[y|<w",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   15 - Strategy Pattern.&nbsp; &nbsp;   <span style=\"font-weight: bold;\">Can you use an abstract class instead of an interface?</span>  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <b>&nbsp;&nbsp;</b>Yes. It is suitable in some cases where you may want to put common behaviors in the abstract class. I discussed it in detail in the “Q&amp;A Session” section on the builder pattern.  </div></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "dS>~&X^4^6",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   15 - Strategy Pattern.&nbsp; &nbsp;   <span style=\"font-weight: bold;\">What are the key</span>    <span style=\"font-weight: bold;\">advantages</span>    <span style=\"font-weight: bold;\">of using a strategy design pattern?</span>  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">    This pattern makes your classes independent from algorithms. Here, a class delegates the algorithms to the strategy object (that encapsulates the algorithm) dynamically at runtime. So, you can simply say that the choice of the algorithm is not bound at compile time.  </div>  <ul>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     Easier maintenance of your codebase.    </div></li>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     It is easily extendable. (Refer to the answers for questions 2 and 3 in this context.)    </div></li>  </ul></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "suvr>JT=Ke",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "data": "",
                    "fields": [
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   15 - Strategy Pattern.&nbsp; &nbsp;   <span style=\"font-weight: bold;\">What are key challenges associated with a strategy design pattern?</span>  </div></td></tr>",
                        "<tr> <td style=\"border: 1px solid rgb(204, 204, 204); width: 846px; padding: 8px;\">  <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">   <b>&nbsp;</b>  </div>  <ul>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     The addition of context classes causes more objects in our application.    </div></li>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     Users of the application must be aware of different strategies; otherwise, the output may surprise them. So, there exists a tight coupling between the client code and the implementation of different strategies.    </div></li>   <li>    <div align=\"left\" text-align=\"left\" font style=\"font-size: 10pt\" margin=\"auto\">     When you introduce a new behavior/algorithm, you may need to change the client code also.    </div></li>  </ul></td></tr>"
                    ],
                    "flags": 0,
                    "guid": "KP)d#H1hY8",
                    "note_model_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
                    "tags": []
                }
            ]
        }
    ],
    "crowdanki_uuid": "0b74db58-fb01-11e9-947e-fc3fdb11e8d6",
    "deck_config_uuid": "382713e5-faf3-11e9-9fd4-fc3fdb11e8d6",
    "deck_configurations": [
        {
            "__type__": "DeckConfig",
            "autoplay": false,
            "crowdanki_uuid": "382713e5-faf3-11e9-9fd4-fc3fdb11e8d6",
            "dyn": false,
            "lapse": {
                "delays": [
                    10
                ],
                "leechAction": 0,
                "leechFails": 8,
                "minInt": 1,
                "mult": 0.0
            },
            "maxTaken": 60,
            "name": "normal twenty question",
            "new": {
                "bury": true,
                "delays": [
                    1,
                    10
                ],
                "initialFactor": 2500,
                "ints": [
                    1,
                    4,
                    7
                ],
                "order": 1,
                "perDay": 20,
                "separate": true
            },
            "replayq": false,
            "rev": {
                "bury": true,
                "ease4": 1.3,
                "fuzz": 0.05,
                "hardFactor": 1.2,
                "ivlFct": 1.0,
                "maxIvl": 36500,
                "minSpace": 1,
                "perDay": 100
            },
            "timer": 0
        }
    ],
    "desc": "",
    "dyn": 0,
    "extendNew": 10,
    "extendRev": 50,
    "media_files": [],
    "name": "Java",
    "note_models": [
        {
            "__type__": "NoteModel",
            "crowdanki_uuid": "3827d754-faf3-11e9-ac68-fc3fdb11e8d6",
            "css": ".card {\n font-family: arial;\n font-size: 20px;\n text-align: center;\n color: black;\n background-color: white;\n}",
            "flds": [
                {
                    "font": "Arial",
                    "media": [],
                    "name": "Front",
                    "ord": 0,
                    "rtl": false,
                    "size": 20,
                    "sticky": false
                },
                {
                    "font": "Arial",
                    "media": [],
                    "name": "Back",
                    "ord": 1,
                    "rtl": false,
                    "size": 20,
                    "sticky": false
                }
            ],
            "latexPost": "\\end{document}",
            "latexPre": "\\documentclass[12pt]{article}\n\\special{papersize=3in,5in}\n\\usepackage[utf8]{inputenc}\n\\usepackage{amssymb,amsmath}\n\\pagestyle{empty}\n\\setlength{\\parindent}{0in}\n\\begin{document}\n",
            "name": "Basic-1bad4",
            "req": [
                [
                    0,
                    "all",
                    [
                        0
                    ]
                ]
            ],
            "sortf": 0,
            "tags": [],
            "tmpls": [
                {
                    "afmt": "{{FrontSide}}\n\n<hr id=answer>\n\n{{Back}}",
                    "bafmt": "",
                    "bfont": "Arial",
                    "bqfmt": "",
                    "bsize": 12,
                    "did": null,
                    "name": "Card 1",
                    "ord": 0,
                    "qfmt": "{{Front}}"
                }
            ],
            "type": 0,
            "vers": []
        }
    ],
    "notes": []
}